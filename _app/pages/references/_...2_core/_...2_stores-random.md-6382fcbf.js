import{S as da,i as Ea,s as _a,e as E,t as i,k as u,w as p,c as _,a as F,h as f,d as l,m as d,x as t,b as A,g as $,M as y,y as o,j as Fa,q as r,o as D,B as c,_ as Aa,E as ua}from"../../../chunks/index-fdc571c5.js";import{f as va}from"../../../chunks/scroll-fc938a7a.js";import{C as b}from"../../../chunks/CodeFence-bf275b3f.js";import{C as g}from"../../../chunks/CodeInline-03f5d050.js";import{L as h}from"../../../chunks/Link-d2aa795f.js";import{A as ga}from"../../../chunks/Admonition-ec3c5d9c.js";import"../../../chunks/singletons-01f6dffe.js";import"../../../chunks/contexts-ecb88871.js";function ha(C){let a,n,m,O,T;return{c(){a=E("p"),n=i("The random number generator used is not guaranteed to be cryptographically secure "),m=E("strong"),O=i("OR"),T=i(" the same algorithm between Svelte-In-Motion versions!")},l(w){a=_(w,"P",{});var v=F(a);n=f(v,"The random number generator used is not guaranteed to be cryptographically secure "),m=_(v,"STRONG",{});var q=F(m);O=f(q,"OR"),q.forEach(l),T=f(v," the same algorithm between Svelte-In-Motion versions!"),v.forEach(l)},m(w,v){$(w,a,v),y(a,n),y(a,m),y(m,O),y(a,T)},p:ua,d(w){w&&l(a)}}}function Ta(C){let a,n,m,O,T;return{c(){a=E("p"),n=i("Always generate your numbers in the same order, or deterministic generation can "),m=E("strong"),O=i("NOT"),T=i(" be guaranteed.")},l(w){a=_(w,"P",{});var v=F(a);n=f(v,"Always generate your numbers in the same order, or deterministic generation can "),m=_(v,"STRONG",{});var q=F(m);O=f(q,"NOT"),q.forEach(l),T=f(v," be guaranteed."),v.forEach(l)},m(w,v){$(w,a,v),y(a,n),y(a,m),y(m,O),y(a,T)},p:ua,d(w){w&&l(a)}}}function wa(C){let a;return{c(){a=i("Svelte Stores")},l(n){a=f(n,"Svelte Stores")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function ba(C){let a;return{c(){a=i("#")},l(n){a=f(n,"#")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function Oa(C){let a;return{c(){a=i("#")},l(n){a=f(n,"#")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function Na(C){let a;return{c(){a=i("#")},l(n){a=f(n,"#")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function xa(C){let a;return{c(){a=i("#")},l(n){a=f(n,"#")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function ka(C){let a;return{c(){a=i("#")},l(n){a=f(n,"#")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function Ra(C){let a;return{c(){a=i("Svelte Context")},l(n){a=f(n,"Svelte Context")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function Sa(C){let a;return{c(){a=i("#")},l(n){a=f(n,"#")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function Ba(C){let a;return{c(){a=i("#")},l(n){a=f(n,"#")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function Ma(C){let a;return{c(){a=i("#")},l(n){a=f(n,"#")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function Xa(C){let a;return{c(){a=i("Svelte Context")},l(n){a=f(n,"Svelte Context")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function qa(C){let a;return{c(){a=i("#")},l(n){a=f(n,"#")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function Ia(C){let a;return{c(){a=i("#")},l(n){a=f(n,"#")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function La(C){let a;return{c(){a=i("#")},l(n){a=f(n,"#")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function Pa(C){let a;return{c(){a=i("Svelte Context")},l(n){a=f(n,"Svelte Context")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function Ha(C){let a;return{c(){a=i("#")},l(n){a=f(n,"#")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function Ga(C){let a;return{c(){a=i("#")},l(n){a=f(n,"#")},m(n,m){$(n,a,m)},d(n){n&&l(a)}}}function Va(C){let a,n=C[0].title+"",m,O,T,w,v,q,N,Os,ve,Ns,he,xs,Te,os,we,Kn,ss,rs,be,Qn,ks,I,Ds,Oe,Rs,Wn,Ss,ns,Bs,Ne,Ms,xe,Yn,Xs,L,cs,ke,qs,Zn,Is,es,Ls,Re,Ps,Se,se,Hs,P,$s,Be,Gs,ne,Vs,as,js,Me,Us,Xe,ee,zs,H,is,qe,Js,ae,k,Ks,Ie,Qs,Le,fs,Pe,le,Ws,G,ys,He,Ys,pe,ls,Zs,Ge,sn,Ve,te,nn,V,ms,je,en,oe,R,an,Ue,ln,ze,pn,Je,re,tn,j,Cs,Ke,on,De,S,rn,Qe,Dn,We,gs,Ye,ce,cn,U,us,Ze,$n,$e,ps,fn,sa,yn,na,ie,mn,z,ds,ea,Cn,fe,B,gn,aa,un,la,dn,pa,ye,En,J,Es,ta,_n,me,M,Fn,oa,An,ra,_s,Da,Ce,vn,K,Fs,ca,hn,ge,ts,Tn,$a,wn,ia,ue,bn,Q,As,fa,On,de,X,Nn,ya,xn,ma,kn,Ca,Ee,Rn,zn;return T=new ga({props:{type:"warning",$$slots:{default:[ha]},$$scope:{ctx:C}}}),v=new ga({props:{type:"danger",$$slots:{default:[Ta]},$$scope:{ctx:C}}}),Os=new g({props:{code:"random"}}),Ns=new g({props:{code:"random_float"}}),xs=new g({props:{code:"random_integer"}}),os=new h({props:{href:"https://svelte.dev/docs#run-time-svelte-store-writable",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[wa]},$$scope:{ctx:C}}}),rs=new h({props:{class:"header-anchor",href:"#imports","aria-hidden":"true",$$slots:{default:[ba]},$$scope:{ctx:C}}}),ks=new b({props:{lang:"typescript",ext:"ts",linesCount:9,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">CONTEXT_RANDOM</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">CONTEXT_RANDOM_FLOAT</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">CONTEXT_RANDOM_INTEGER</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">random</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">random_float</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">random_integer</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),Ds=new h({props:{class:"header-anchor",href:"#random","aria-hidden":"true",$$slots:{default:[Oa]},$$scope:{ctx:C}}}),Rs=new g({props:{code:"random"}}),Ss=new b({props:{lang:"typescript",ext:"ts",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">random</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">?: {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">frame</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IFrameStore</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">seed</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),Bs=new g({props:{code:"random"}}),Ms=new g({props:{code:"0.0...1.0"}}),Xs=new b({props:{lang:"svelte",ext:"svelte",linesCount:17,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">frame</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">random</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    } </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">frame_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">frame</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">random_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">random</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">frame:</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">frame_store</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;my seed!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C8C8C8">$</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">($</span><span style="color: #9CDCFE">random_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),cs=new h({props:{class:"header-anchor",href:"#random-float","aria-hidden":"true",$$slots:{default:[Na]},$$scope:{ctx:C}}}),qs=new g({props:{code:"random_float"}}),Is=new b({props:{lang:"typescript",ext:"ts",linesCount:10,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">random_float</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">?: {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">frame</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IFrameStore</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">seed</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">end</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">start</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),Ls=new g({props:{code:"random_float"}}),Ps=new g({props:{code:"${start}...${end}"}}),Hs=new b({props:{lang:"svelte",ext:"svelte",linesCount:21,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">frame</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">random</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    } </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">frame_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">frame</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">float_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">random</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">frame:</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">frame_store</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;my seed!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">start:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">end:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">4.2</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C8C8C8">$</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">($</span><span style="color: #9CDCFE">float_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),$s=new h({props:{class:"header-anchor",href:"#random-integer","aria-hidden":"true",$$slots:{default:[xa]},$$scope:{ctx:C}}}),Gs=new g({props:{code:"random_integer"}}),Vs=new b({props:{lang:"typescript",ext:"ts",linesCount:10,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">random_float</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">?: {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">frame</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IFrameStore</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">seed</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">end</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">start</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),js=new g({props:{code:"random_integer"}}),Us=new g({props:{code:"${start}...${end}"}}),zs=new b({props:{lang:"svelte",ext:"svelte",linesCount:21,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">frame</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">random</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    } </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">frame_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">frame</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">integer_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">random</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">frame:</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">frame_store</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;my seed!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">start:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">end:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">42</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C8C8C8">$</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">($</span><span style="color: #9CDCFE">integer_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),is=new h({props:{class:"header-anchor",href:"#context-random","aria-hidden":"true",$$slots:{default:[ka]},$$scope:{ctx:C}}}),Js=new g({props:{code:"CONTEXT_RANDOM"}}),Ks=new g({props:{code:"CONTEXT_RANDOM"}}),Qs=new g({props:{code:"random"}}),fs=new h({props:{href:"https://svelte.dev/docs#run-time-svelte-setcontext",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Ra]},$$scope:{ctx:C}}}),Ws=new b({props:{lang:"typescript",ext:"ts",linesCount:8,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">CONTEXT_STATE</span><span style="color: #D4D4D4">: {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">: () </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">: {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">    }) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"><span style="color: #D4D4D4">};</span></span>
<span class="line"></span></code></pre>`}}),ys=new h({props:{class:"header-anchor",href:"#context-random-has","aria-hidden":"true",$$slots:{default:[Sa]},$$scope:{ctx:C}}}),Ys=new g({props:{code:"CONTEXT_RANDOM.has"}}),Zs=new g({props:{code:"CONTEXT_RANDOM.has"}}),sn=new g({props:{code:"frame"}}),nn=new b({props:{lang:"svelte",ext:"svelte",linesCount:6,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">CONTEXT_RANDOM</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">IS_AVAILABLE</span><span style="color: #D4D4D4"> = </span><span style="color: #4FC1FF">CONTEXT_RANDOM</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">();</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),ms=new h({props:{class:"header-anchor",href:"#context-random-get","aria-hidden":"true",$$slots:{default:[Ba]},$$scope:{ctx:C}}}),en=new g({props:{code:"CONTEXT_RANDOM.get"}}),an=new g({props:{code:"CONTEXT_RANDOM.get"}}),ln=new g({props:{code:"random"}}),pn=new g({props:{code:"frame"}}),tn=new b({props:{lang:"svelte",ext:"svelte",linesCount:10,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">CONTEXT_RANDOM</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">random_store</span><span style="color: #D4D4D4"> = </span><span style="color: #4FC1FF">CONTEXT_RANDOM</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;my seed!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C8C8C8">$</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">($</span><span style="color: #9CDCFE">random_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),Cs=new h({props:{class:"header-anchor",href:"#context-random-float","aria-hidden":"true",$$slots:{default:[Ma]},$$scope:{ctx:C}}}),on=new g({props:{code:"CONTEXT_RANDOM_FLOAT"}}),rn=new g({props:{code:"CONTEXT_RANDOM_FLOAT"}}),Dn=new g({props:{code:"random_float"}}),gs=new h({props:{href:"https://svelte.dev/docs#run-time-svelte-setcontext",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Xa]},$$scope:{ctx:C}}}),cn=new b({props:{lang:"typescript",ext:"ts",linesCount:12,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">CONTEXT_STATE</span><span style="color: #D4D4D4">: {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">: () </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">: {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">end</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">start</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">    }) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"><span style="color: #D4D4D4">};</span></span>
<span class="line"></span></code></pre>`}}),us=new h({props:{class:"header-anchor",href:"#context-random-float-has","aria-hidden":"true",$$slots:{default:[qa]},$$scope:{ctx:C}}}),$n=new g({props:{code:"CONTEXT_RANDOM_FLOAT.has"}}),fn=new g({props:{code:"CONTEXT_RANDOM_FLOAT.has"}}),yn=new g({props:{code:"frame"}}),mn=new b({props:{lang:"svelte",ext:"svelte",linesCount:6,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">CONTEXT_RANDOM_FLOAT</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">IS_AVAILABLE</span><span style="color: #D4D4D4"> = </span><span style="color: #4FC1FF">CONTEXT_RANDOM_FLOAT</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">();</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),ds=new h({props:{class:"header-anchor",href:"#context-random-float-get","aria-hidden":"true",$$slots:{default:[Ia]},$$scope:{ctx:C}}}),Cn=new g({props:{code:"CONTEXT_RANDOM_FLOAT.get"}}),gn=new g({props:{code:"CONTEXT_RANDOM_FLOAT.get"}}),un=new g({props:{code:"random_float"}}),dn=new g({props:{code:"frame"}}),En=new b({props:{lang:"svelte",ext:"svelte",linesCount:14,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">CONTEXT_RANDOM_FLOAT</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">float_store</span><span style="color: #D4D4D4"> = </span><span style="color: #4FC1FF">CONTEXT_RANDOM_FLOAT</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;my seed!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">start:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">end:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">4.2</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C8C8C8">$</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">($</span><span style="color: #9CDCFE">float_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),Es=new h({props:{class:"header-anchor",href:"#context-random-integer","aria-hidden":"true",$$slots:{default:[La]},$$scope:{ctx:C}}}),_n=new g({props:{code:"CONTEXT_RANDOM_INTEGER"}}),Fn=new g({props:{code:"CONTEXT_RANDOM_INTEGER"}}),An=new g({props:{code:"random_integer"}}),_s=new h({props:{href:"https://svelte.dev/docs#run-time-svelte-setcontext",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Pa]},$$scope:{ctx:C}}}),vn=new b({props:{lang:"typescript",ext:"ts",linesCount:12,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">CONTEXT_STATE</span><span style="color: #D4D4D4">: {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">: () </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">: {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">end</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">start</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">    }) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"><span style="color: #D4D4D4">};</span></span>
<span class="line"></span></code></pre>`}}),Fs=new h({props:{class:"header-anchor",href:"#context-random-integer-has","aria-hidden":"true",$$slots:{default:[Ha]},$$scope:{ctx:C}}}),hn=new g({props:{code:"CONTEXT_RANDOM_INTEGER.has"}}),Tn=new g({props:{code:"CONTEXT_RANDOM_INTEGER.has"}}),wn=new g({props:{code:"frame"}}),bn=new b({props:{lang:"svelte",ext:"svelte",linesCount:6,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">CONTEXT_RANDOM_INTEGER</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">IS_AVAILABLE</span><span style="color: #D4D4D4"> = </span><span style="color: #4FC1FF">CONTEXT_RANDOM_INTEGER</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">();</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),As=new h({props:{class:"header-anchor",href:"#context-random-integer-get","aria-hidden":"true",$$slots:{default:[Ga]},$$scope:{ctx:C}}}),On=new g({props:{code:"CONTEXT_RANDOM_INTEGER.get"}}),Nn=new g({props:{code:"CONTEXT_RANDOM_INTEGER.get"}}),xn=new g({props:{code:"random_integer"}}),kn=new g({props:{code:"frame"}}),Rn=new b({props:{lang:"svelte",ext:"svelte",linesCount:14,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">CONTEXT_RANDOM_INTEGER</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">integer_store</span><span style="color: #D4D4D4"> = </span><span style="color: #4FC1FF">CONTEXT_RANDOM_INTEGER</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;my seed!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">start:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">end:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">4.2</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C8C8C8">$</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">($</span><span style="color: #9CDCFE">integer_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),{c(){a=E("h1"),m=i(n),O=u(),p(T.$$.fragment),w=u(),p(v.$$.fragment),q=u(),N=E("p"),p(Os.$$.fragment),ve=i(" / "),p(Ns.$$.fragment),he=i(" / "),p(xs.$$.fragment),Te=i(" are "),p(os.$$.fragment),we=i(" that generate random numeric values that are deterministic to the current video frame. As long as the seed remains the same through each playback."),Kn=u(),ss=E("h2"),p(rs.$$.fragment),be=i(" Imports"),Qn=u(),p(ks.$$.fragment),I=E("h2"),p(Ds.$$.fragment),Oe=u(),p(Rs.$$.fragment),Wn=u(),p(Ss.$$.fragment),ns=E("p"),p(Bs.$$.fragment),Ne=i(" generates a random numeric decimal value in the "),p(Ms.$$.fragment),xe=i(" range, derived from the current frame using an Mersenne Twister implementation."),Yn=u(),p(Xs.$$.fragment),L=E("h2"),p(cs.$$.fragment),ke=u(),p(qs.$$.fragment),Zn=u(),p(Is.$$.fragment),es=E("p"),p(Ls.$$.fragment),Re=i(" generates a random float value in the configured "),p(Ps.$$.fragment),Se=i(" range, derived from the current frame."),se=u(),p(Hs.$$.fragment),P=E("h2"),p($s.$$.fragment),Be=u(),p(Gs.$$.fragment),ne=u(),p(Vs.$$.fragment),as=E("p"),p(js.$$.fragment),Me=i(" generates a random integer value in the configured "),p(Us.$$.fragment),Xe=i(" range, derived from the current frame."),ee=u(),p(zs.$$.fragment),H=E("h2"),p(is.$$.fragment),qe=u(),p(Js.$$.fragment),ae=u(),k=E("p"),p(Ks.$$.fragment),Ie=i(" handles making a new "),p(Qs.$$.fragment),Le=i(" Store based on the current "),p(fs.$$.fragment),Pe=i(" if available."),le=u(),p(Ws.$$.fragment),G=E("h3"),p(ys.$$.fragment),He=u(),p(Ys.$$.fragment),pe=u(),ls=E("p"),p(Zs.$$.fragment),Ge=i(" returns if there is an available "),p(sn.$$.fragment),Ve=i(" Store in the current Context."),te=u(),p(nn.$$.fragment),V=E("h3"),p(ms.$$.fragment),je=u(),p(en.$$.fragment),oe=u(),R=E("p"),p(an.$$.fragment),Ue=i(" makes a new "),p(ln.$$.fragment),ze=i(" Store if it can retrieve the "),p(pn.$$.fragment),Je=i(" Store from the current Context."),re=u(),p(tn.$$.fragment),j=E("h2"),p(Cs.$$.fragment),Ke=u(),p(on.$$.fragment),De=u(),S=E("p"),p(rn.$$.fragment),Qe=i(" handles making a new "),p(Dn.$$.fragment),We=i(" Store based on the current "),p(gs.$$.fragment),Ye=i(" if available."),ce=u(),p(cn.$$.fragment),U=E("h3"),p(us.$$.fragment),Ze=u(),p($n.$$.fragment),$e=u(),ps=E("p"),p(fn.$$.fragment),sa=i(" returns if there is an available "),p(yn.$$.fragment),na=i(" Store in the current Context."),ie=u(),p(mn.$$.fragment),z=E("h3"),p(ds.$$.fragment),ea=u(),p(Cn.$$.fragment),fe=u(),B=E("p"),p(gn.$$.fragment),aa=i(" makes a new "),p(un.$$.fragment),la=i(" Store if it can retrieve the "),p(dn.$$.fragment),pa=i(" Store from the current Context."),ye=u(),p(En.$$.fragment),J=E("h2"),p(Es.$$.fragment),ta=u(),p(_n.$$.fragment),me=u(),M=E("p"),p(Fn.$$.fragment),oa=i(" handles making a new "),p(An.$$.fragment),ra=i(" Store based on the current "),p(_s.$$.fragment),Da=i(" if available."),Ce=u(),p(vn.$$.fragment),K=E("h3"),p(Fs.$$.fragment),ca=u(),p(hn.$$.fragment),ge=u(),ts=E("p"),p(Tn.$$.fragment),$a=i(" returns if there is an available "),p(wn.$$.fragment),ia=i(" Store in the current Context."),ue=u(),p(bn.$$.fragment),Q=E("h3"),p(As.$$.fragment),fa=u(),p(On.$$.fragment),de=u(),X=E("p"),p(Nn.$$.fragment),ya=i(" makes a new "),p(xn.$$.fragment),ma=i(" Store if it can retrieve the "),p(kn.$$.fragment),Ca=i(" Store from the current Context."),Ee=u(),p(Rn.$$.fragment),this.h()},l(s){a=_(s,"H1",{});var e=F(a);m=f(e,n),e.forEach(l),O=d(s),t(T.$$.fragment,s),w=d(s),t(v.$$.fragment,s),q=d(s),N=_(s,"P",{});var x=F(N);t(Os.$$.fragment,x),ve=f(x," / "),t(Ns.$$.fragment,x),he=f(x," / "),t(xs.$$.fragment,x),Te=f(x," are "),t(os.$$.fragment,x),we=f(x," that generate random numeric values that are deterministic to the current video frame. As long as the seed remains the same through each playback."),x.forEach(l),Kn=d(s),ss=_(s,"H2",{id:!0,tabindex:!0});var Un=F(ss);t(rs.$$.fragment,Un),be=f(Un," Imports"),Un.forEach(l),Qn=d(s),t(ks.$$.fragment,s),I=_(s,"H2",{id:!0,tabindex:!0});var Sn=F(I);t(Ds.$$.fragment,Sn),Oe=d(Sn),t(Rs.$$.fragment,Sn),Sn.forEach(l),Wn=d(s),t(Ss.$$.fragment,s),ns=_(s,"P",{});var vs=F(ns);t(Bs.$$.fragment,vs),Ne=f(vs," generates a random numeric decimal value in the "),t(Ms.$$.fragment,vs),xe=f(vs," range, derived from the current frame using an Mersenne Twister implementation."),vs.forEach(l),Yn=d(s),t(Xs.$$.fragment,s),L=_(s,"H2",{id:!0,tabindex:!0});var Bn=F(L);t(cs.$$.fragment,Bn),ke=d(Bn),t(qs.$$.fragment,Bn),Bn.forEach(l),Zn=d(s),t(Is.$$.fragment,s),es=_(s,"P",{});var hs=F(es);t(Ls.$$.fragment,hs),Re=f(hs," generates a random float value in the configured "),t(Ps.$$.fragment,hs),Se=f(hs," range, derived from the current frame."),hs.forEach(l),se=d(s),t(Hs.$$.fragment,s),P=_(s,"H2",{id:!0,tabindex:!0});var Mn=F(P);t($s.$$.fragment,Mn),Be=d(Mn),t(Gs.$$.fragment,Mn),Mn.forEach(l),ne=d(s),t(Vs.$$.fragment,s),as=_(s,"P",{});var Ts=F(as);t(js.$$.fragment,Ts),Me=f(Ts," generates a random integer value in the configured "),t(Us.$$.fragment,Ts),Xe=f(Ts," range, derived from the current frame."),Ts.forEach(l),ee=d(s),t(zs.$$.fragment,s),H=_(s,"H2",{id:!0,tabindex:!0});var Xn=F(H);t(is.$$.fragment,Xn),qe=d(Xn),t(Js.$$.fragment,Xn),Xn.forEach(l),ae=d(s),k=_(s,"P",{});var W=F(k);t(Ks.$$.fragment,W),Ie=f(W," handles making a new "),t(Qs.$$.fragment,W),Le=f(W," Store based on the current "),t(fs.$$.fragment,W),Pe=f(W," if available."),W.forEach(l),le=d(s),t(Ws.$$.fragment,s),G=_(s,"H3",{id:!0,tabindex:!0});var qn=F(G);t(ys.$$.fragment,qn),He=d(qn),t(Ys.$$.fragment,qn),qn.forEach(l),pe=d(s),ls=_(s,"P",{});var ws=F(ls);t(Zs.$$.fragment,ws),Ge=f(ws," returns if there is an available "),t(sn.$$.fragment,ws),Ve=f(ws," Store in the current Context."),ws.forEach(l),te=d(s),t(nn.$$.fragment,s),V=_(s,"H3",{id:!0,tabindex:!0});var In=F(V);t(ms.$$.fragment,In),je=d(In),t(en.$$.fragment,In),In.forEach(l),oe=d(s),R=_(s,"P",{});var Y=F(R);t(an.$$.fragment,Y),Ue=f(Y," makes a new "),t(ln.$$.fragment,Y),ze=f(Y," Store if it can retrieve the "),t(pn.$$.fragment,Y),Je=f(Y," Store from the current Context."),Y.forEach(l),re=d(s),t(tn.$$.fragment,s),j=_(s,"H2",{id:!0,tabindex:!0});var Ln=F(j);t(Cs.$$.fragment,Ln),Ke=d(Ln),t(on.$$.fragment,Ln),Ln.forEach(l),De=d(s),S=_(s,"P",{});var Z=F(S);t(rn.$$.fragment,Z),Qe=f(Z," handles making a new "),t(Dn.$$.fragment,Z),We=f(Z," Store based on the current "),t(gs.$$.fragment,Z),Ye=f(Z," if available."),Z.forEach(l),ce=d(s),t(cn.$$.fragment,s),U=_(s,"H3",{id:!0,tabindex:!0});var Pn=F(U);t(us.$$.fragment,Pn),Ze=d(Pn),t($n.$$.fragment,Pn),Pn.forEach(l),$e=d(s),ps=_(s,"P",{});var bs=F(ps);t(fn.$$.fragment,bs),sa=f(bs," returns if there is an available "),t(yn.$$.fragment,bs),na=f(bs," Store in the current Context."),bs.forEach(l),ie=d(s),t(mn.$$.fragment,s),z=_(s,"H3",{id:!0,tabindex:!0});var Hn=F(z);t(ds.$$.fragment,Hn),ea=d(Hn),t(Cn.$$.fragment,Hn),Hn.forEach(l),fe=d(s),B=_(s,"P",{});var Gn=F(B);t(gn.$$.fragment,Gn),aa=f(Gn," makes a new "),t(un.$$.fragment,Gn),la=f(Gn," Store if it can retrieve the "),t(dn.$$.fragment,Gn),pa=f(Gn," Store from the current Context."),Gn.forEach(l),ye=d(s),t(En.$$.fragment,s),J=_(s,"H2",{id:!0,tabindex:!0});var _e=F(J);t(Es.$$.fragment,_e),ta=d(_e),t(_n.$$.fragment,_e),_e.forEach(l),me=d(s),M=_(s,"P",{});var Vn=F(M);t(Fn.$$.fragment,Vn),oa=f(Vn," handles making a new "),t(An.$$.fragment,Vn),ra=f(Vn," Store based on the current "),t(_s.$$.fragment,Vn),Da=f(Vn," if available."),Vn.forEach(l),Ce=d(s),t(vn.$$.fragment,s),K=_(s,"H3",{id:!0,tabindex:!0});var Fe=F(K);t(Fs.$$.fragment,Fe),ca=d(Fe),t(hn.$$.fragment,Fe),Fe.forEach(l),ge=d(s),ts=_(s,"P",{});var Jn=F(ts);t(Tn.$$.fragment,Jn),$a=f(Jn," returns if there is an available "),t(wn.$$.fragment,Jn),ia=f(Jn," Store in the current Context."),Jn.forEach(l),ue=d(s),t(bn.$$.fragment,s),Q=_(s,"H3",{id:!0,tabindex:!0});var Ae=F(Q);t(As.$$.fragment,Ae),fa=d(Ae),t(On.$$.fragment,Ae),Ae.forEach(l),de=d(s),X=_(s,"P",{});var jn=F(X);t(Nn.$$.fragment,jn),ya=f(jn," makes a new "),t(xn.$$.fragment,jn),ma=f(jn," Store if it can retrieve the "),t(kn.$$.fragment,jn),Ca=f(jn," Store from the current Context."),jn.forEach(l),Ee=d(s),t(Rn.$$.fragment,s),this.h()},h(){A(ss,"id","imports"),A(ss,"tabindex","-1"),A(I,"id","random"),A(I,"tabindex","-1"),A(L,"id","random-float"),A(L,"tabindex","-1"),A(P,"id","random-integer"),A(P,"tabindex","-1"),A(H,"id","context-random"),A(H,"tabindex","-1"),A(G,"id","context-random-has"),A(G,"tabindex","-1"),A(V,"id","context-random-get"),A(V,"tabindex","-1"),A(j,"id","context-random-float"),A(j,"tabindex","-1"),A(U,"id","context-random-float-has"),A(U,"tabindex","-1"),A(z,"id","context-random-float-get"),A(z,"tabindex","-1"),A(J,"id","context-random-integer"),A(J,"tabindex","-1"),A(K,"id","context-random-integer-has"),A(K,"tabindex","-1"),A(Q,"id","context-random-integer-get"),A(Q,"tabindex","-1")},m(s,e){$(s,a,e),y(a,m),$(s,O,e),o(T,s,e),$(s,w,e),o(v,s,e),$(s,q,e),$(s,N,e),o(Os,N,null),y(N,ve),o(Ns,N,null),y(N,he),o(xs,N,null),y(N,Te),o(os,N,null),y(N,we),$(s,Kn,e),$(s,ss,e),o(rs,ss,null),y(ss,be),$(s,Qn,e),o(ks,s,e),$(s,I,e),o(Ds,I,null),y(I,Oe),o(Rs,I,null),$(s,Wn,e),o(Ss,s,e),$(s,ns,e),o(Bs,ns,null),y(ns,Ne),o(Ms,ns,null),y(ns,xe),$(s,Yn,e),o(Xs,s,e),$(s,L,e),o(cs,L,null),y(L,ke),o(qs,L,null),$(s,Zn,e),o(Is,s,e),$(s,es,e),o(Ls,es,null),y(es,Re),o(Ps,es,null),y(es,Se),$(s,se,e),o(Hs,s,e),$(s,P,e),o($s,P,null),y(P,Be),o(Gs,P,null),$(s,ne,e),o(Vs,s,e),$(s,as,e),o(js,as,null),y(as,Me),o(Us,as,null),y(as,Xe),$(s,ee,e),o(zs,s,e),$(s,H,e),o(is,H,null),y(H,qe),o(Js,H,null),$(s,ae,e),$(s,k,e),o(Ks,k,null),y(k,Ie),o(Qs,k,null),y(k,Le),o(fs,k,null),y(k,Pe),$(s,le,e),o(Ws,s,e),$(s,G,e),o(ys,G,null),y(G,He),o(Ys,G,null),$(s,pe,e),$(s,ls,e),o(Zs,ls,null),y(ls,Ge),o(sn,ls,null),y(ls,Ve),$(s,te,e),o(nn,s,e),$(s,V,e),o(ms,V,null),y(V,je),o(en,V,null),$(s,oe,e),$(s,R,e),o(an,R,null),y(R,Ue),o(ln,R,null),y(R,ze),o(pn,R,null),y(R,Je),$(s,re,e),o(tn,s,e),$(s,j,e),o(Cs,j,null),y(j,Ke),o(on,j,null),$(s,De,e),$(s,S,e),o(rn,S,null),y(S,Qe),o(Dn,S,null),y(S,We),o(gs,S,null),y(S,Ye),$(s,ce,e),o(cn,s,e),$(s,U,e),o(us,U,null),y(U,Ze),o($n,U,null),$(s,$e,e),$(s,ps,e),o(fn,ps,null),y(ps,sa),o(yn,ps,null),y(ps,na),$(s,ie,e),o(mn,s,e),$(s,z,e),o(ds,z,null),y(z,ea),o(Cn,z,null),$(s,fe,e),$(s,B,e),o(gn,B,null),y(B,aa),o(un,B,null),y(B,la),o(dn,B,null),y(B,pa),$(s,ye,e),o(En,s,e),$(s,J,e),o(Es,J,null),y(J,ta),o(_n,J,null),$(s,me,e),$(s,M,e),o(Fn,M,null),y(M,oa),o(An,M,null),y(M,ra),o(_s,M,null),y(M,Da),$(s,Ce,e),o(vn,s,e),$(s,K,e),o(Fs,K,null),y(K,ca),o(hn,K,null),$(s,ge,e),$(s,ts,e),o(Tn,ts,null),y(ts,$a),o(wn,ts,null),y(ts,ia),$(s,ue,e),o(bn,s,e),$(s,Q,e),o(As,Q,null),y(Q,fa),o(On,Q,null),$(s,de,e),$(s,X,e),o(Nn,X,null),y(X,ya),o(xn,X,null),y(X,ma),o(kn,X,null),y(X,Ca),$(s,Ee,e),o(Rn,s,e),zn=!0},p(s,[e]){(!zn||e&1)&&n!==(n=s[0].title+"")&&Fa(m,n);const x={};e&2&&(x.$$scope={dirty:e,ctx:s}),T.$set(x);const Un={};e&2&&(Un.$$scope={dirty:e,ctx:s}),v.$set(Un);const Sn={};e&2&&(Sn.$$scope={dirty:e,ctx:s}),os.$set(Sn);const vs={};e&2&&(vs.$$scope={dirty:e,ctx:s}),rs.$set(vs);const Bn={};e&2&&(Bn.$$scope={dirty:e,ctx:s}),Ds.$set(Bn);const hs={};e&2&&(hs.$$scope={dirty:e,ctx:s}),cs.$set(hs);const Mn={};e&2&&(Mn.$$scope={dirty:e,ctx:s}),$s.$set(Mn);const Ts={};e&2&&(Ts.$$scope={dirty:e,ctx:s}),is.$set(Ts);const Xn={};e&2&&(Xn.$$scope={dirty:e,ctx:s}),fs.$set(Xn);const W={};e&2&&(W.$$scope={dirty:e,ctx:s}),ys.$set(W);const qn={};e&2&&(qn.$$scope={dirty:e,ctx:s}),ms.$set(qn);const ws={};e&2&&(ws.$$scope={dirty:e,ctx:s}),Cs.$set(ws);const In={};e&2&&(In.$$scope={dirty:e,ctx:s}),gs.$set(In);const Y={};e&2&&(Y.$$scope={dirty:e,ctx:s}),us.$set(Y);const Ln={};e&2&&(Ln.$$scope={dirty:e,ctx:s}),ds.$set(Ln);const Z={};e&2&&(Z.$$scope={dirty:e,ctx:s}),Es.$set(Z);const Pn={};e&2&&(Pn.$$scope={dirty:e,ctx:s}),_s.$set(Pn);const bs={};e&2&&(bs.$$scope={dirty:e,ctx:s}),Fs.$set(bs);const Hn={};e&2&&(Hn.$$scope={dirty:e,ctx:s}),As.$set(Hn)},i(s){zn||(r(T.$$.fragment,s),r(v.$$.fragment,s),r(Os.$$.fragment,s),r(Ns.$$.fragment,s),r(xs.$$.fragment,s),r(os.$$.fragment,s),r(rs.$$.fragment,s),r(ks.$$.fragment,s),r(Ds.$$.fragment,s),r(Rs.$$.fragment,s),r(Ss.$$.fragment,s),r(Bs.$$.fragment,s),r(Ms.$$.fragment,s),r(Xs.$$.fragment,s),r(cs.$$.fragment,s),r(qs.$$.fragment,s),r(Is.$$.fragment,s),r(Ls.$$.fragment,s),r(Ps.$$.fragment,s),r(Hs.$$.fragment,s),r($s.$$.fragment,s),r(Gs.$$.fragment,s),r(Vs.$$.fragment,s),r(js.$$.fragment,s),r(Us.$$.fragment,s),r(zs.$$.fragment,s),r(is.$$.fragment,s),r(Js.$$.fragment,s),r(Ks.$$.fragment,s),r(Qs.$$.fragment,s),r(fs.$$.fragment,s),r(Ws.$$.fragment,s),r(ys.$$.fragment,s),r(Ys.$$.fragment,s),r(Zs.$$.fragment,s),r(sn.$$.fragment,s),r(nn.$$.fragment,s),r(ms.$$.fragment,s),r(en.$$.fragment,s),r(an.$$.fragment,s),r(ln.$$.fragment,s),r(pn.$$.fragment,s),r(tn.$$.fragment,s),r(Cs.$$.fragment,s),r(on.$$.fragment,s),r(rn.$$.fragment,s),r(Dn.$$.fragment,s),r(gs.$$.fragment,s),r(cn.$$.fragment,s),r(us.$$.fragment,s),r($n.$$.fragment,s),r(fn.$$.fragment,s),r(yn.$$.fragment,s),r(mn.$$.fragment,s),r(ds.$$.fragment,s),r(Cn.$$.fragment,s),r(gn.$$.fragment,s),r(un.$$.fragment,s),r(dn.$$.fragment,s),r(En.$$.fragment,s),r(Es.$$.fragment,s),r(_n.$$.fragment,s),r(Fn.$$.fragment,s),r(An.$$.fragment,s),r(_s.$$.fragment,s),r(vn.$$.fragment,s),r(Fs.$$.fragment,s),r(hn.$$.fragment,s),r(Tn.$$.fragment,s),r(wn.$$.fragment,s),r(bn.$$.fragment,s),r(As.$$.fragment,s),r(On.$$.fragment,s),r(Nn.$$.fragment,s),r(xn.$$.fragment,s),r(kn.$$.fragment,s),r(Rn.$$.fragment,s),zn=!0)},o(s){D(T.$$.fragment,s),D(v.$$.fragment,s),D(Os.$$.fragment,s),D(Ns.$$.fragment,s),D(xs.$$.fragment,s),D(os.$$.fragment,s),D(rs.$$.fragment,s),D(ks.$$.fragment,s),D(Ds.$$.fragment,s),D(Rs.$$.fragment,s),D(Ss.$$.fragment,s),D(Bs.$$.fragment,s),D(Ms.$$.fragment,s),D(Xs.$$.fragment,s),D(cs.$$.fragment,s),D(qs.$$.fragment,s),D(Is.$$.fragment,s),D(Ls.$$.fragment,s),D(Ps.$$.fragment,s),D(Hs.$$.fragment,s),D($s.$$.fragment,s),D(Gs.$$.fragment,s),D(Vs.$$.fragment,s),D(js.$$.fragment,s),D(Us.$$.fragment,s),D(zs.$$.fragment,s),D(is.$$.fragment,s),D(Js.$$.fragment,s),D(Ks.$$.fragment,s),D(Qs.$$.fragment,s),D(fs.$$.fragment,s),D(Ws.$$.fragment,s),D(ys.$$.fragment,s),D(Ys.$$.fragment,s),D(Zs.$$.fragment,s),D(sn.$$.fragment,s),D(nn.$$.fragment,s),D(ms.$$.fragment,s),D(en.$$.fragment,s),D(an.$$.fragment,s),D(ln.$$.fragment,s),D(pn.$$.fragment,s),D(tn.$$.fragment,s),D(Cs.$$.fragment,s),D(on.$$.fragment,s),D(rn.$$.fragment,s),D(Dn.$$.fragment,s),D(gs.$$.fragment,s),D(cn.$$.fragment,s),D(us.$$.fragment,s),D($n.$$.fragment,s),D(fn.$$.fragment,s),D(yn.$$.fragment,s),D(mn.$$.fragment,s),D(ds.$$.fragment,s),D(Cn.$$.fragment,s),D(gn.$$.fragment,s),D(un.$$.fragment,s),D(dn.$$.fragment,s),D(En.$$.fragment,s),D(Es.$$.fragment,s),D(_n.$$.fragment,s),D(Fn.$$.fragment,s),D(An.$$.fragment,s),D(_s.$$.fragment,s),D(vn.$$.fragment,s),D(Fs.$$.fragment,s),D(hn.$$.fragment,s),D(Tn.$$.fragment,s),D(wn.$$.fragment,s),D(bn.$$.fragment,s),D(As.$$.fragment,s),D(On.$$.fragment,s),D(Nn.$$.fragment,s),D(xn.$$.fragment,s),D(kn.$$.fragment,s),D(Rn.$$.fragment,s),zn=!1},d(s){s&&l(a),s&&l(O),c(T,s),s&&l(w),c(v,s),s&&l(q),s&&l(N),c(Os),c(Ns),c(xs),c(os),s&&l(Kn),s&&l(ss),c(rs),s&&l(Qn),c(ks,s),s&&l(I),c(Ds),c(Rs),s&&l(Wn),c(Ss,s),s&&l(ns),c(Bs),c(Ms),s&&l(Yn),c(Xs,s),s&&l(L),c(cs),c(qs),s&&l(Zn),c(Is,s),s&&l(es),c(Ls),c(Ps),s&&l(se),c(Hs,s),s&&l(P),c($s),c(Gs),s&&l(ne),c(Vs,s),s&&l(as),c(js),c(Us),s&&l(ee),c(zs,s),s&&l(H),c(is),c(Js),s&&l(ae),s&&l(k),c(Ks),c(Qs),c(fs),s&&l(le),c(Ws,s),s&&l(G),c(ys),c(Ys),s&&l(pe),s&&l(ls),c(Zs),c(sn),s&&l(te),c(nn,s),s&&l(V),c(ms),c(en),s&&l(oe),s&&l(R),c(an),c(ln),c(pn),s&&l(re),c(tn,s),s&&l(j),c(Cs),c(on),s&&l(De),s&&l(S),c(rn),c(Dn),c(gs),s&&l(ce),c(cn,s),s&&l(U),c(us),c($n),s&&l($e),s&&l(ps),c(fn),c(yn),s&&l(ie),c(mn,s),s&&l(z),c(ds),c(Cn),s&&l(fe),s&&l(B),c(gn),c(un),c(dn),s&&l(ye),c(En,s),s&&l(J),c(Es),c(_n),s&&l(me),s&&l(M),c(Fn),c(An),c(_s),s&&l(Ce),c(vn,s),s&&l(K),c(Fs),c(hn),s&&l(ge),s&&l(ts),c(Tn),c(wn),s&&l(ue),c(bn,s),s&&l(Q),c(As),c(On),s&&l(de),s&&l(X),c(Nn),c(xn),c(kn),s&&l(Ee),c(Rn,s)}}}function ja(C,a,n){let m;return Aa(C,va,O=>n(0,m=O)),[m]}class sl extends da{constructor(a){super(),Ea(this,a,ja,Va,_a,{})}}export{sl as default};
