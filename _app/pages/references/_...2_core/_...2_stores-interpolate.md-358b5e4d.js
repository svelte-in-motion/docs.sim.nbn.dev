import{S as ns,i as as,s as es,e as j,t as D,k as M,w as m,c as P,a as W,h as c,d as l,m as z,x as C,b as U,g as t,M as w,y as u,j as ls,q as d,o as E,B as _,_ as ps}from"../../../chunks/index-fdc571c5.js";import{f as ts}from"../../../chunks/scroll-fc938a7a.js";import{C as Z}from"../../../chunks/CodeFence-bf275b3f.js";import{C as ss}from"../../../chunks/CodeInline-03f5d050.js";import{L as O}from"../../../chunks/Link-d2aa795f.js";import"../../../chunks/singletons-01f6dffe.js";import"../../../chunks/contexts-ecb88871.js";function os(o){let a;return{c(){a=D("Svelte Store")},l(n){a=c(n,"Svelte Store")},m(n,p){t(n,a,p)},d(n){n&&l(a)}}}function rs(o){let a;return{c(){a=D("#")},l(n){a=c(n,"#")},m(n,p){t(n,a,p)},d(n){n&&l(a)}}}function Ds(o){let a;return{c(){a=D("#")},l(n){a=c(n,"#")},m(n,p){t(n,a,p)},d(n){n&&l(a)}}}function cs(o){let a;return{c(){a=D("#")},l(n){a=c(n,"#")},m(n,p){t(n,a,p)},d(n){n&&l(a)}}}function is(o){let a,n=o[0].title+"",p,k,r,F,Q,g,R,q,T,G,y,h,V,J,A,f,v,X,K,x,$,b,Y,N,B,L;return F=new ss({props:{code:"interpolate"}}),g=new O({props:{href:"https://svelte.dev/docs#run-time-svelte-store-writable",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[os]},$$scope:{ctx:o}}}),q=new ss({props:{code:"0.0...1.0"}}),h=new O({props:{class:"header-anchor",href:"#imports","aria-hidden":"true",$$slots:{default:[rs]},$$scope:{ctx:o}}}),A=new Z({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">interpolate</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),v=new O({props:{class:"header-anchor",href:"#definitions","aria-hidden":"true",$$slots:{default:[Ds]},$$scope:{ctx:o}}}),x=new Z({props:{lang:"typescript",ext:"ts",linesCount:29,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">interpolate</span><span style="color: #D4D4D4">: (</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">state</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">?: {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #DCDCAA">easing</span><span style="color: #D4D4D4">?: (</span><span style="color: #9CDCFE">completion</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">end</span><span style="color: #D4D4D4">?:</span></span>
<span class="line"><span style="color: #D4D4D4">            | </span><span style="color: #4EC9B0">number</span></span>
<span class="line"><span style="color: #D4D4D4">            | {</span></span>
<span class="line"><span style="color: #D4D4D4">                  </span><span style="color: #9CDCFE">extrapolate</span><span style="color: #D4D4D4">?:</span></span>
<span class="line"><span style="color: #D4D4D4">                      | </span><span style="color: #CE9178">&quot;clamp&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">                      | </span><span style="color: #CE9178">&quot;extend&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">                      | </span><span style="color: #CE9178">&quot;wrap&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">                  </span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">              };</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">start</span><span style="color: #D4D4D4">?:</span></span>
<span class="line"><span style="color: #D4D4D4">            | </span><span style="color: #4EC9B0">number</span></span>
<span class="line"><span style="color: #D4D4D4">            | {</span></span>
<span class="line"><span style="color: #D4D4D4">                  </span><span style="color: #9CDCFE">extrapolate</span><span style="color: #D4D4D4">?:</span></span>
<span class="line"><span style="color: #D4D4D4">                      | </span><span style="color: #CE9178">&quot;clamp&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">                      | </span><span style="color: #CE9178">&quot;extend&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">                      | </span><span style="color: #CE9178">&quot;wrap&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">                  </span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">              };</span></span>
<span class="line"><span style="color: #D4D4D4">    }</span></span>
<span class="line"><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Writable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),b=new O({props:{class:"header-anchor",href:"#usage","aria-hidden":"true",$$slots:{default:[cs]},$$scope:{ctx:o}}}),B=new Z({props:{lang:"typescript",ext:"ts",linesCount:12,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">interpolate</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">interpolate_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">interpolate</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">start:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">0.25</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">end:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">0.8</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">interpolate</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">subscribe</span><span style="color: #D4D4D4">((</span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">({</span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">}));</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">interpolate</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">set</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">0.25</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`{value: 0.3875}\`</span></span>
<span class="line"></span></code></pre>`}}),{c(){a=j("h1"),p=D(n),k=M(),r=j("p"),m(F.$$.fragment),Q=D(" is a "),m(g.$$.fragment),R=D(" for deterministically interating through a range of numeric values via setting a "),m(q.$$.fragment),T=D(" state value."),G=M(),y=j("h2"),m(h.$$.fragment),V=D(" Imports"),J=M(),m(A.$$.fragment),f=j("h2"),m(v.$$.fragment),X=D(" Definitions"),K=M(),m(x.$$.fragment),$=j("h2"),m(b.$$.fragment),Y=D(" Usage"),N=M(),m(B.$$.fragment),this.h()},l(s){a=P(s,"H1",{});var e=W(a);p=c(e,n),e.forEach(l),k=z(s),r=P(s,"P",{});var i=W(r);C(F.$$.fragment,i),Q=c(i," is a "),C(g.$$.fragment,i),R=c(i," for deterministically interating through a range of numeric values via setting a "),C(q.$$.fragment,i),T=c(i," state value."),i.forEach(l),G=z(s),y=P(s,"H2",{id:!0,tabindex:!0});var S=W(y);C(h.$$.fragment,S),V=c(S," Imports"),S.forEach(l),J=z(s),C(A.$$.fragment,s),f=P(s,"H2",{id:!0,tabindex:!0});var H=W(f);C(v.$$.fragment,H),X=c(H," Definitions"),H.forEach(l),K=z(s),C(x.$$.fragment,s),$=P(s,"H2",{id:!0,tabindex:!0});var I=W($);C(b.$$.fragment,I),Y=c(I," Usage"),I.forEach(l),N=z(s),C(B.$$.fragment,s),this.h()},h(){U(y,"id","imports"),U(y,"tabindex","-1"),U(f,"id","definitions"),U(f,"tabindex","-1"),U($,"id","usage"),U($,"tabindex","-1")},m(s,e){t(s,a,e),w(a,p),t(s,k,e),t(s,r,e),u(F,r,null),w(r,Q),u(g,r,null),w(r,R),u(q,r,null),w(r,T),t(s,G,e),t(s,y,e),u(h,y,null),w(y,V),t(s,J,e),u(A,s,e),t(s,f,e),u(v,f,null),w(f,X),t(s,K,e),u(x,s,e),t(s,$,e),u(b,$,null),w($,Y),t(s,N,e),u(B,s,e),L=!0},p(s,[e]){(!L||e&1)&&n!==(n=s[0].title+"")&&ls(p,n);const i={};e&2&&(i.$$scope={dirty:e,ctx:s}),g.$set(i);const S={};e&2&&(S.$$scope={dirty:e,ctx:s}),h.$set(S);const H={};e&2&&(H.$$scope={dirty:e,ctx:s}),v.$set(H);const I={};e&2&&(I.$$scope={dirty:e,ctx:s}),b.$set(I)},i(s){L||(d(F.$$.fragment,s),d(g.$$.fragment,s),d(q.$$.fragment,s),d(h.$$.fragment,s),d(A.$$.fragment,s),d(v.$$.fragment,s),d(x.$$.fragment,s),d(b.$$.fragment,s),d(B.$$.fragment,s),L=!0)},o(s){E(F.$$.fragment,s),E(g.$$.fragment,s),E(q.$$.fragment,s),E(h.$$.fragment,s),E(A.$$.fragment,s),E(v.$$.fragment,s),E(x.$$.fragment,s),E(b.$$.fragment,s),E(B.$$.fragment,s),L=!1},d(s){s&&l(a),s&&l(k),s&&l(r),_(F),_(g),_(q),s&&l(G),s&&l(y),_(h),s&&l(J),_(A,s),s&&l(f),_(v),s&&l(K),_(x,s),s&&l($),_(b),s&&l(N),_(B,s)}}}function ys(o,a,n){let p;return ps(o,ts,k=>n(0,p=k)),[p]}class _s extends ns{constructor(a){super(),as(this,a,ys,is,es,{})}}export{_s as default};
