import{S as fa,i as ya,s as ma,e as E,t as i,k as g,w as p,c as _,a as F,h as f,d as a,m as u,x as t,b as A,g as $,M as y,y as o,j as Ca,q as r,o as D,B as c,_ as ga}from"../../../chunks/index-fdc571c5.js";import{f as ua}from"../../../chunks/scroll-fc938a7a.js";import{C as T}from"../../../chunks/CodeFence-bf275b3f.js";import{C as m}from"../../../chunks/CodeInline-03f5d050.js";import{L as v}from"../../../chunks/Link-d2aa795f.js";import"../../../chunks/singletons-01f6dffe.js";import"../../../chunks/contexts-ecb88871.js";function da(d){let l;return{c(){l=i("Svelte Stores")},l(n){l=f(n,"Svelte Stores")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function Ea(d){let l;return{c(){l=i("#")},l(n){l=f(n,"#")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function _a(d){let l;return{c(){l=i("#")},l(n){l=f(n,"#")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function Fa(d){let l;return{c(){l=i("#")},l(n){l=f(n,"#")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function Aa(d){let l;return{c(){l=i("#")},l(n){l=f(n,"#")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function va(d){let l;return{c(){l=i("#")},l(n){l=f(n,"#")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function Ta(d){let l;return{c(){l=i("Svelte Context")},l(n){l=f(n,"Svelte Context")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function ha(d){let l;return{c(){l=i("#")},l(n){l=f(n,"#")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function wa(d){let l;return{c(){l=i("#")},l(n){l=f(n,"#")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function Na(d){let l;return{c(){l=i("#")},l(n){l=f(n,"#")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function Oa(d){let l;return{c(){l=i("Svelte Context")},l(n){l=f(n,"Svelte Context")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function ba(d){let l;return{c(){l=i("#")},l(n){l=f(n,"#")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function xa(d){let l;return{c(){l=i("#")},l(n){l=f(n,"#")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function ka(d){let l;return{c(){l=i("#")},l(n){l=f(n,"#")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function Ra(d){let l;return{c(){l=i("Svelte Context")},l(n){l=f(n,"Svelte Context")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function Ba(d){let l;return{c(){l=i("#")},l(n){l=f(n,"#")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function Sa(d){let l;return{c(){l=i("#")},l(n){l=f(n,"#")},m(n,C){$(n,l,C)},d(n){n&&a(l)}}}function Ma(d){let l,n=d[0].title+"",C,In,h,As,Ee,vs,_e,Ts,Fe,es,Ae,Vn,K,as,ve,jn,hs,B,ls,Te,ws,Un,Ns,Q,Os,he,bs,we,zn,xs,S,ps,Ne,ks,Jn,Rs,W,Bs,Oe,Ss,be,Kn,Ms,M,ts,xe,Xs,Qn,qs,Y,Is,ke,Ls,Re,Wn,Hs,X,os,Be,Ps,Yn,N,Gs,Se,Vs,Me,rs,Xe,Zn,js,q,Ds,qe,Us,se,Z,zs,Ie,Js,Le,ne,Ks,I,cs,He,Qs,ee,O,Ws,Pe,Ys,Ge,Zs,Ve,ae,sn,L,$s,je,nn,le,b,en,Ue,an,ze,is,Je,pe,ln,H,fs,Ke,pn,te,ss,tn,Qe,on,We,oe,rn,P,ys,Ye,Dn,re,x,cn,Ze,$n,sa,fn,na,De,yn,G,ms,ea,mn,ce,k,Cn,aa,gn,la,Cs,pa,$e,un,V,gs,ta,dn,ie,ns,En,oa,_n,ra,fe,Fn,j,us,Da,An,ye,R,vn,ca,Tn,$a,hn,ia,me,wn,Hn;return As=new m({props:{code:"random"}}),vs=new m({props:{code:"random_float"}}),Ts=new m({props:{code:"random_integer"}}),es=new v({props:{href:"https://svelte.dev/docs#run-time-svelte-store-writable",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[da]},$$scope:{ctx:d}}}),as=new v({props:{class:"header-anchor",href:"#imports","aria-hidden":"true",$$slots:{default:[Ea]},$$scope:{ctx:d}}}),hs=new T({props:{lang:"typescript",ext:"ts",linesCount:9,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">CONTEXT_RANDOM</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">CONTEXT_RANDOM_FLOAT</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">CONTEXT_RANDOM_INTEGER</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">random</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">random_float</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">random_integer</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),ls=new v({props:{class:"header-anchor",href:"#random","aria-hidden":"true",$$slots:{default:[_a]},$$scope:{ctx:d}}}),ws=new m({props:{code:"random"}}),Ns=new T({props:{lang:"typescript",ext:"ts",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">random</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">?: {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">frame</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IFrameStore</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">seed</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),Os=new m({props:{code:"random"}}),bs=new m({props:{code:"0.0...1.0"}}),xs=new T({props:{lang:"svelte",ext:"svelte",linesCount:17,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">frame</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">random</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    } </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">frame_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">frame</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">random_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">random</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">frame:</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">frame_store</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;my seed!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C8C8C8">$</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">($</span><span style="color: #9CDCFE">random_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),ps=new v({props:{class:"header-anchor",href:"#random-float","aria-hidden":"true",$$slots:{default:[Fa]},$$scope:{ctx:d}}}),ks=new m({props:{code:"random_float"}}),Rs=new T({props:{lang:"typescript",ext:"ts",linesCount:10,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">random_float</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">?: {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">frame</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IFrameStore</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">seed</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">end</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">start</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),Bs=new m({props:{code:"random_float"}}),Ss=new m({props:{code:"${start}...${end}"}}),Ms=new T({props:{lang:"svelte",ext:"svelte",linesCount:21,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">frame</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">random</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    } </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">frame_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">frame</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">float_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">random</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">frame:</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">frame_store</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;my seed!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">start:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">end:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">4.2</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C8C8C8">$</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">($</span><span style="color: #9CDCFE">float_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),ts=new v({props:{class:"header-anchor",href:"#random-integer","aria-hidden":"true",$$slots:{default:[Aa]},$$scope:{ctx:d}}}),Xs=new m({props:{code:"random_integer"}}),qs=new T({props:{lang:"typescript",ext:"ts",linesCount:10,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">random_float</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">?: {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">frame</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IFrameStore</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">seed</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">end</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">start</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),Is=new m({props:{code:"random_integer"}}),Ls=new m({props:{code:"${start}...${end}"}}),Hs=new T({props:{lang:"svelte",ext:"svelte",linesCount:21,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">frame</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">random</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    } </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">frame_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">frame</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">integer_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">random</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">frame:</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">frame_store</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;my seed!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">start:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">end:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">42</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C8C8C8">$</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">($</span><span style="color: #9CDCFE">integer_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),os=new v({props:{class:"header-anchor",href:"#context-random","aria-hidden":"true",$$slots:{default:[va]},$$scope:{ctx:d}}}),Ps=new m({props:{code:"CONTEXT_RANDOM"}}),Gs=new m({props:{code:"CONTEXT_RANDOM"}}),Vs=new m({props:{code:"random"}}),rs=new v({props:{href:"https://svelte.dev/docs#run-time-svelte-setcontext",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Ta]},$$scope:{ctx:d}}}),js=new T({props:{lang:"typescript",ext:"ts",linesCount:8,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">CONTEXT_STATE</span><span style="color: #D4D4D4">: {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">: () </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">: {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">    }) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"><span style="color: #D4D4D4">};</span></span>
<span class="line"></span></code></pre>`}}),Ds=new v({props:{class:"header-anchor",href:"#context-random-has","aria-hidden":"true",$$slots:{default:[ha]},$$scope:{ctx:d}}}),Us=new m({props:{code:"CONTEXT_RANDOM.has"}}),zs=new m({props:{code:"CONTEXT_RANDOM.has"}}),Js=new m({props:{code:"frame"}}),Ks=new T({props:{lang:"svelte",ext:"svelte",linesCount:6,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">CONTEXT_RANDOM</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">IS_AVAILABLE</span><span style="color: #D4D4D4"> = </span><span style="color: #4FC1FF">CONTEXT_RANDOM</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">();</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),cs=new v({props:{class:"header-anchor",href:"#context-random-get","aria-hidden":"true",$$slots:{default:[wa]},$$scope:{ctx:d}}}),Qs=new m({props:{code:"CONTEXT_RANDOM.get"}}),Ws=new m({props:{code:"CONTEXT_RANDOM.get"}}),Ys=new m({props:{code:"random"}}),Zs=new m({props:{code:"frame"}}),sn=new T({props:{lang:"svelte",ext:"svelte",linesCount:10,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">CONTEXT_RANDOM</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">random_store</span><span style="color: #D4D4D4"> = </span><span style="color: #4FC1FF">CONTEXT_RANDOM</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;my seed!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C8C8C8">$</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">($</span><span style="color: #9CDCFE">random_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),$s=new v({props:{class:"header-anchor",href:"#context-random-float","aria-hidden":"true",$$slots:{default:[Na]},$$scope:{ctx:d}}}),nn=new m({props:{code:"CONTEXT_RANDOM_FLOAT"}}),en=new m({props:{code:"CONTEXT_RANDOM_FLOAT"}}),an=new m({props:{code:"random_float"}}),is=new v({props:{href:"https://svelte.dev/docs#run-time-svelte-setcontext",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Oa]},$$scope:{ctx:d}}}),ln=new T({props:{lang:"typescript",ext:"ts",linesCount:12,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">CONTEXT_STATE</span><span style="color: #D4D4D4">: {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">: () </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">: {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">end</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">start</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">    }) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"><span style="color: #D4D4D4">};</span></span>
<span class="line"></span></code></pre>`}}),fs=new v({props:{class:"header-anchor",href:"#context-random-float-has","aria-hidden":"true",$$slots:{default:[ba]},$$scope:{ctx:d}}}),pn=new m({props:{code:"CONTEXT_RANDOM_FLOAT.has"}}),tn=new m({props:{code:"CONTEXT_RANDOM_FLOAT.has"}}),on=new m({props:{code:"frame"}}),rn=new T({props:{lang:"svelte",ext:"svelte",linesCount:6,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">CONTEXT_RANDOM_FLOAT</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">IS_AVAILABLE</span><span style="color: #D4D4D4"> = </span><span style="color: #4FC1FF">CONTEXT_RANDOM_FLOAT</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">();</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),ys=new v({props:{class:"header-anchor",href:"#context-random-float-get","aria-hidden":"true",$$slots:{default:[xa]},$$scope:{ctx:d}}}),Dn=new m({props:{code:"CONTEXT_RANDOM_FLOAT.get"}}),cn=new m({props:{code:"CONTEXT_RANDOM_FLOAT.get"}}),$n=new m({props:{code:"random_float"}}),fn=new m({props:{code:"frame"}}),yn=new T({props:{lang:"svelte",ext:"svelte",linesCount:14,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">CONTEXT_RANDOM_FLOAT</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">float_store</span><span style="color: #D4D4D4"> = </span><span style="color: #4FC1FF">CONTEXT_RANDOM_FLOAT</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;my seed!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">start:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">end:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">4.2</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C8C8C8">$</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">($</span><span style="color: #9CDCFE">float_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),ms=new v({props:{class:"header-anchor",href:"#context-random-integer","aria-hidden":"true",$$slots:{default:[ka]},$$scope:{ctx:d}}}),mn=new m({props:{code:"CONTEXT_RANDOM_INTEGER"}}),Cn=new m({props:{code:"CONTEXT_RANDOM_INTEGER"}}),gn=new m({props:{code:"random_integer"}}),Cs=new v({props:{href:"https://svelte.dev/docs#run-time-svelte-setcontext",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Ra]},$$scope:{ctx:d}}}),un=new T({props:{lang:"typescript",ext:"ts",linesCount:12,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">CONTEXT_STATE</span><span style="color: #D4D4D4">: {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">: () </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">: {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">end</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">start</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">    }) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"><span style="color: #D4D4D4">};</span></span>
<span class="line"></span></code></pre>`}}),gs=new v({props:{class:"header-anchor",href:"#context-random-integer-has","aria-hidden":"true",$$slots:{default:[Ba]},$$scope:{ctx:d}}}),dn=new m({props:{code:"CONTEXT_RANDOM_INTEGER.has"}}),En=new m({props:{code:"CONTEXT_RANDOM_INTEGER.has"}}),_n=new m({props:{code:"frame"}}),Fn=new T({props:{lang:"svelte",ext:"svelte",linesCount:6,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">CONTEXT_RANDOM_INTEGER</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">IS_AVAILABLE</span><span style="color: #D4D4D4"> = </span><span style="color: #4FC1FF">CONTEXT_RANDOM_INTEGER</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">();</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),us=new v({props:{class:"header-anchor",href:"#context-random-integer-get","aria-hidden":"true",$$slots:{default:[Sa]},$$scope:{ctx:d}}}),An=new m({props:{code:"CONTEXT_RANDOM_INTEGER.get"}}),vn=new m({props:{code:"CONTEXT_RANDOM_INTEGER.get"}}),Tn=new m({props:{code:"random_integer"}}),hn=new m({props:{code:"frame"}}),wn=new T({props:{lang:"svelte",ext:"svelte",linesCount:14,code:`<pre><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">CONTEXT_RANDOM_INTEGER</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/core&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">integer_store</span><span style="color: #D4D4D4"> = </span><span style="color: #4FC1FF">CONTEXT_RANDOM_INTEGER</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">seed:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;my seed!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">start:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">end:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">4.2</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C8C8C8">$</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">($</span><span style="color: #9CDCFE">integer_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span></code></pre>`}}),{c(){l=E("h1"),C=i(n),In=g(),h=E("p"),p(As.$$.fragment),Ee=i(" / "),p(vs.$$.fragment),_e=i(" / "),p(Ts.$$.fragment),Fe=i(" are "),p(es.$$.fragment),Ae=i(" that generate random numeric values that are deterministic to the current video frame. As long as the seed remains the same through each playback."),Vn=g(),K=E("h2"),p(as.$$.fragment),ve=i(" Imports"),jn=g(),p(hs.$$.fragment),B=E("h2"),p(ls.$$.fragment),Te=g(),p(ws.$$.fragment),Un=g(),p(Ns.$$.fragment),Q=E("p"),p(Os.$$.fragment),he=i(" generates a random numeric decimal value in the "),p(bs.$$.fragment),we=i(" range, derived from the current frame using an Mersenne Twister implementation."),zn=g(),p(xs.$$.fragment),S=E("h2"),p(ps.$$.fragment),Ne=g(),p(ks.$$.fragment),Jn=g(),p(Rs.$$.fragment),W=E("p"),p(Bs.$$.fragment),Oe=i(" generates a random float value in the configured "),p(Ss.$$.fragment),be=i(" range, derived from the current frame."),Kn=g(),p(Ms.$$.fragment),M=E("h2"),p(ts.$$.fragment),xe=g(),p(Xs.$$.fragment),Qn=g(),p(qs.$$.fragment),Y=E("p"),p(Is.$$.fragment),ke=i(" generates a random integer value in the configured "),p(Ls.$$.fragment),Re=i(" range, derived from the current frame."),Wn=g(),p(Hs.$$.fragment),X=E("h2"),p(os.$$.fragment),Be=g(),p(Ps.$$.fragment),Yn=g(),N=E("p"),p(Gs.$$.fragment),Se=i(" handles making a new "),p(Vs.$$.fragment),Me=i(" Store based on the current "),p(rs.$$.fragment),Xe=i(" if available."),Zn=g(),p(js.$$.fragment),q=E("h3"),p(Ds.$$.fragment),qe=g(),p(Us.$$.fragment),se=g(),Z=E("p"),p(zs.$$.fragment),Ie=i(" returns if there is an available "),p(Js.$$.fragment),Le=i(" Store in the current Context."),ne=g(),p(Ks.$$.fragment),I=E("h3"),p(cs.$$.fragment),He=g(),p(Qs.$$.fragment),ee=g(),O=E("p"),p(Ws.$$.fragment),Pe=i(" makes a new "),p(Ys.$$.fragment),Ge=i(" Store if it can retrieve the "),p(Zs.$$.fragment),Ve=i(" Store from the current Context."),ae=g(),p(sn.$$.fragment),L=E("h2"),p($s.$$.fragment),je=g(),p(nn.$$.fragment),le=g(),b=E("p"),p(en.$$.fragment),Ue=i(" handles making a new "),p(an.$$.fragment),ze=i(" Store based on the current "),p(is.$$.fragment),Je=i(" if available."),pe=g(),p(ln.$$.fragment),H=E("h3"),p(fs.$$.fragment),Ke=g(),p(pn.$$.fragment),te=g(),ss=E("p"),p(tn.$$.fragment),Qe=i(" returns if there is an available "),p(on.$$.fragment),We=i(" Store in the current Context."),oe=g(),p(rn.$$.fragment),P=E("h3"),p(ys.$$.fragment),Ye=g(),p(Dn.$$.fragment),re=g(),x=E("p"),p(cn.$$.fragment),Ze=i(" makes a new "),p($n.$$.fragment),sa=i(" Store if it can retrieve the "),p(fn.$$.fragment),na=i(" Store from the current Context."),De=g(),p(yn.$$.fragment),G=E("h2"),p(ms.$$.fragment),ea=g(),p(mn.$$.fragment),ce=g(),k=E("p"),p(Cn.$$.fragment),aa=i(" handles making a new "),p(gn.$$.fragment),la=i(" Store based on the current "),p(Cs.$$.fragment),pa=i(" if available."),$e=g(),p(un.$$.fragment),V=E("h3"),p(gs.$$.fragment),ta=g(),p(dn.$$.fragment),ie=g(),ns=E("p"),p(En.$$.fragment),oa=i(" returns if there is an available "),p(_n.$$.fragment),ra=i(" Store in the current Context."),fe=g(),p(Fn.$$.fragment),j=E("h3"),p(us.$$.fragment),Da=g(),p(An.$$.fragment),ye=g(),R=E("p"),p(vn.$$.fragment),ca=i(" makes a new "),p(Tn.$$.fragment),$a=i(" Store if it can retrieve the "),p(hn.$$.fragment),ia=i(" Store from the current Context."),me=g(),p(wn.$$.fragment),this.h()},l(s){l=_(s,"H1",{});var e=F(l);C=f(e,n),e.forEach(a),In=u(s),h=_(s,"P",{});var w=F(h);t(As.$$.fragment,w),Ee=f(w," / "),t(vs.$$.fragment,w),_e=f(w," / "),t(Ts.$$.fragment,w),Fe=f(w," are "),t(es.$$.fragment,w),Ae=f(w," that generate random numeric values that are deterministic to the current video frame. As long as the seed remains the same through each playback."),w.forEach(a),Vn=u(s),K=_(s,"H2",{id:!0,tabindex:!0});var Ln=F(K);t(as.$$.fragment,Ln),ve=f(Ln," Imports"),Ln.forEach(a),jn=u(s),t(hs.$$.fragment,s),B=_(s,"H2",{id:!0,tabindex:!0});var Nn=F(B);t(ls.$$.fragment,Nn),Te=u(Nn),t(ws.$$.fragment,Nn),Nn.forEach(a),Un=u(s),t(Ns.$$.fragment,s),Q=_(s,"P",{});var ds=F(Q);t(Os.$$.fragment,ds),he=f(ds," generates a random numeric decimal value in the "),t(bs.$$.fragment,ds),we=f(ds," range, derived from the current frame using an Mersenne Twister implementation."),ds.forEach(a),zn=u(s),t(xs.$$.fragment,s),S=_(s,"H2",{id:!0,tabindex:!0});var On=F(S);t(ps.$$.fragment,On),Ne=u(On),t(ks.$$.fragment,On),On.forEach(a),Jn=u(s),t(Rs.$$.fragment,s),W=_(s,"P",{});var Es=F(W);t(Bs.$$.fragment,Es),Oe=f(Es," generates a random float value in the configured "),t(Ss.$$.fragment,Es),be=f(Es," range, derived from the current frame."),Es.forEach(a),Kn=u(s),t(Ms.$$.fragment,s),M=_(s,"H2",{id:!0,tabindex:!0});var bn=F(M);t(ts.$$.fragment,bn),xe=u(bn),t(Xs.$$.fragment,bn),bn.forEach(a),Qn=u(s),t(qs.$$.fragment,s),Y=_(s,"P",{});var _s=F(Y);t(Is.$$.fragment,_s),ke=f(_s," generates a random integer value in the configured "),t(Ls.$$.fragment,_s),Re=f(_s," range, derived from the current frame."),_s.forEach(a),Wn=u(s),t(Hs.$$.fragment,s),X=_(s,"H2",{id:!0,tabindex:!0});var xn=F(X);t(os.$$.fragment,xn),Be=u(xn),t(Ps.$$.fragment,xn),xn.forEach(a),Yn=u(s),N=_(s,"P",{});var U=F(N);t(Gs.$$.fragment,U),Se=f(U," handles making a new "),t(Vs.$$.fragment,U),Me=f(U," Store based on the current "),t(rs.$$.fragment,U),Xe=f(U," if available."),U.forEach(a),Zn=u(s),t(js.$$.fragment,s),q=_(s,"H3",{id:!0,tabindex:!0});var kn=F(q);t(Ds.$$.fragment,kn),qe=u(kn),t(Us.$$.fragment,kn),kn.forEach(a),se=u(s),Z=_(s,"P",{});var Fs=F(Z);t(zs.$$.fragment,Fs),Ie=f(Fs," returns if there is an available "),t(Js.$$.fragment,Fs),Le=f(Fs," Store in the current Context."),Fs.forEach(a),ne=u(s),t(Ks.$$.fragment,s),I=_(s,"H3",{id:!0,tabindex:!0});var Rn=F(I);t(cs.$$.fragment,Rn),He=u(Rn),t(Qs.$$.fragment,Rn),Rn.forEach(a),ee=u(s),O=_(s,"P",{});var z=F(O);t(Ws.$$.fragment,z),Pe=f(z," makes a new "),t(Ys.$$.fragment,z),Ge=f(z," Store if it can retrieve the "),t(Zs.$$.fragment,z),Ve=f(z," Store from the current Context."),z.forEach(a),ae=u(s),t(sn.$$.fragment,s),L=_(s,"H2",{id:!0,tabindex:!0});var Bn=F(L);t($s.$$.fragment,Bn),je=u(Bn),t(nn.$$.fragment,Bn),Bn.forEach(a),le=u(s),b=_(s,"P",{});var J=F(b);t(en.$$.fragment,J),Ue=f(J," handles making a new "),t(an.$$.fragment,J),ze=f(J," Store based on the current "),t(is.$$.fragment,J),Je=f(J," if available."),J.forEach(a),pe=u(s),t(ln.$$.fragment,s),H=_(s,"H3",{id:!0,tabindex:!0});var Sn=F(H);t(fs.$$.fragment,Sn),Ke=u(Sn),t(pn.$$.fragment,Sn),Sn.forEach(a),te=u(s),ss=_(s,"P",{});var Pn=F(ss);t(tn.$$.fragment,Pn),Qe=f(Pn," returns if there is an available "),t(on.$$.fragment,Pn),We=f(Pn," Store in the current Context."),Pn.forEach(a),oe=u(s),t(rn.$$.fragment,s),P=_(s,"H3",{id:!0,tabindex:!0});var Ce=F(P);t(ys.$$.fragment,Ce),Ye=u(Ce),t(Dn.$$.fragment,Ce),Ce.forEach(a),re=u(s),x=_(s,"P",{});var Mn=F(x);t(cn.$$.fragment,Mn),Ze=f(Mn," makes a new "),t($n.$$.fragment,Mn),sa=f(Mn," Store if it can retrieve the "),t(fn.$$.fragment,Mn),na=f(Mn," Store from the current Context."),Mn.forEach(a),De=u(s),t(yn.$$.fragment,s),G=_(s,"H2",{id:!0,tabindex:!0});var ge=F(G);t(ms.$$.fragment,ge),ea=u(ge),t(mn.$$.fragment,ge),ge.forEach(a),ce=u(s),k=_(s,"P",{});var Xn=F(k);t(Cn.$$.fragment,Xn),aa=f(Xn," handles making a new "),t(gn.$$.fragment,Xn),la=f(Xn," Store based on the current "),t(Cs.$$.fragment,Xn),pa=f(Xn," if available."),Xn.forEach(a),$e=u(s),t(un.$$.fragment,s),V=_(s,"H3",{id:!0,tabindex:!0});var ue=F(V);t(gs.$$.fragment,ue),ta=u(ue),t(dn.$$.fragment,ue),ue.forEach(a),ie=u(s),ns=_(s,"P",{});var Gn=F(ns);t(En.$$.fragment,Gn),oa=f(Gn," returns if there is an available "),t(_n.$$.fragment,Gn),ra=f(Gn," Store in the current Context."),Gn.forEach(a),fe=u(s),t(Fn.$$.fragment,s),j=_(s,"H3",{id:!0,tabindex:!0});var de=F(j);t(us.$$.fragment,de),Da=u(de),t(An.$$.fragment,de),de.forEach(a),ye=u(s),R=_(s,"P",{});var qn=F(R);t(vn.$$.fragment,qn),ca=f(qn," makes a new "),t(Tn.$$.fragment,qn),$a=f(qn," Store if it can retrieve the "),t(hn.$$.fragment,qn),ia=f(qn," Store from the current Context."),qn.forEach(a),me=u(s),t(wn.$$.fragment,s),this.h()},h(){A(K,"id","imports"),A(K,"tabindex","-1"),A(B,"id","random"),A(B,"tabindex","-1"),A(S,"id","random-float"),A(S,"tabindex","-1"),A(M,"id","random-integer"),A(M,"tabindex","-1"),A(X,"id","context-random"),A(X,"tabindex","-1"),A(q,"id","context-random-has"),A(q,"tabindex","-1"),A(I,"id","context-random-get"),A(I,"tabindex","-1"),A(L,"id","context-random-float"),A(L,"tabindex","-1"),A(H,"id","context-random-float-has"),A(H,"tabindex","-1"),A(P,"id","context-random-float-get"),A(P,"tabindex","-1"),A(G,"id","context-random-integer"),A(G,"tabindex","-1"),A(V,"id","context-random-integer-has"),A(V,"tabindex","-1"),A(j,"id","context-random-integer-get"),A(j,"tabindex","-1")},m(s,e){$(s,l,e),y(l,C),$(s,In,e),$(s,h,e),o(As,h,null),y(h,Ee),o(vs,h,null),y(h,_e),o(Ts,h,null),y(h,Fe),o(es,h,null),y(h,Ae),$(s,Vn,e),$(s,K,e),o(as,K,null),y(K,ve),$(s,jn,e),o(hs,s,e),$(s,B,e),o(ls,B,null),y(B,Te),o(ws,B,null),$(s,Un,e),o(Ns,s,e),$(s,Q,e),o(Os,Q,null),y(Q,he),o(bs,Q,null),y(Q,we),$(s,zn,e),o(xs,s,e),$(s,S,e),o(ps,S,null),y(S,Ne),o(ks,S,null),$(s,Jn,e),o(Rs,s,e),$(s,W,e),o(Bs,W,null),y(W,Oe),o(Ss,W,null),y(W,be),$(s,Kn,e),o(Ms,s,e),$(s,M,e),o(ts,M,null),y(M,xe),o(Xs,M,null),$(s,Qn,e),o(qs,s,e),$(s,Y,e),o(Is,Y,null),y(Y,ke),o(Ls,Y,null),y(Y,Re),$(s,Wn,e),o(Hs,s,e),$(s,X,e),o(os,X,null),y(X,Be),o(Ps,X,null),$(s,Yn,e),$(s,N,e),o(Gs,N,null),y(N,Se),o(Vs,N,null),y(N,Me),o(rs,N,null),y(N,Xe),$(s,Zn,e),o(js,s,e),$(s,q,e),o(Ds,q,null),y(q,qe),o(Us,q,null),$(s,se,e),$(s,Z,e),o(zs,Z,null),y(Z,Ie),o(Js,Z,null),y(Z,Le),$(s,ne,e),o(Ks,s,e),$(s,I,e),o(cs,I,null),y(I,He),o(Qs,I,null),$(s,ee,e),$(s,O,e),o(Ws,O,null),y(O,Pe),o(Ys,O,null),y(O,Ge),o(Zs,O,null),y(O,Ve),$(s,ae,e),o(sn,s,e),$(s,L,e),o($s,L,null),y(L,je),o(nn,L,null),$(s,le,e),$(s,b,e),o(en,b,null),y(b,Ue),o(an,b,null),y(b,ze),o(is,b,null),y(b,Je),$(s,pe,e),o(ln,s,e),$(s,H,e),o(fs,H,null),y(H,Ke),o(pn,H,null),$(s,te,e),$(s,ss,e),o(tn,ss,null),y(ss,Qe),o(on,ss,null),y(ss,We),$(s,oe,e),o(rn,s,e),$(s,P,e),o(ys,P,null),y(P,Ye),o(Dn,P,null),$(s,re,e),$(s,x,e),o(cn,x,null),y(x,Ze),o($n,x,null),y(x,sa),o(fn,x,null),y(x,na),$(s,De,e),o(yn,s,e),$(s,G,e),o(ms,G,null),y(G,ea),o(mn,G,null),$(s,ce,e),$(s,k,e),o(Cn,k,null),y(k,aa),o(gn,k,null),y(k,la),o(Cs,k,null),y(k,pa),$(s,$e,e),o(un,s,e),$(s,V,e),o(gs,V,null),y(V,ta),o(dn,V,null),$(s,ie,e),$(s,ns,e),o(En,ns,null),y(ns,oa),o(_n,ns,null),y(ns,ra),$(s,fe,e),o(Fn,s,e),$(s,j,e),o(us,j,null),y(j,Da),o(An,j,null),$(s,ye,e),$(s,R,e),o(vn,R,null),y(R,ca),o(Tn,R,null),y(R,$a),o(hn,R,null),y(R,ia),$(s,me,e),o(wn,s,e),Hn=!0},p(s,[e]){(!Hn||e&1)&&n!==(n=s[0].title+"")&&Ca(C,n);const w={};e&2&&(w.$$scope={dirty:e,ctx:s}),es.$set(w);const Ln={};e&2&&(Ln.$$scope={dirty:e,ctx:s}),as.$set(Ln);const Nn={};e&2&&(Nn.$$scope={dirty:e,ctx:s}),ls.$set(Nn);const ds={};e&2&&(ds.$$scope={dirty:e,ctx:s}),ps.$set(ds);const On={};e&2&&(On.$$scope={dirty:e,ctx:s}),ts.$set(On);const Es={};e&2&&(Es.$$scope={dirty:e,ctx:s}),os.$set(Es);const bn={};e&2&&(bn.$$scope={dirty:e,ctx:s}),rs.$set(bn);const _s={};e&2&&(_s.$$scope={dirty:e,ctx:s}),Ds.$set(_s);const xn={};e&2&&(xn.$$scope={dirty:e,ctx:s}),cs.$set(xn);const U={};e&2&&(U.$$scope={dirty:e,ctx:s}),$s.$set(U);const kn={};e&2&&(kn.$$scope={dirty:e,ctx:s}),is.$set(kn);const Fs={};e&2&&(Fs.$$scope={dirty:e,ctx:s}),fs.$set(Fs);const Rn={};e&2&&(Rn.$$scope={dirty:e,ctx:s}),ys.$set(Rn);const z={};e&2&&(z.$$scope={dirty:e,ctx:s}),ms.$set(z);const Bn={};e&2&&(Bn.$$scope={dirty:e,ctx:s}),Cs.$set(Bn);const J={};e&2&&(J.$$scope={dirty:e,ctx:s}),gs.$set(J);const Sn={};e&2&&(Sn.$$scope={dirty:e,ctx:s}),us.$set(Sn)},i(s){Hn||(r(As.$$.fragment,s),r(vs.$$.fragment,s),r(Ts.$$.fragment,s),r(es.$$.fragment,s),r(as.$$.fragment,s),r(hs.$$.fragment,s),r(ls.$$.fragment,s),r(ws.$$.fragment,s),r(Ns.$$.fragment,s),r(Os.$$.fragment,s),r(bs.$$.fragment,s),r(xs.$$.fragment,s),r(ps.$$.fragment,s),r(ks.$$.fragment,s),r(Rs.$$.fragment,s),r(Bs.$$.fragment,s),r(Ss.$$.fragment,s),r(Ms.$$.fragment,s),r(ts.$$.fragment,s),r(Xs.$$.fragment,s),r(qs.$$.fragment,s),r(Is.$$.fragment,s),r(Ls.$$.fragment,s),r(Hs.$$.fragment,s),r(os.$$.fragment,s),r(Ps.$$.fragment,s),r(Gs.$$.fragment,s),r(Vs.$$.fragment,s),r(rs.$$.fragment,s),r(js.$$.fragment,s),r(Ds.$$.fragment,s),r(Us.$$.fragment,s),r(zs.$$.fragment,s),r(Js.$$.fragment,s),r(Ks.$$.fragment,s),r(cs.$$.fragment,s),r(Qs.$$.fragment,s),r(Ws.$$.fragment,s),r(Ys.$$.fragment,s),r(Zs.$$.fragment,s),r(sn.$$.fragment,s),r($s.$$.fragment,s),r(nn.$$.fragment,s),r(en.$$.fragment,s),r(an.$$.fragment,s),r(is.$$.fragment,s),r(ln.$$.fragment,s),r(fs.$$.fragment,s),r(pn.$$.fragment,s),r(tn.$$.fragment,s),r(on.$$.fragment,s),r(rn.$$.fragment,s),r(ys.$$.fragment,s),r(Dn.$$.fragment,s),r(cn.$$.fragment,s),r($n.$$.fragment,s),r(fn.$$.fragment,s),r(yn.$$.fragment,s),r(ms.$$.fragment,s),r(mn.$$.fragment,s),r(Cn.$$.fragment,s),r(gn.$$.fragment,s),r(Cs.$$.fragment,s),r(un.$$.fragment,s),r(gs.$$.fragment,s),r(dn.$$.fragment,s),r(En.$$.fragment,s),r(_n.$$.fragment,s),r(Fn.$$.fragment,s),r(us.$$.fragment,s),r(An.$$.fragment,s),r(vn.$$.fragment,s),r(Tn.$$.fragment,s),r(hn.$$.fragment,s),r(wn.$$.fragment,s),Hn=!0)},o(s){D(As.$$.fragment,s),D(vs.$$.fragment,s),D(Ts.$$.fragment,s),D(es.$$.fragment,s),D(as.$$.fragment,s),D(hs.$$.fragment,s),D(ls.$$.fragment,s),D(ws.$$.fragment,s),D(Ns.$$.fragment,s),D(Os.$$.fragment,s),D(bs.$$.fragment,s),D(xs.$$.fragment,s),D(ps.$$.fragment,s),D(ks.$$.fragment,s),D(Rs.$$.fragment,s),D(Bs.$$.fragment,s),D(Ss.$$.fragment,s),D(Ms.$$.fragment,s),D(ts.$$.fragment,s),D(Xs.$$.fragment,s),D(qs.$$.fragment,s),D(Is.$$.fragment,s),D(Ls.$$.fragment,s),D(Hs.$$.fragment,s),D(os.$$.fragment,s),D(Ps.$$.fragment,s),D(Gs.$$.fragment,s),D(Vs.$$.fragment,s),D(rs.$$.fragment,s),D(js.$$.fragment,s),D(Ds.$$.fragment,s),D(Us.$$.fragment,s),D(zs.$$.fragment,s),D(Js.$$.fragment,s),D(Ks.$$.fragment,s),D(cs.$$.fragment,s),D(Qs.$$.fragment,s),D(Ws.$$.fragment,s),D(Ys.$$.fragment,s),D(Zs.$$.fragment,s),D(sn.$$.fragment,s),D($s.$$.fragment,s),D(nn.$$.fragment,s),D(en.$$.fragment,s),D(an.$$.fragment,s),D(is.$$.fragment,s),D(ln.$$.fragment,s),D(fs.$$.fragment,s),D(pn.$$.fragment,s),D(tn.$$.fragment,s),D(on.$$.fragment,s),D(rn.$$.fragment,s),D(ys.$$.fragment,s),D(Dn.$$.fragment,s),D(cn.$$.fragment,s),D($n.$$.fragment,s),D(fn.$$.fragment,s),D(yn.$$.fragment,s),D(ms.$$.fragment,s),D(mn.$$.fragment,s),D(Cn.$$.fragment,s),D(gn.$$.fragment,s),D(Cs.$$.fragment,s),D(un.$$.fragment,s),D(gs.$$.fragment,s),D(dn.$$.fragment,s),D(En.$$.fragment,s),D(_n.$$.fragment,s),D(Fn.$$.fragment,s),D(us.$$.fragment,s),D(An.$$.fragment,s),D(vn.$$.fragment,s),D(Tn.$$.fragment,s),D(hn.$$.fragment,s),D(wn.$$.fragment,s),Hn=!1},d(s){s&&a(l),s&&a(In),s&&a(h),c(As),c(vs),c(Ts),c(es),s&&a(Vn),s&&a(K),c(as),s&&a(jn),c(hs,s),s&&a(B),c(ls),c(ws),s&&a(Un),c(Ns,s),s&&a(Q),c(Os),c(bs),s&&a(zn),c(xs,s),s&&a(S),c(ps),c(ks),s&&a(Jn),c(Rs,s),s&&a(W),c(Bs),c(Ss),s&&a(Kn),c(Ms,s),s&&a(M),c(ts),c(Xs),s&&a(Qn),c(qs,s),s&&a(Y),c(Is),c(Ls),s&&a(Wn),c(Hs,s),s&&a(X),c(os),c(Ps),s&&a(Yn),s&&a(N),c(Gs),c(Vs),c(rs),s&&a(Zn),c(js,s),s&&a(q),c(Ds),c(Us),s&&a(se),s&&a(Z),c(zs),c(Js),s&&a(ne),c(Ks,s),s&&a(I),c(cs),c(Qs),s&&a(ee),s&&a(O),c(Ws),c(Ys),c(Zs),s&&a(ae),c(sn,s),s&&a(L),c($s),c(nn),s&&a(le),s&&a(b),c(en),c(an),c(is),s&&a(pe),c(ln,s),s&&a(H),c(fs),c(pn),s&&a(te),s&&a(ss),c(tn),c(on),s&&a(oe),c(rn,s),s&&a(P),c(ys),c(Dn),s&&a(re),s&&a(x),c(cn),c($n),c(fn),s&&a(De),c(yn,s),s&&a(G),c(ms),c(mn),s&&a(ce),s&&a(k),c(Cn),c(gn),c(Cs),s&&a($e),c(un,s),s&&a(V),c(gs),c(dn),s&&a(ie),s&&a(ns),c(En),c(_n),s&&a(fe),c(Fn,s),s&&a(j),c(us),c(An),s&&a(ye),s&&a(R),c(vn),c(Tn),c(hn),s&&a(me),c(wn,s)}}}function Xa(d,l,n){let C;return ga(d,ua,In=>n(0,C=In)),[C]}class ja extends fa{constructor(l){super(),ya(this,l,Xa,Ma,ma,{})}}export{ja as default};
