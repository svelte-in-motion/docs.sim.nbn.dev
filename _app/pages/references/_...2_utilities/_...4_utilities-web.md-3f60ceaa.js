import{S as Y,i as Z,s as ss,e as j,t as x,k as A,w as C,c as I,a as R,h as q,d as a,m as B,x as _,b as z,g as l,M as S,y as g,j as es,q as h,o as E,B as v,_ as ns}from"../../../chunks/index-fdc571c5.js";import{f as ts}from"../../../chunks/scroll-fc938a7a.js";import{C as Q}from"../../../chunks/CodeFence-bf275b3f.js";import{C as V}from"../../../chunks/CodeInline-03f5d050.js";import{L as X}from"../../../chunks/Link-d2aa795f.js";import"../../../chunks/singletons-01f6dffe.js";import"../../../chunks/contexts-ecb88871.js";function as(i){let n;return{c(){n=x("#")},l(t){n=q(t,"#")},m(t,o){l(t,n,o)},d(t){t&&a(n)}}}function ls(i){let n;return{c(){n=x("#")},l(t){n=q(t,"#")},m(t,o){l(t,n,o)},d(t){t&&a(n)}}}function os(i){let n,t=i[0].title+"",o,w,b,G,L,r,c,J,P,$,p,D,K,m,T,y,f,N,u,O,W,d,F;return c=new X({props:{class:"header-anchor",href:"#imports","aria-hidden":"true",$$slots:{default:[as]},$$scope:{ctx:i}}}),$=new Q({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">parse_style</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),D=new X({props:{class:"header-anchor",href:"#parse-style","aria-hidden":"true",$$slots:{default:[ls]},$$scope:{ctx:i}}}),m=new V({props:{code:"parse_style"}}),y=new Q({props:{lang:"typescript",ext:"ts",linesCount:4,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">parse_style</span><span style="color: #D4D4D4">: (</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span></span>
<span class="line"><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Record</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">, </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),u=new V({props:{code:"text"}}),d=new Q({props:{lang:"typescript",ext:"ts",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">parse_style</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">parse_style</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;color:red;width:6px;overflow:hidden;&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`{color: &quot;red&quot;, width: &quot;6px&quot;, overflow: &quot;hidden&quot;}\`</span></span>
<span class="line"></span></code></pre>`}}),{c(){n=j("h1"),o=x(t),w=A(),b=j("p"),G=x("Helper utilities for generic Web Technology related tasks are provided."),L=A(),r=j("h2"),C(c.$$.fragment),J=x(" Imports"),P=A(),C($.$$.fragment),p=j("h2"),C(D.$$.fragment),K=A(),C(m.$$.fragment),T=A(),C(y.$$.fragment),f=j("p"),N=x("Returns the inline "),C(u.$$.fragment),O=x(" CSS styles parsed into an object of keyvalue pairs."),W=A(),C(d.$$.fragment),this.h()},l(s){n=I(s,"H1",{});var e=R(n);o=q(e,t),e.forEach(a),w=B(s),b=I(s,"P",{});var H=R(b);G=q(H,"Helper utilities for generic Web Technology related tasks are provided."),H.forEach(a),L=B(s),r=I(s,"H2",{id:!0,tabindex:!0});var k=R(r);_(c.$$.fragment,k),J=q(k," Imports"),k.forEach(a),P=B(s),_($.$$.fragment,s),p=I(s,"H2",{id:!0,tabindex:!0});var M=R(p);_(D.$$.fragment,M),K=B(M),_(m.$$.fragment,M),M.forEach(a),T=B(s),_(y.$$.fragment,s),f=I(s,"P",{});var U=R(f);N=q(U,"Returns the inline "),_(u.$$.fragment,U),O=q(U," CSS styles parsed into an object of keyvalue pairs."),U.forEach(a),W=B(s),_(d.$$.fragment,s),this.h()},h(){z(r,"id","imports"),z(r,"tabindex","-1"),z(p,"id","parse-style"),z(p,"tabindex","-1")},m(s,e){l(s,n,e),S(n,o),l(s,w,e),l(s,b,e),S(b,G),l(s,L,e),l(s,r,e),g(c,r,null),S(r,J),l(s,P,e),g($,s,e),l(s,p,e),g(D,p,null),S(p,K),g(m,p,null),l(s,T,e),g(y,s,e),l(s,f,e),S(f,N),g(u,f,null),S(f,O),l(s,W,e),g(d,s,e),F=!0},p(s,[e]){(!F||e&1)&&t!==(t=s[0].title+"")&&es(o,t);const H={};e&2&&(H.$$scope={dirty:e,ctx:s}),c.$set(H);const k={};e&2&&(k.$$scope={dirty:e,ctx:s}),D.$set(k)},i(s){F||(h(c.$$.fragment,s),h($.$$.fragment,s),h(D.$$.fragment,s),h(m.$$.fragment,s),h(y.$$.fragment,s),h(u.$$.fragment,s),h(d.$$.fragment,s),F=!0)},o(s){E(c.$$.fragment,s),E($.$$.fragment,s),E(D.$$.fragment,s),E(m.$$.fragment,s),E(y.$$.fragment,s),E(u.$$.fragment,s),E(d.$$.fragment,s),F=!1},d(s){s&&a(n),s&&a(w),s&&a(b),s&&a(L),s&&a(r),v(c),s&&a(P),v($,s),s&&a(p),v(D),v(m),s&&a(T),v(y,s),s&&a(f),v(u),s&&a(W),v(d,s)}}}function ps(i,n,t){let o;return ns(i,ts,w=>t(0,o=w)),[o]}class ys extends Y{constructor(n){super(),Z(this,n,ps,os,ss,{})}}export{ys as default};
