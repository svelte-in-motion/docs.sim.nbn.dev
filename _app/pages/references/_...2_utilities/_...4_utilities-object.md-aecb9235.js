import{S as es,i as as,s as ts,e as P,t as _,k as I,w as y,c as L,a as N,h as E,d as t,m as R,x as m,b as O,g as l,M as b,y as u,j as ps,q as C,o as d,B as g,_ as ls,E as os}from"../../../chunks/index-fdc571c5.js";import{f as rs}from"../../../chunks/scroll-fc938a7a.js";import{C as ss}from"../../../chunks/CodeFence-bf275b3f.js";import{C as Q}from"../../../chunks/CodeInline-03f5d050.js";import{L as ns}from"../../../chunks/Link-d2aa795f.js";import{A as cs}from"../../../chunks/Admonition-ec3c5d9c.js";import"../../../chunks/singletons-01f6dffe.js";import"../../../chunks/contexts-ecb88871.js";function is(i){let n;return{c(){n=_("#")},l(a){n=E(a,"#")},m(a,p){l(a,n,p)},d(a){a&&t(n)}}}function Ds(i){let n;return{c(){n=_("#")},l(a){n=E(a,"#")},m(a,p){l(a,n,p)},d(a){a&&t(n)}}}function $s(i){let n,a,p,D,r;return p=new Q({props:{code:"target"}}),{c(){n=P("p"),a=_("This mutates the "),y(p.$$.fragment),D=_(" object!")},l(o){n=L(o,"P",{});var c=N(n);a=E(c,"This mutates the "),m(p.$$.fragment,c),D=E(c," object!"),c.forEach(t)},m(o,c){l(o,n,c),b(n,a),u(p,n,null),b(n,D),r=!0},p:os,i(o){r||(C(p.$$.fragment,o),r=!0)},o(o){d(p.$$.fragment,o),r=!1},d(o){o&&t(n),g(p)}}}function fs(i){let n,a=i[0].title+"",p,D,r,o,c,F,h,V,z,v,$,w,W,q,G,j,J,x,f,X,A,Y,B,Z,K,k,S;return h=new ns({props:{class:"header-anchor",href:"#imports","aria-hidden":"true",$$slots:{default:[is]},$$scope:{ctx:i}}}),v=new ss({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">deep_assign</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),w=new ns({props:{class:"header-anchor",href:"#deep-assign","aria-hidden":"true",$$slots:{default:[Ds]},$$scope:{ctx:i}}}),q=new Q({props:{code:"deep_assign"}}),j=new cs({props:{type:"warning",$$slots:{default:[$s]},$$scope:{ctx:i}}}),x=new ss({props:{lang:"typescript",ext:"ts",linesCount:5,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">deep_assign</span><span style="color: #D4D4D4">: (</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">target</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">Record</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">, </span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4">&gt;,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">source</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">Record</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">, </span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Record</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">, </span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),A=new Q({props:{code:"target"}}),B=new Q({props:{code:"source"}}),k=new ss({props:{lang:"typescript",ext:"ts",linesCount:22,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">deep_assign</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">object_one</span><span style="color: #D4D4D4"> = {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">this:</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">is:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;a nested string&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    },</span></span>
<span class="line"><span style="color: #D4D4D4">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">object_two</span><span style="color: #D4D4D4"> = {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">this:</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">is:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;is a DIFFERENT nested string&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    },</span></span>
<span class="line"><span style="color: #D4D4D4">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #DCDCAA">deep_assign</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">object_one</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">object_two</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A9955">// {</span></span>
<span class="line"><span style="color: #6A9955">//     this: {</span></span>
<span class="line"><span style="color: #6A9955">//         is: &quot;is a DIFFERENT nested string&quot;</span></span>
<span class="line"><span style="color: #6A9955">//     }</span></span>
<span class="line"><span style="color: #6A9955">// }</span></span>
<span class="line"></span></code></pre>`}}),{c(){n=P("h1"),p=_(a),D=I(),r=P("p"),o=_("Helper utilities for object related tasks are provided."),c=I(),F=P("h2"),y(h.$$.fragment),V=_(" Imports"),z=I(),y(v.$$.fragment),$=P("h2"),y(w.$$.fragment),W=I(),y(q.$$.fragment),G=I(),y(j.$$.fragment),J=I(),y(x.$$.fragment),f=P("p"),X=_("Merges a "),y(A.$$.fragment),Y=_(" object with another "),y(B.$$.fragment),Z=_(" object, overwriting existing keys."),K=I(),y(k.$$.fragment),this.h()},l(s){n=L(s,"H1",{});var e=N(n);p=E(e,a),e.forEach(t),D=R(s),r=L(s,"P",{});var U=N(r);o=E(U,"Helper utilities for object related tasks are provided."),U.forEach(t),c=R(s),F=L(s,"H2",{id:!0,tabindex:!0});var T=N(F);m(h.$$.fragment,T),V=E(T," Imports"),T.forEach(t),z=R(s),m(v.$$.fragment,s),$=L(s,"H2",{id:!0,tabindex:!0});var H=N($);m(w.$$.fragment,H),W=R(H),m(q.$$.fragment,H),H.forEach(t),G=R(s),m(j.$$.fragment,s),J=R(s),m(x.$$.fragment,s),f=L(s,"P",{});var M=N(f);X=E(M,"Merges a "),m(A.$$.fragment,M),Y=E(M," object with another "),m(B.$$.fragment,M),Z=E(M," object, overwriting existing keys."),M.forEach(t),K=R(s),m(k.$$.fragment,s),this.h()},h(){O(F,"id","imports"),O(F,"tabindex","-1"),O($,"id","deep-assign"),O($,"tabindex","-1")},m(s,e){l(s,n,e),b(n,p),l(s,D,e),l(s,r,e),b(r,o),l(s,c,e),l(s,F,e),u(h,F,null),b(F,V),l(s,z,e),u(v,s,e),l(s,$,e),u(w,$,null),b($,W),u(q,$,null),l(s,G,e),u(j,s,e),l(s,J,e),u(x,s,e),l(s,f,e),b(f,X),u(A,f,null),b(f,Y),u(B,f,null),b(f,Z),l(s,K,e),u(k,s,e),S=!0},p(s,[e]){(!S||e&1)&&a!==(a=s[0].title+"")&&ps(p,a);const U={};e&2&&(U.$$scope={dirty:e,ctx:s}),h.$set(U);const T={};e&2&&(T.$$scope={dirty:e,ctx:s}),w.$set(T);const H={};e&2&&(H.$$scope={dirty:e,ctx:s}),j.$set(H)},i(s){S||(C(h.$$.fragment,s),C(v.$$.fragment,s),C(w.$$.fragment,s),C(q.$$.fragment,s),C(j.$$.fragment,s),C(x.$$.fragment,s),C(A.$$.fragment,s),C(B.$$.fragment,s),C(k.$$.fragment,s),S=!0)},o(s){d(h.$$.fragment,s),d(v.$$.fragment,s),d(w.$$.fragment,s),d(q.$$.fragment,s),d(j.$$.fragment,s),d(x.$$.fragment,s),d(A.$$.fragment,s),d(B.$$.fragment,s),d(k.$$.fragment,s),S=!1},d(s){s&&t(n),s&&t(D),s&&t(r),s&&t(c),s&&t(F),g(h),s&&t(z),g(v,s),s&&t($),g(w),g(q),s&&t(G),g(j,s),s&&t(J),g(x,s),s&&t(f),g(A),g(B),s&&t(K),g(k,s)}}}function ys(i,n,a){let p;return ls(i,rs,D=>a(0,p=D)),[p]}class bs extends es{constructor(n){super(),as(this,n,ys,fs,ts,{})}}export{bs as default};
