import{S as Y,i as Z,s as ss,e as L,t as w,k,w as m,c as T,a as U,h as v,d as o,m as q,x as u,b as z,g as p,M as I,y as $,j as ns,q as E,o as _,B as g,_ as as,E as ls}from"../../../chunks/index-fdc571c5.js";import{f as es}from"../../../chunks/scroll-fc938a7a.js";import{C as O}from"../../../chunks/CodeFence-bf275b3f.js";import{C as X}from"../../../chunks/CodeInline-03f5d050.js";import{L as Q}from"../../../chunks/Link-d2aa795f.js";import"../../../chunks/singletons-01f6dffe.js";import"../../../chunks/contexts-ecb88871.js";function os(t){let n,a;return n=new X({props:{code:"URLPattern"}}),{c(){m(n.$$.fragment)},l(e){u(n.$$.fragment,e)},m(e,c){$(n,e,c),a=!0},p:ls,i(e){a||(E(n.$$.fragment,e),a=!0)},o(e){_(n.$$.fragment,e),a=!1},d(e){g(n,e)}}}function ps(t){let n;return{c(){n=w("#")},l(a){n=v(a,"#")},m(a,e){p(a,n,e)},d(a){a&&o(n)}}}function ts(t){let n;return{c(){n=w("#")},l(a){n=v(a,"#")},m(a,e){p(a,n,e)},d(a){a&&o(n)}}}function rs(t){let n,a=t[0].title+"",e,c,y,W,i,G,P,D,C,J,M,d,r,f,K,F,S,h,A,N,j,B,H;return i=new Q({props:{href:"https://developer.mozilla.org/en-US/docs/Web/API/URLPattern",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[os]},$$scope:{ctx:t}}}),C=new Q({props:{class:"header-anchor",href:"#imports","aria-hidden":"true",$$slots:{default:[ps]},$$scope:{ctx:t}}}),d=new O({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">router</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),f=new Q({props:{class:"header-anchor",href:"#router","aria-hidden":"true",$$slots:{default:[ts]},$$scope:{ctx:t}}}),F=new X({props:{code:"router"}}),h=new O({props:{lang:"typescript",ext:"ts",linesCount:16,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">type</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IRouterDefinitions</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt; = </span><span style="color: #4EC9B0">Record</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">, </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">interface</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IRouterMatch</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt; {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">result</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">url</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">URLPatternResult</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">function</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">router</span><span style="color: #D4D4D4">: &lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;(</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">definitions</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IRouterDefinitions</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">base_url</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">string</span></span>
<span class="line"><span style="color: #D4D4D4">)</span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">exec</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">uri</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">base_url</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">): </span><span style="color: #4EC9B0">IRouterMatch</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt; | </span><span style="color: #4EC9B0">null</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span>
<span class="line"></span></code></pre>`}}),B=new O({props:{lang:"typescript",ext:"ts",linesCount:13,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">router</span><span style="color: #D4D4D4"> </span><span style="color: #C586C0">as</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">make_router</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">router</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">make_router</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #CE9178">&quot;/hello/:name&quot;</span><span style="color: #9CDCFE">:</span><span style="color: #D4D4D4"> (</span><span style="color: #9CDCFE">name</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">\`Hello, </span><span style="color: #569CD6">\${</span><span style="color: #9CDCFE">name</span><span style="color: #569CD6">}</span><span style="color: #CE9178">!\`</span><span style="color: #D4D4D4">),</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">match</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">router</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">exec</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;/hello/world&quot;</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> {</span><span style="color: #4FC1FF">name</span><span style="color: #D4D4D4">} = </span><span style="color: #9CDCFE">match</span><span style="color: #D4D4D4">.</span><span style="color: #9CDCFE">url</span><span style="color: #D4D4D4">.</span><span style="color: #9CDCFE">pathname</span><span style="color: #D4D4D4">.</span><span style="color: #9CDCFE">groups</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">match</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">result</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">name</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`Hello, world!\`</span></span>
<span class="line"></span></code></pre>`}}),{c(){n=L("h1"),e=w(a),c=k(),y=L("p"),W=w("Helper utility for providing flexible route matching powered by "),m(i.$$.fragment),G=w("."),P=k(),D=L("h2"),m(C.$$.fragment),J=w(" Imports"),M=k(),m(d.$$.fragment),r=L("h2"),m(f.$$.fragment),K=k(),m(F.$$.fragment),S=k(),m(h.$$.fragment),A=L("p"),N=w("Returns a router instance that allows for URL matching to any type of variable."),j=k(),m(B.$$.fragment),this.h()},l(s){n=T(s,"H1",{});var l=U(n);e=v(l,a),l.forEach(o),c=q(s),y=T(s,"P",{});var b=U(y);W=v(b,"Helper utility for providing flexible route matching powered by "),u(i.$$.fragment,b),G=v(b,"."),b.forEach(o),P=q(s),D=T(s,"H2",{id:!0,tabindex:!0});var R=U(D);u(C.$$.fragment,R),J=v(R," Imports"),R.forEach(o),M=q(s),u(d.$$.fragment,s),r=T(s,"H2",{id:!0,tabindex:!0});var x=U(r);u(f.$$.fragment,x),K=q(x),u(F.$$.fragment,x),x.forEach(o),S=q(s),u(h.$$.fragment,s),A=T(s,"P",{});var V=U(A);N=v(V,"Returns a router instance that allows for URL matching to any type of variable."),V.forEach(o),j=q(s),u(B.$$.fragment,s),this.h()},h(){z(D,"id","imports"),z(D,"tabindex","-1"),z(r,"id","router"),z(r,"tabindex","-1")},m(s,l){p(s,n,l),I(n,e),p(s,c,l),p(s,y,l),I(y,W),$(i,y,null),I(y,G),p(s,P,l),p(s,D,l),$(C,D,null),I(D,J),p(s,M,l),$(d,s,l),p(s,r,l),$(f,r,null),I(r,K),$(F,r,null),p(s,S,l),$(h,s,l),p(s,A,l),I(A,N),p(s,j,l),$(B,s,l),H=!0},p(s,[l]){(!H||l&1)&&a!==(a=s[0].title+"")&&ns(e,a);const b={};l&2&&(b.$$scope={dirty:l,ctx:s}),i.$set(b);const R={};l&2&&(R.$$scope={dirty:l,ctx:s}),C.$set(R);const x={};l&2&&(x.$$scope={dirty:l,ctx:s}),f.$set(x)},i(s){H||(E(i.$$.fragment,s),E(C.$$.fragment,s),E(d.$$.fragment,s),E(f.$$.fragment,s),E(F.$$.fragment,s),E(h.$$.fragment,s),E(B.$$.fragment,s),H=!0)},o(s){_(i.$$.fragment,s),_(C.$$.fragment,s),_(d.$$.fragment,s),_(f.$$.fragment,s),_(F.$$.fragment,s),_(h.$$.fragment,s),_(B.$$.fragment,s),H=!1},d(s){s&&o(n),s&&o(c),s&&o(y),g(i),s&&o(P),s&&o(D),g(C),s&&o(M),g(d,s),s&&o(r),g(f),g(F),s&&o(S),g(h,s),s&&o(A),s&&o(j),g(B,s)}}}function Ds(t,n,a){let e;return as(t,es,c=>a(0,e=c)),[e]}class $s extends Y{constructor(n){super(),Z(this,n,Ds,rs,ss,{})}}export{$s as default};
