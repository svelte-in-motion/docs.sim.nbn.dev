import{S as fn,i as mn,s as un,e as g,t as $,k as m,w as o,c as F,a as _,h as f,d as l,m as u,x as t,b as d,g as e,M as E,y as D,j as En,q as r,o as c,B as y,_ as dn}from"../../../chunks/index-fdc571c5.js";import{f as gn}from"../../../chunks/scroll-fc938a7a.js";import{C as v}from"../../../chunks/CodeFence-bf275b3f.js";import{C as A}from"../../../chunks/CodeInline-03f5d050.js";import{L as H}from"../../../chunks/Link-d2aa795f.js";import"../../../chunks/singletons-01f6dffe.js";import"../../../chunks/contexts-ecb88871.js";function Fn(C){let p;return{c(){p=$("Svelte Store")},l(a){p=f(a,"Svelte Store")},m(a,i){e(a,p,i)},d(a){a&&l(p)}}}function _n(C){let p;return{c(){p=$("#")},l(a){p=f(a,"#")},m(a,i){e(a,p,i)},d(a){a&&l(p)}}}function vn(C){let p;return{c(){p=$("#")},l(a){p=f(a,"#")},m(a,i){e(a,p,i)},d(a){a&&l(p)}}}function An(C){let p;return{c(){p=$("#")},l(a){p=f(a,"#")},m(a,i){e(a,p,i)},d(a){a&&l(p)}}}function hn(C){let p;return{c(){p=$("#")},l(a){p=f(a,"#")},m(a,i){e(a,p,i)},d(a){a&&l(p)}}}function Bn(C){let p;return{c(){p=$("#")},l(a){p=f(a,"#")},m(a,i){e(a,p,i)},d(a){a&&l(p)}}}function wn(C){let p;return{c(){p=$("#")},l(a){p=f(a,"#")},m(a,i){e(a,p,i)},d(a){a&&l(p)}}}function qn(C){let p;return{c(){p=$("#")},l(a){p=f(a,"#")},m(a,i){e(a,p,i)},d(a){a&&l(p)}}}function xn(C){let p;return{c(){p=$("#")},l(a){p=f(a,"#")},m(a,i){e(a,p,i)},d(a){a&&l(p)}}}function bn(C){let p,a=C[0].title+"",i,Bs,b,N,Os,R,Qs,Ms,k,P,Xs,Ss,O,I,W,Ys,Ts,Q,M,j,Zs,Hs,X,h,V,sn,Y,Rs,Z,ss,ns,nn,Ps,as,B,U,an,ps,Ws,ls,S,es,pn,os,ln,js,ts,w,L,en,Ds,Vs,rs,cs,ys,on,Us,is,q,z,tn,Cs,Ls,$s,fs,ms,Dn,zs,us,x,G,rn,Es,Gs,ds,T,gs,cn,Fs,yn,Js,_s,ks;return N=new A({props:{code:"map"}}),R=new H({props:{href:"https://svelte.dev/docs#run-time-svelte-store-writable",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Fn]},$$scope:{ctx:C}}}),P=new H({props:{class:"header-anchor",href:"#imports","aria-hidden":"true",$$slots:{default:[_n]},$$scope:{ctx:C}}}),O=new v({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">map</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),W=new H({props:{class:"header-anchor",href:"#definitions","aria-hidden":"true",$$slots:{default:[vn]},$$scope:{ctx:C}}}),Q=new v({props:{lang:"typescript",ext:"ts",linesCount:9,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">type</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMap</span><span style="color: #D4D4D4"> = </span><span style="color: #4EC9B0">Record</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">, </span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">interface</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMapStore</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMap</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt; {}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">map</span><span style="color: #D4D4D4">: &lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMap</span><span style="color: #D4D4D4">&gt;(</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">store</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">Writable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMapStore</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),j=new H({props:{class:"header-anchor",href:"#usage","aria-hidden":"true",$$slots:{default:[An]},$$scope:{ctx:C}}}),X=new v({props:{lang:"typescript",ext:"ts",linesCount:16,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">get</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;svelte/store&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">map</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">map_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">map</span><span style="color: #D4D4D4">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">map_store</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">set</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;message&quot;</span><span style="color: #D4D4D4">, {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">text:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Hello World!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">map_store</span><span style="color: #D4D4D4">)); </span><span style="color: #6A9955">// \`{message: {text: &quot;Hello World!&quot;}}\`</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">text</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">map_store</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;message.text&quot;</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`Hello World!\`</span></span>
<span class="line"></span></code></pre>`}}),V=new H({props:{class:"header-anchor",href:"#map-get","aria-hidden":"true",$$slots:{default:[hn]},$$scope:{ctx:C}}}),Y=new A({props:{code:"map.get"}}),Z=new v({props:{lang:"typescript",ext:"ts",linesCount:5,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">interface</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMapStore</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMap</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt; {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">V</span><span style="color: #D4D4D4">&gt;(</span><span style="color: #9CDCFE">path</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">): </span><span style="color: #4EC9B0">V</span><span style="color: #D4D4D4"> | </span><span style="color: #4EC9B0">undefined</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span>
<span class="line"></span></code></pre>`}}),ns=new A({props:{code:"map.get"}}),as=new v({props:{lang:"typescript",ext:"ts",linesCount:18,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">writable</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;svelte/store&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">map</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">initial_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">writable</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">my:</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">nested:</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #9CDCFE">value:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">42</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        },</span></span>
<span class="line"><span style="color: #D4D4D4">    },</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">map_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">map</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">initial_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">value</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">map_store</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;my.nested.value&quot;</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`42\`</span></span>
<span class="line"></span></code></pre>`}}),U=new H({props:{class:"header-anchor",href:"#map-has","aria-hidden":"true",$$slots:{default:[Bn]},$$scope:{ctx:C}}}),ps=new A({props:{code:"map.has"}}),ls=new v({props:{lang:"typescript",ext:"ts",linesCount:5,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">interface</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMapStore</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMap</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt; {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">path</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">): </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span>
<span class="line"></span></code></pre>`}}),es=new A({props:{code:"map.has"}}),os=new A({props:{code:"true"}}),ts=new v({props:{lang:"typescript",ext:"ts",linesCount:18,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">writable</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;svelte/store&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">map</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">initial_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">writable</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">my:</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">nested:</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #9CDCFE">value:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">42</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        },</span></span>
<span class="line"><span style="color: #D4D4D4">    },</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">map_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">map</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">initial_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">has_value</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">map_store</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;my.nested.value&quot;</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">has_value</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`true\`</span></span>
<span class="line"></span></code></pre>`}}),L=new H({props:{class:"header-anchor",href:"#map-set","aria-hidden":"true",$$slots:{default:[wn]},$$scope:{ctx:C}}}),Ds=new A({props:{code:"map.set"}}),rs=new v({props:{lang:"typescript",ext:"ts",linesCount:5,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">interface</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMapStore</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMap</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt; {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">set</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">path</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4">): </span><span style="color: #4EC9B0">void</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span>
<span class="line"></span></code></pre>`}}),ys=new A({props:{code:"map.set"}}),is=new v({props:{lang:"typescript",ext:"ts",linesCount:20,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">writable</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;svelte/store&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">map</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">initial_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">writable</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">my:</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">nested:</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #9CDCFE">value:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">42</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        },</span></span>
<span class="line"><span style="color: #D4D4D4">    },</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">map_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">map</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">initial_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">map_store</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">set</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;my.nested.value&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">84</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">value</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">map_store</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;my.nested.value&quot;</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`84\`</span></span>
<span class="line"></span></code></pre>`}}),z=new H({props:{class:"header-anchor",href:"#map-remove","aria-hidden":"true",$$slots:{default:[qn]},$$scope:{ctx:C}}}),Cs=new A({props:{code:"map.remove"}}),$s=new v({props:{lang:"typescript",ext:"ts",linesCount:5,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">interface</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMapStore</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMap</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt; {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">remove</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">path</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">): </span><span style="color: #4EC9B0">void</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span>
<span class="line"></span></code></pre>`}}),ms=new A({props:{code:"map.remove"}}),us=new v({props:{lang:"typescript",ext:"ts",linesCount:20,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">writable</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;svelte/store&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">map</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">initial_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">writable</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">my:</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">nested:</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #9CDCFE">value:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">42</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        },</span></span>
<span class="line"><span style="color: #D4D4D4">    },</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">map_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">map</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">initial_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">map_store</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">remove</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;my.nested.value&quot;</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">has_value</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">map_store</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;my.nested.value&quot;</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">has_value</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`false\`</span></span>
<span class="line"></span></code></pre>`}}),G=new H({props:{class:"header-anchor",href:"#map-watch","aria-hidden":"true",$$slots:{default:[xn]},$$scope:{ctx:C}}}),Es=new A({props:{code:"map.watch"}}),ds=new v({props:{lang:"typescript",ext:"ts",linesCount:5,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">interface</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMapStore</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IMap</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt; {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">watch</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">V</span><span style="color: #D4D4D4">&gt;(</span><span style="color: #9CDCFE">path</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">): </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">V</span><span style="color: #D4D4D4"> | </span><span style="color: #4EC9B0">undefined</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span>
<span class="line"></span></code></pre>`}}),gs=new A({props:{code:"map.watch"}}),Fs=new A({props:{code:"Readable"}}),_s=new v({props:{lang:"typescript",ext:"ts",linesCount:20,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">writable</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;svelte/store&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">map</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">initial_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">writable</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">my:</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">nested:</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #9CDCFE">value:</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">42</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        },</span></span>
<span class="line"><span style="color: #D4D4D4">    },</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">map_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">map</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">initial_store</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">value_store</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">map</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">watch</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;my.nested.value&quot;</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">value_store</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">subscribe</span><span style="color: #D4D4D4">((</span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">)); </span><span style="color: #6A9955">// \`42\`</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">map_store</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">set</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;my.nested.value&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">84</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`84\`</span></span>
<span class="line"></span></code></pre>`}}),{c(){p=g("h1"),i=$(a),Bs=m(),b=g("p"),o(N.$$.fragment),Os=$(" is a "),o(R.$$.fragment),Qs=$(" that helps with managing a reactive object of objects without you directly dealing with mutations. While also adding support for easy nested lookup via dot paths."),Ms=m(),k=g("h2"),o(P.$$.fragment),Xs=$(" Imports"),Ss=m(),o(O.$$.fragment),I=g("h2"),o(W.$$.fragment),Ys=$(" Definitions"),Ts=m(),o(Q.$$.fragment),M=g("h2"),o(j.$$.fragment),Zs=$(" Usage"),Hs=m(),o(X.$$.fragment),h=g("h2"),o(V.$$.fragment),sn=m(),o(Y.$$.fragment),Rs=m(),o(Z.$$.fragment),ss=g("p"),o(ns.$$.fragment),nn=$(" returns the value at the given dot path."),Ps=m(),o(as.$$.fragment),B=g("h2"),o(U.$$.fragment),an=m(),o(ps.$$.fragment),Ws=m(),o(ls.$$.fragment),S=g("p"),o(es.$$.fragment),pn=$(" returns "),o(os.$$.fragment),ln=$(", if there is a value at the dot path."),js=m(),o(ts.$$.fragment),w=g("h2"),o(L.$$.fragment),en=m(),o(Ds.$$.fragment),Vs=m(),o(rs.$$.fragment),cs=g("p"),o(ys.$$.fragment),on=$(" sets a value at the given dot path."),Us=m(),o(is.$$.fragment),q=g("h2"),o(z.$$.fragment),tn=m(),o(Cs.$$.fragment),Ls=m(),o($s.$$.fragment),fs=g("p"),o(ms.$$.fragment),Dn=$(" removes the value at the given dot path."),zs=m(),o(us.$$.fragment),x=g("h2"),o(G.$$.fragment),rn=m(),o(Es.$$.fragment),Gs=m(),o(ds.$$.fragment),T=g("p"),o(gs.$$.fragment),cn=$(" returns a "),o(Fs.$$.fragment),yn=$(" Store, that reactively returns the value of the value whose key matches the provided dot path."),Js=m(),o(_s.$$.fragment),this.h()},l(s){p=F(s,"H1",{});var n=_(p);i=f(n,a),n.forEach(l),Bs=u(s),b=F(s,"P",{});var J=_(b);t(N.$$.fragment,J),Os=f(J," is a "),t(R.$$.fragment,J),Qs=f(J," that helps with managing a reactive object of objects without you directly dealing with mutations. While also adding support for easy nested lookup via dot paths."),J.forEach(l),Ms=u(s),k=F(s,"H2",{id:!0,tabindex:!0});var ws=_(k);t(P.$$.fragment,ws),Xs=f(ws," Imports"),ws.forEach(l),Ss=u(s),t(O.$$.fragment,s),I=F(s,"H2",{id:!0,tabindex:!0});var qs=_(I);t(W.$$.fragment,qs),Ys=f(qs," Definitions"),qs.forEach(l),Ts=u(s),t(Q.$$.fragment,s),M=F(s,"H2",{id:!0,tabindex:!0});var xs=_(M);t(j.$$.fragment,xs),Zs=f(xs," Usage"),xs.forEach(l),Hs=u(s),t(X.$$.fragment,s),h=F(s,"H2",{id:!0,tabindex:!0});var vs=_(h);t(V.$$.fragment,vs),sn=u(vs),t(Y.$$.fragment,vs),vs.forEach(l),Rs=u(s),t(Z.$$.fragment,s),ss=F(s,"P",{});var bs=_(ss);t(ns.$$.fragment,bs),nn=f(bs," returns the value at the given dot path."),bs.forEach(l),Ps=u(s),t(as.$$.fragment,s),B=F(s,"H2",{id:!0,tabindex:!0});var As=_(B);t(U.$$.fragment,As),an=u(As),t(ps.$$.fragment,As),As.forEach(l),Ws=u(s),t(ls.$$.fragment,s),S=F(s,"P",{});var K=_(S);t(es.$$.fragment,K),pn=f(K," returns "),t(os.$$.fragment,K),ln=f(K,", if there is a value at the dot path."),K.forEach(l),js=u(s),t(ts.$$.fragment,s),w=F(s,"H2",{id:!0,tabindex:!0});var hs=_(w);t(L.$$.fragment,hs),en=u(hs),t(Ds.$$.fragment,hs),hs.forEach(l),Vs=u(s),t(rs.$$.fragment,s),cs=F(s,"P",{});var Cn=_(cs);t(ys.$$.fragment,Cn),on=f(Cn," sets a value at the given dot path."),Cn.forEach(l),Us=u(s),t(is.$$.fragment,s),q=F(s,"H2",{id:!0,tabindex:!0});var Ks=_(q);t(z.$$.fragment,Ks),tn=u(Ks),t(Cs.$$.fragment,Ks),Ks.forEach(l),Ls=u(s),t($s.$$.fragment,s),fs=F(s,"P",{});var $n=_(fs);t(ms.$$.fragment,$n),Dn=f($n," removes the value at the given dot path."),$n.forEach(l),zs=u(s),t(us.$$.fragment,s),x=F(s,"H2",{id:!0,tabindex:!0});var Ns=_(x);t(G.$$.fragment,Ns),rn=u(Ns),t(Es.$$.fragment,Ns),Ns.forEach(l),Gs=u(s),t(ds.$$.fragment,s),T=F(s,"P",{});var Is=_(T);t(gs.$$.fragment,Is),cn=f(Is," returns a "),t(Fs.$$.fragment,Is),yn=f(Is," Store, that reactively returns the value of the value whose key matches the provided dot path."),Is.forEach(l),Js=u(s),t(_s.$$.fragment,s),this.h()},h(){d(k,"id","imports"),d(k,"tabindex","-1"),d(I,"id","definitions"),d(I,"tabindex","-1"),d(M,"id","usage"),d(M,"tabindex","-1"),d(h,"id","map-get"),d(h,"tabindex","-1"),d(B,"id","map-has"),d(B,"tabindex","-1"),d(w,"id","map-set"),d(w,"tabindex","-1"),d(q,"id","map-remove"),d(q,"tabindex","-1"),d(x,"id","map-watch"),d(x,"tabindex","-1")},m(s,n){e(s,p,n),E(p,i),e(s,Bs,n),e(s,b,n),D(N,b,null),E(b,Os),D(R,b,null),E(b,Qs),e(s,Ms,n),e(s,k,n),D(P,k,null),E(k,Xs),e(s,Ss,n),D(O,s,n),e(s,I,n),D(W,I,null),E(I,Ys),e(s,Ts,n),D(Q,s,n),e(s,M,n),D(j,M,null),E(M,Zs),e(s,Hs,n),D(X,s,n),e(s,h,n),D(V,h,null),E(h,sn),D(Y,h,null),e(s,Rs,n),D(Z,s,n),e(s,ss,n),D(ns,ss,null),E(ss,nn),e(s,Ps,n),D(as,s,n),e(s,B,n),D(U,B,null),E(B,an),D(ps,B,null),e(s,Ws,n),D(ls,s,n),e(s,S,n),D(es,S,null),E(S,pn),D(os,S,null),E(S,ln),e(s,js,n),D(ts,s,n),e(s,w,n),D(L,w,null),E(w,en),D(Ds,w,null),e(s,Vs,n),D(rs,s,n),e(s,cs,n),D(ys,cs,null),E(cs,on),e(s,Us,n),D(is,s,n),e(s,q,n),D(z,q,null),E(q,tn),D(Cs,q,null),e(s,Ls,n),D($s,s,n),e(s,fs,n),D(ms,fs,null),E(fs,Dn),e(s,zs,n),D(us,s,n),e(s,x,n),D(G,x,null),E(x,rn),D(Es,x,null),e(s,Gs,n),D(ds,s,n),e(s,T,n),D(gs,T,null),E(T,cn),D(Fs,T,null),E(T,yn),e(s,Js,n),D(_s,s,n),ks=!0},p(s,[n]){(!ks||n&1)&&a!==(a=s[0].title+"")&&En(i,a);const J={};n&2&&(J.$$scope={dirty:n,ctx:s}),R.$set(J);const ws={};n&2&&(ws.$$scope={dirty:n,ctx:s}),P.$set(ws);const qs={};n&2&&(qs.$$scope={dirty:n,ctx:s}),W.$set(qs);const xs={};n&2&&(xs.$$scope={dirty:n,ctx:s}),j.$set(xs);const vs={};n&2&&(vs.$$scope={dirty:n,ctx:s}),V.$set(vs);const bs={};n&2&&(bs.$$scope={dirty:n,ctx:s}),U.$set(bs);const As={};n&2&&(As.$$scope={dirty:n,ctx:s}),L.$set(As);const K={};n&2&&(K.$$scope={dirty:n,ctx:s}),z.$set(K);const hs={};n&2&&(hs.$$scope={dirty:n,ctx:s}),G.$set(hs)},i(s){ks||(r(N.$$.fragment,s),r(R.$$.fragment,s),r(P.$$.fragment,s),r(O.$$.fragment,s),r(W.$$.fragment,s),r(Q.$$.fragment,s),r(j.$$.fragment,s),r(X.$$.fragment,s),r(V.$$.fragment,s),r(Y.$$.fragment,s),r(Z.$$.fragment,s),r(ns.$$.fragment,s),r(as.$$.fragment,s),r(U.$$.fragment,s),r(ps.$$.fragment,s),r(ls.$$.fragment,s),r(es.$$.fragment,s),r(os.$$.fragment,s),r(ts.$$.fragment,s),r(L.$$.fragment,s),r(Ds.$$.fragment,s),r(rs.$$.fragment,s),r(ys.$$.fragment,s),r(is.$$.fragment,s),r(z.$$.fragment,s),r(Cs.$$.fragment,s),r($s.$$.fragment,s),r(ms.$$.fragment,s),r(us.$$.fragment,s),r(G.$$.fragment,s),r(Es.$$.fragment,s),r(ds.$$.fragment,s),r(gs.$$.fragment,s),r(Fs.$$.fragment,s),r(_s.$$.fragment,s),ks=!0)},o(s){c(N.$$.fragment,s),c(R.$$.fragment,s),c(P.$$.fragment,s),c(O.$$.fragment,s),c(W.$$.fragment,s),c(Q.$$.fragment,s),c(j.$$.fragment,s),c(X.$$.fragment,s),c(V.$$.fragment,s),c(Y.$$.fragment,s),c(Z.$$.fragment,s),c(ns.$$.fragment,s),c(as.$$.fragment,s),c(U.$$.fragment,s),c(ps.$$.fragment,s),c(ls.$$.fragment,s),c(es.$$.fragment,s),c(os.$$.fragment,s),c(ts.$$.fragment,s),c(L.$$.fragment,s),c(Ds.$$.fragment,s),c(rs.$$.fragment,s),c(ys.$$.fragment,s),c(is.$$.fragment,s),c(z.$$.fragment,s),c(Cs.$$.fragment,s),c($s.$$.fragment,s),c(ms.$$.fragment,s),c(us.$$.fragment,s),c(G.$$.fragment,s),c(Es.$$.fragment,s),c(ds.$$.fragment,s),c(gs.$$.fragment,s),c(Fs.$$.fragment,s),c(_s.$$.fragment,s),ks=!1},d(s){s&&l(p),s&&l(Bs),s&&l(b),y(N),y(R),s&&l(Ms),s&&l(k),y(P),s&&l(Ss),y(O,s),s&&l(I),y(W),s&&l(Ts),y(Q,s),s&&l(M),y(j),s&&l(Hs),y(X,s),s&&l(h),y(V),y(Y),s&&l(Rs),y(Z,s),s&&l(ss),y(ns),s&&l(Ps),y(as,s),s&&l(B),y(U),y(ps),s&&l(Ws),y(ls,s),s&&l(S),y(es),y(os),s&&l(js),y(ts,s),s&&l(w),y(L),y(Ds),s&&l(Vs),y(rs,s),s&&l(cs),y(ys),s&&l(Us),y(is,s),s&&l(q),y(z),y(Cs),s&&l(Ls),y($s,s),s&&l(fs),y(ms),s&&l(zs),y(us,s),s&&l(x),y(G),y(Es),s&&l(Gs),y(ds,s),s&&l(T),y(gs),y(Fs),s&&l(Js),y(_s,s)}}}function kn(C,p,a){let i;return dn(C,gn,Bs=>a(0,i=Bs)),[i]}class Wn extends fn{constructor(p){super(),mn(this,p,kn,bn,un,{})}}export{Wn as default};
