import{S as On,i as Hn,s as In,e as C,t,k as g,w as D,c as u,a as d,h as o,d as e,m as E,x as c,b as F,g as r,M as p,y as i,j as Gn,q as y,o as $,B as f,_ as Ln,E as Jn}from"../../../chunks/index-fdc571c5.js";import{f as Wn}from"../../../chunks/scroll-fc938a7a.js";import{C as b}from"../../../chunks/CodeFence-bf275b3f.js";import{C as v}from"../../../chunks/CodeInline-03f5d050.js";import{L as ws}from"../../../chunks/Link-d2aa795f.js";import{A as jn}from"../../../chunks/Admonition-ec3c5d9c.js";import"../../../chunks/singletons-01f6dffe.js";import"../../../chunks/contexts-ecb88871.js";function Mn(_){let l;return{c(){l=t("#")},l(a){l=o(a,"#")},m(a,m){r(a,l,m)},d(a){a&&e(l)}}}function Un(_){let l;return{c(){l=t("#")},l(a){l=o(a,"#")},m(a,m){r(a,l,m)},d(a){a&&e(l)}}}function zn(_){let l;return{c(){l=t("#")},l(a){l=o(a,"#")},m(a,m){r(a,l,m)},d(a){a&&e(l)}}}function Kn(_){let l;return{c(){l=t("#")},l(a){l=o(a,"#")},m(a,m){r(a,l,m)},d(a){a&&e(l)}}}function Qn(_){let l,a;return{c(){l=C("p"),a=t("This API is currently not available in Safari.")},l(m){l=u(m,"P",{});var x=d(l);a=o(x,"This API is currently not available in Safari."),x.forEach(e)},m(m,x){r(m,l,x),p(l,a)},p:Jn,d(m){m&&e(l)}}}function Vn(_){let l;return{c(){l=t("#")},l(a){l=o(a,"#")},m(a,m){r(a,l,m)},d(a){a&&e(l)}}}function Xn(_){let l;return{c(){l=t("#")},l(a){l=o(a,"#")},m(a,m){r(a,l,m)},d(a){a&&e(l)}}}function Yn(_){let l,a=_[0].title+"",m,x,Es,Vs,ks,H,G,Xs,Ss,K,q,L,Ys,Q,Ns,V,R,Zs,X,sn,hs,nn,en,Os,Y,T,J,an,Z,Hs,ss,A,ln,vs,pn,tn,ns,on,es,rn,Bs,Dn,cn,Is,as,P,W,yn,ls,Gs,j,Ls,ps,k,$n,ts,fn,Fs,mn,Cn,Js,os,S,M,un,rs,Ws,Ds,w,dn,xs,gn,En,cs,_n,is,An,bs,wn,hn,js,ys,N,U,vn,$s,Ms,fs,B,Bn,ms,Fn,qs,xn,bn,Cs,qn,Us,us,Rs;return G=new ws({props:{class:"header-anchor",href:"#imports","aria-hidden":"true",$$slots:{default:[Mn]},$$scope:{ctx:_}}}),K=new b({props:{lang:"typescript",ext:"ts",linesCount:8,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">animation</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">debounce</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">idle</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">throttle</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">timeout</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),L=new ws({props:{class:"header-anchor",href:"#animation","aria-hidden":"true",$$slots:{default:[Un]},$$scope:{ctx:_}}}),Q=new v({props:{code:"animation"}}),V=new b({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">animation</span><span style="color: #D4D4D4">: () </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">void</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),X=new v({props:{code:"Promise"}}),Y=new b({props:{lang:"typescript",ext:"ts",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">animation</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">animation</span><span style="color: #D4D4D4">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;I was logged before the next frame!&quot;</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span></code></pre>`}}),J=new ws({props:{class:"header-anchor",href:"#debounce","aria-hidden":"true",$$slots:{default:[zn]},$$scope:{ctx:_}}}),Z=new v({props:{code:"debounce"}}),ss=new b({props:{lang:"typescript",ext:"ts",linesCount:7,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">debounce</span><span style="color: #D4D4D4">: &lt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #4EC9B0">F</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> (...</span><span style="color: #9CDCFE">args</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4">[]) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4"> | </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">&gt;(</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">func</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">F</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">duration</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4"> = </span><span style="color: #B5CEA8">0</span></span>
<span class="line"><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> (...</span><span style="color: #9CDCFE">args</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">Parameters</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">F</span><span style="color: #D4D4D4">&gt;) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">void</span><span style="color: #D4D4D4"> | </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">void</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),ns=new v({props:{code:"func"}}),es=new v({props:{code:"duration"}}),as=new b({props:{lang:"typescript",ext:"ts",linesCount:13,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">debounce</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">wrapped_function</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">debounce</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">    (</span><span style="color: #9CDCFE">name</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">\`Hello </span><span style="color: #569CD6">\${</span><span style="color: #9CDCFE">name</span><span style="color: #569CD6">}</span><span style="color: #CE9178">!\`</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #B5CEA8">250</span></span>
<span class="line"><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #DCDCAA">wrapped_function</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;John&quot;</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// N/A</span></span>
<span class="line"></span>
<span class="line"><span style="color: #DCDCAA">wrapped_function</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;Jane&quot;</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// N/A</span></span>
<span class="line"></span>
<span class="line"><span style="color: #DCDCAA">wrapped_function</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;World&quot;</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`Hello World!\`</span></span>
<span class="line"></span></code></pre>`}}),W=new ws({props:{class:"header-anchor",href:"#idle","aria-hidden":"true",$$slots:{default:[Kn]},$$scope:{ctx:_}}}),ls=new v({props:{code:"idle"}}),j=new jn({props:{type:"warning",$$slots:{default:[Qn]},$$scope:{ctx:_}}}),ps=new b({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">idle</span><span style="color: #D4D4D4">: () </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">void</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),ts=new v({props:{code:"Promise"}}),os=new b({props:{lang:"typescript",ext:"ts",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">idle</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">idle</span><span style="color: #D4D4D4">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;I was eventually logged!&quot;</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span></code></pre>`}}),M=new ws({props:{class:"header-anchor",href:"#throttle","aria-hidden":"true",$$slots:{default:[Vn]},$$scope:{ctx:_}}}),rs=new v({props:{code:"throttle"}}),Ds=new b({props:{lang:"typescript",ext:"ts",linesCount:7,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">throttle</span><span style="color: #D4D4D4">: &lt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #4EC9B0">F</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> (...</span><span style="color: #9CDCFE">args</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4">[]) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4"> | </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">&gt;(</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">func</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">F</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">duration</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4"> = </span><span style="color: #B5CEA8">0</span></span>
<span class="line"><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> (...</span><span style="color: #9CDCFE">args</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">Parameters</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">F</span><span style="color: #D4D4D4">&gt;) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">void</span><span style="color: #D4D4D4"> | </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">void</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),cs=new v({props:{code:"func"}}),is=new v({props:{code:"duration"}}),ys=new b({props:{lang:"typescript",ext:"ts",linesCount:18,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">throttle</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">timeout</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">wrapped_function</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">throttle</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">    () </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;I was called!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #B5CEA8">250</span></span>
<span class="line"><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #DCDCAA">wrapped_function</span><span style="color: #D4D4D4">(); </span><span style="color: #6A9955">// \`I was called!\`</span></span>
<span class="line"></span>
<span class="line"><span style="color: #DCDCAA">wrapped_function</span><span style="color: #D4D4D4">(); </span><span style="color: #6A9955">// N/A</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">timeout</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">250</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #DCDCAA">wrapped_function</span><span style="color: #D4D4D4">(); </span><span style="color: #6A9955">// \`I was called!\`</span></span>
<span class="line"></span></code></pre>`}}),U=new ws({props:{class:"header-anchor",href:"#timeout","aria-hidden":"true",$$slots:{default:[Xn]},$$scope:{ctx:_}}}),$s=new v({props:{code:"timeout"}}),fs=new b({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">timeout</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">delay</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">number</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">void</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),ms=new v({props:{code:"Promise"}}),Cs=new v({props:{code:"delay"}}),us=new b({props:{lang:"typescript",ext:"ts",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">timeout</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">timeout</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">1500</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;I was logged 1.5s later!&quot;</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span></code></pre>`}}),{c(){l=C("h1"),m=t(a),x=g(),Es=C("p"),Vs=t("Helper utilities for random generation related tasks are provided."),ks=g(),H=C("h2"),D(G.$$.fragment),Xs=t(" Imports"),Ss=g(),D(K.$$.fragment),q=C("h2"),D(L.$$.fragment),Ys=g(),D(Q.$$.fragment),Ns=g(),D(V.$$.fragment),R=C("p"),Zs=t("Returns a "),D(X.$$.fragment),sn=t(" that resolves "),hs=C("strong"),nn=t("BEFORE"),en=t(" the Browser's next repaint."),Os=g(),D(Y.$$.fragment),T=C("h2"),D(J.$$.fragment),an=g(),D(Z.$$.fragment),Hs=g(),D(ss.$$.fragment),A=C("p"),ln=t("Returns a wrapper function that does "),vs=C("strong"),pn=t("NOT"),tn=t(" execute "),D(ns.$$.fragment),on=t(" function first until after the "),D(es.$$.fragment),rn=t(" in milliseconds has elapsed since the "),Bs=C("strong"),Dn=t("LATEST"),cn=t(" call."),Is=g(),D(as.$$.fragment),P=C("h2"),D(W.$$.fragment),yn=g(),D(ls.$$.fragment),Gs=g(),D(j.$$.fragment),Ls=g(),D(ps.$$.fragment),k=C("p"),$n=t("Returns a "),D(ts.$$.fragment),fn=t(" that resolves "),Fs=C("strong"),mn=t("AFTER"),Cn=t(" the Browser's event loop goes idle."),Js=g(),D(os.$$.fragment),S=C("h2"),D(M.$$.fragment),un=g(),D(rs.$$.fragment),Ws=g(),D(Ds.$$.fragment),w=C("p"),dn=t("Returns a wrapper function that does "),xs=C("strong"),gn=t("NOT"),En=t(" execute the inner "),D(cs.$$.fragment),_n=t(" function again until after the "),D(is.$$.fragment),An=t(" in milliseconds has elapsed since the "),bs=C("strong"),wn=t("LAST"),hn=t(" call."),js=g(),D(ys.$$.fragment),N=C("h2"),D(U.$$.fragment),vn=g(),D($s.$$.fragment),Ms=g(),D(fs.$$.fragment),B=C("p"),Bn=t("Returns a "),D(ms.$$.fragment),Fn=t(" that resolves "),qs=C("strong"),xn=t("AFTER"),bn=t(" the "),D(Cs.$$.fragment),qn=t(" in milliseconds has elapsed."),Us=g(),D(us.$$.fragment),this.h()},l(s){l=u(s,"H1",{});var n=d(l);m=o(n,a),n.forEach(e),x=E(s),Es=u(s,"P",{});var Ts=d(Es);Vs=o(Ts,"Helper utilities for random generation related tasks are provided."),Ts.forEach(e),ks=E(s),H=u(s,"H2",{id:!0,tabindex:!0});var _s=d(H);c(G.$$.fragment,_s),Xs=o(_s," Imports"),_s.forEach(e),Ss=E(s),c(K.$$.fragment,s),q=u(s,"H2",{id:!0,tabindex:!0});var ds=d(q);c(L.$$.fragment,ds),Ys=E(ds),c(Q.$$.fragment,ds),ds.forEach(e),Ns=E(s),c(V.$$.fragment,s),R=u(s,"P",{});var I=d(R);Zs=o(I,"Returns a "),c(X.$$.fragment,I),sn=o(I," that resolves "),hs=u(I,"STRONG",{});var Ps=d(hs);nn=o(Ps,"BEFORE"),Ps.forEach(e),en=o(I," the Browser's next repaint."),I.forEach(e),Os=E(s),c(Y.$$.fragment,s),T=u(s,"H2",{id:!0,tabindex:!0});var gs=d(T);c(J.$$.fragment,gs),an=E(gs),c(Z.$$.fragment,gs),gs.forEach(e),Hs=E(s),c(ss.$$.fragment,s),A=u(s,"P",{});var h=d(A);ln=o(h,"Returns a wrapper function that does "),vs=u(h,"STRONG",{});var Rn=d(vs);pn=o(Rn,"NOT"),Rn.forEach(e),tn=o(h," execute "),c(ns.$$.fragment,h),on=o(h," function first until after the "),c(es.$$.fragment,h),rn=o(h," in milliseconds has elapsed since the "),Bs=u(h,"STRONG",{});var Tn=d(Bs);Dn=o(Tn,"LATEST"),Tn.forEach(e),cn=o(h," call."),h.forEach(e),Is=E(s),c(as.$$.fragment,s),P=u(s,"H2",{id:!0,tabindex:!0});var zs=d(P);c(W.$$.fragment,zs),yn=E(zs),c(ls.$$.fragment,zs),zs.forEach(e),Gs=E(s),c(j.$$.fragment,s),Ls=E(s),c(ps.$$.fragment,s),k=u(s,"P",{});var As=d(k);$n=o(As,"Returns a "),c(ts.$$.fragment,As),fn=o(As," that resolves "),Fs=u(As,"STRONG",{});var Pn=d(Fs);mn=o(Pn,"AFTER"),Pn.forEach(e),Cn=o(As," the Browser's event loop goes idle."),As.forEach(e),Js=E(s),c(os.$$.fragment,s),S=u(s,"H2",{id:!0,tabindex:!0});var Ks=d(S);c(M.$$.fragment,Ks),un=E(Ks),c(rs.$$.fragment,Ks),Ks.forEach(e),Ws=E(s),c(Ds.$$.fragment,s),w=u(s,"P",{});var O=d(w);dn=o(O,"Returns a wrapper function that does "),xs=u(O,"STRONG",{});var kn=d(xs);gn=o(kn,"NOT"),kn.forEach(e),En=o(O," execute the inner "),c(cs.$$.fragment,O),_n=o(O," function again until after the "),c(is.$$.fragment,O),An=o(O," in milliseconds has elapsed since the "),bs=u(O,"STRONG",{});var Sn=d(bs);wn=o(Sn,"LAST"),Sn.forEach(e),hn=o(O," call."),O.forEach(e),js=E(s),c(ys.$$.fragment,s),N=u(s,"H2",{id:!0,tabindex:!0});var Qs=d(N);c(U.$$.fragment,Qs),vn=E(Qs),c($s.$$.fragment,Qs),Qs.forEach(e),Ms=E(s),c(fs.$$.fragment,s),B=u(s,"P",{});var z=d(B);Bn=o(z,"Returns a "),c(ms.$$.fragment,z),Fn=o(z," that resolves "),qs=u(z,"STRONG",{});var Nn=d(qs);xn=o(Nn,"AFTER"),Nn.forEach(e),bn=o(z," the "),c(Cs.$$.fragment,z),qn=o(z," in milliseconds has elapsed."),z.forEach(e),Us=E(s),c(us.$$.fragment,s),this.h()},h(){F(H,"id","imports"),F(H,"tabindex","-1"),F(q,"id","animation"),F(q,"tabindex","-1"),F(T,"id","debounce"),F(T,"tabindex","-1"),F(P,"id","idle"),F(P,"tabindex","-1"),F(S,"id","throttle"),F(S,"tabindex","-1"),F(N,"id","timeout"),F(N,"tabindex","-1")},m(s,n){r(s,l,n),p(l,m),r(s,x,n),r(s,Es,n),p(Es,Vs),r(s,ks,n),r(s,H,n),i(G,H,null),p(H,Xs),r(s,Ss,n),i(K,s,n),r(s,q,n),i(L,q,null),p(q,Ys),i(Q,q,null),r(s,Ns,n),i(V,s,n),r(s,R,n),p(R,Zs),i(X,R,null),p(R,sn),p(R,hs),p(hs,nn),p(R,en),r(s,Os,n),i(Y,s,n),r(s,T,n),i(J,T,null),p(T,an),i(Z,T,null),r(s,Hs,n),i(ss,s,n),r(s,A,n),p(A,ln),p(A,vs),p(vs,pn),p(A,tn),i(ns,A,null),p(A,on),i(es,A,null),p(A,rn),p(A,Bs),p(Bs,Dn),p(A,cn),r(s,Is,n),i(as,s,n),r(s,P,n),i(W,P,null),p(P,yn),i(ls,P,null),r(s,Gs,n),i(j,s,n),r(s,Ls,n),i(ps,s,n),r(s,k,n),p(k,$n),i(ts,k,null),p(k,fn),p(k,Fs),p(Fs,mn),p(k,Cn),r(s,Js,n),i(os,s,n),r(s,S,n),i(M,S,null),p(S,un),i(rs,S,null),r(s,Ws,n),i(Ds,s,n),r(s,w,n),p(w,dn),p(w,xs),p(xs,gn),p(w,En),i(cs,w,null),p(w,_n),i(is,w,null),p(w,An),p(w,bs),p(bs,wn),p(w,hn),r(s,js,n),i(ys,s,n),r(s,N,n),i(U,N,null),p(N,vn),i($s,N,null),r(s,Ms,n),i(fs,s,n),r(s,B,n),p(B,Bn),i(ms,B,null),p(B,Fn),p(B,qs),p(qs,xn),p(B,bn),i(Cs,B,null),p(B,qn),r(s,Us,n),i(us,s,n),Rs=!0},p(s,[n]){(!Rs||n&1)&&a!==(a=s[0].title+"")&&Gn(m,a);const Ts={};n&2&&(Ts.$$scope={dirty:n,ctx:s}),G.$set(Ts);const _s={};n&2&&(_s.$$scope={dirty:n,ctx:s}),L.$set(_s);const ds={};n&2&&(ds.$$scope={dirty:n,ctx:s}),J.$set(ds);const I={};n&2&&(I.$$scope={dirty:n,ctx:s}),W.$set(I);const Ps={};n&2&&(Ps.$$scope={dirty:n,ctx:s}),j.$set(Ps);const gs={};n&2&&(gs.$$scope={dirty:n,ctx:s}),M.$set(gs);const h={};n&2&&(h.$$scope={dirty:n,ctx:s}),U.$set(h)},i(s){Rs||(y(G.$$.fragment,s),y(K.$$.fragment,s),y(L.$$.fragment,s),y(Q.$$.fragment,s),y(V.$$.fragment,s),y(X.$$.fragment,s),y(Y.$$.fragment,s),y(J.$$.fragment,s),y(Z.$$.fragment,s),y(ss.$$.fragment,s),y(ns.$$.fragment,s),y(es.$$.fragment,s),y(as.$$.fragment,s),y(W.$$.fragment,s),y(ls.$$.fragment,s),y(j.$$.fragment,s),y(ps.$$.fragment,s),y(ts.$$.fragment,s),y(os.$$.fragment,s),y(M.$$.fragment,s),y(rs.$$.fragment,s),y(Ds.$$.fragment,s),y(cs.$$.fragment,s),y(is.$$.fragment,s),y(ys.$$.fragment,s),y(U.$$.fragment,s),y($s.$$.fragment,s),y(fs.$$.fragment,s),y(ms.$$.fragment,s),y(Cs.$$.fragment,s),y(us.$$.fragment,s),Rs=!0)},o(s){$(G.$$.fragment,s),$(K.$$.fragment,s),$(L.$$.fragment,s),$(Q.$$.fragment,s),$(V.$$.fragment,s),$(X.$$.fragment,s),$(Y.$$.fragment,s),$(J.$$.fragment,s),$(Z.$$.fragment,s),$(ss.$$.fragment,s),$(ns.$$.fragment,s),$(es.$$.fragment,s),$(as.$$.fragment,s),$(W.$$.fragment,s),$(ls.$$.fragment,s),$(j.$$.fragment,s),$(ps.$$.fragment,s),$(ts.$$.fragment,s),$(os.$$.fragment,s),$(M.$$.fragment,s),$(rs.$$.fragment,s),$(Ds.$$.fragment,s),$(cs.$$.fragment,s),$(is.$$.fragment,s),$(ys.$$.fragment,s),$(U.$$.fragment,s),$($s.$$.fragment,s),$(fs.$$.fragment,s),$(ms.$$.fragment,s),$(Cs.$$.fragment,s),$(us.$$.fragment,s),Rs=!1},d(s){s&&e(l),s&&e(x),s&&e(Es),s&&e(ks),s&&e(H),f(G),s&&e(Ss),f(K,s),s&&e(q),f(L),f(Q),s&&e(Ns),f(V,s),s&&e(R),f(X),s&&e(Os),f(Y,s),s&&e(T),f(J),f(Z),s&&e(Hs),f(ss,s),s&&e(A),f(ns),f(es),s&&e(Is),f(as,s),s&&e(P),f(W),f(ls),s&&e(Gs),f(j,s),s&&e(Ls),f(ps,s),s&&e(k),f(ts),s&&e(Js),f(os,s),s&&e(S),f(M),f(rs),s&&e(Ws),f(Ds,s),s&&e(w),f(cs),f(is),s&&e(js),f(ys,s),s&&e(N),f(U),f($s),s&&e(Ms),f(fs,s),s&&e(B),f(ms),f(Cs),s&&e(Us),f(us,s)}}}function Zn(_,l,a){let m;return Ln(_,Wn,x=>a(0,m=x)),[m]}class re extends On{constructor(l){super(),Hn(this,l,Zn,Yn,In,{})}}export{re as default};
