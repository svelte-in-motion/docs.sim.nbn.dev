import{S as Tn,i as Pn,s as kn,e as g,t as C,k as f,w as e,c as F,a as B,h as $,d as l,m as d,x as t,b as E,g as o,M as m,y as D,j as Hn,q as c,o as r,B as y,_ as Sn}from"../../../chunks/index-fdc571c5.js";import{f as Rn}from"../../../chunks/scroll-fc938a7a.js";import{C as h}from"../../../chunks/CodeFence-bf275b3f.js";import{C as A}from"../../../chunks/CodeInline-03f5d050.js";import{L as P}from"../../../chunks/Link-d2aa795f.js";import"../../../chunks/singletons-01f6dffe.js";import"../../../chunks/contexts-ecb88871.js";function Wn(u){let p;return{c(){p=C("Svelte Store")},l(a){p=$(a,"Svelte Store")},m(a,i){o(a,p,i)},d(a){a&&l(p)}}}function On(u){let p;return{c(){p=C("#")},l(a){p=$(a,"#")},m(a,i){o(a,p,i)},d(a){a&&l(p)}}}function Gn(u){let p;return{c(){p=C("#")},l(a){p=$(a,"#")},m(a,i){o(a,p,i)},d(a){a&&l(p)}}}function jn(u){let p;return{c(){p=C("#")},l(a){p=$(a,"#")},m(a,i){o(a,p,i)},d(a){a&&l(p)}}}function Un(u){let p;return{c(){p=C("#")},l(a){p=$(a,"#")},m(a,i){o(a,p,i)},d(a){a&&l(p)}}}function Ln(u){let p;return{c(){p=C("#")},l(a){p=$(a,"#")},m(a,i){o(a,p,i)},d(a){a&&l(p)}}}function Mn(u){let p;return{c(){p=C("#")},l(a){p=$(a,"#")},m(a,i){o(a,p,i)},d(a){a&&l(p)}}}function zn(u){let p;return{c(){p=C("#")},l(a){p=$(a,"#")},m(a,i){o(a,p,i)},d(a){a&&l(p)}}}function Jn(u){let p;return{c(){p=C("#")},l(a){p=$(a,"#")},m(a,i){o(a,p,i)},d(a){a&&l(p)}}}function Kn(u){let p;return{c(){p=C("#")},l(a){p=$(a,"#")},m(a,i){o(a,p,i)},d(a){a&&l(p)}}}function Nn(u){let p,a=u[0].title+"",i,Ss,k,Y,Dn,G,cn,Ls,H,j,rn,Ms,Z,S,U,yn,zs,ss,R,L,Cn,Js,ns,q,M,$n,as,Ks,ls,W,ps,un,os,fn,Ns,es,w,z,dn,ts,Qs,Ds,_,cs,mn,rs,En,ys,gn,Vs,is,x,J,Fn,Cs,Xs,$s,us,fs,Bn,Ys,ds,v,K,An,ms,Zs,Es,gs,Fs,hn,sn,Bs,b,N,_n,As,nn,hs,_s,qs,qn,an,ws,I,Q,wn,xs,ln,vs,O,bs,xn,Is,vn,pn,Ts,js;return Y=new A({props:{code:"collection"}}),G=new P({props:{href:"https://svelte.dev/docs#run-time-svelte-store-writable",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Wn]},$$scope:{ctx:u}}}),j=new P({props:{class:"header-anchor",href:"#imports","aria-hidden":"true",$$slots:{default:[On]},$$scope:{ctx:u}}}),Z=new h({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),U=new P({props:{class:"header-anchor",href:"#definitions","aria-hidden":"true",$$slots:{default:[Gn]},$$scope:{ctx:u}}}),ss=new h({props:{lang:"typescript",ext:"ts",linesCount:20,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">type</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionItem</span><span style="color: #D4D4D4"> = </span><span style="color: #4EC9B0">Record</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">, </span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">type</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IPredicate</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionItem</span><span style="color: #D4D4D4">&gt; =</span></span>
<span class="line"><span style="color: #D4D4D4">    | </span><span style="color: #4EC9B0">IPredicateFunction</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    | </span><span style="color: #4EC9B0">IPredicatePath</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">type</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IPredicateFunction</span><span style="color: #D4D4D4">&lt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionItem</span></span>
<span class="line"><span style="color: #D4D4D4">&gt; = (</span><span style="color: #9CDCFE">item</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">type</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">IPredicatePath</span><span style="color: #D4D4D4"> = </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">type</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionStore</span><span style="color: #D4D4D4">&lt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionItem</span></span>
<span class="line"><span style="color: #D4D4D4">&gt; = </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">[]&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">collection</span><span style="color: #D4D4D4">: &lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionItem</span><span style="color: #D4D4D4">&gt;(</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">store</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">Writable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">[]&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionStore</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),L=new P({props:{class:"header-anchor",href:"#usage","aria-hidden":"true",$$slots:{default:[jn]},$$scope:{ctx:u}}}),ns=new h({props:{lang:"typescript",ext:"ts",linesCount:21,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">get</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;svelte/store&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">generate_uuid</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">collection_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">collection</span><span style="color: #D4D4D4">();</span></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">uuid</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">generate_uuid</span><span style="color: #D4D4D4">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">push</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">text:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Hello World!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">uuid</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">collection_store</span><span style="color: #D4D4D4">)); </span><span style="color: #6A9955">// \`[{text: &quot;Hello World!&quot;, uuid: &quot;878a1fd8-6538-4926-a739-71ecbad5dd32&quot;}]\`</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">item</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">find</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;uuid&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">uuid</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">item</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`{text: &quot;Hello World!&quot;, uuid: &quot;878a1fd8-6538-4926-a739-71ecbad5dd32&quot;}\`</span></span>
<span class="line"></span></code></pre>`}}),M=new P({props:{class:"header-anchor",href:"#collection-find","aria-hidden":"true",$$slots:{default:[Un]},$$scope:{ctx:u}}}),as=new A({props:{code:"collection.find"}}),ls=new h({props:{lang:"typescript",ext:"ts",linesCount:14,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">interface</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionStore</span><span style="color: #D4D4D4">&lt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionItem</span></span>
<span class="line"><span style="color: #D4D4D4">&gt; </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">[]&gt; {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">find</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicateFunction</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;): </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> | </span><span style="color: #4EC9B0">null</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">find</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicatePath</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">any</span></span>
<span class="line"><span style="color: #D4D4D4">    ): </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> | </span><span style="color: #4EC9B0">null</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">find</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicate</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">any</span></span>
<span class="line"><span style="color: #D4D4D4">    ): </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> | </span><span style="color: #4EC9B0">null</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span>
<span class="line"></span></code></pre>`}}),ps=new A({props:{code:"collection.find"}}),os=new A({props:{code:"null"}}),es=new h({props:{lang:"typescript",ext:"ts",linesCount:16,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">generate_uuid</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">collection_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">collection</span><span style="color: #D4D4D4">();</span></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">uuid</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">generate_uuid</span><span style="color: #D4D4D4">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">push</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">uuid</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">item</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">find</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;uuid&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">uuid</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">item</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`{uuid: &quot;878a1fd8-6538-4926-a739-71ecbad5dd32&quot;}\`</span></span>
<span class="line"></span></code></pre>`}}),z=new P({props:{class:"header-anchor",href:"#collection-has","aria-hidden":"true",$$slots:{default:[Ln]},$$scope:{ctx:u}}}),ts=new A({props:{code:"collection.has"}}),Ds=new h({props:{lang:"typescript",ext:"ts",linesCount:14,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">interface</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionStore</span><span style="color: #D4D4D4">&lt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionItem</span></span>
<span class="line"><span style="color: #D4D4D4">&gt; </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">[]&gt; {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicateFunction</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;): </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicatePath</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">any</span></span>
<span class="line"><span style="color: #D4D4D4">    ): </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicate</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">any</span></span>
<span class="line"><span style="color: #D4D4D4">    ): </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span>
<span class="line"></span></code></pre>`}}),cs=new A({props:{code:"collection.has"}}),rs=new A({props:{code:"true"}}),ys=new A({props:{code:"false"}}),is=new h({props:{lang:"typescript",ext:"ts",linesCount:16,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">generate_uuid</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">collection_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">collection</span><span style="color: #D4D4D4">();</span></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">uuid</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">generate_uuid</span><span style="color: #D4D4D4">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">push</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">uuid</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">has_item</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">has</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;uuid&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">uuid</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">has_item</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`true\`</span></span>
<span class="line"></span></code></pre>`}}),J=new P({props:{class:"header-anchor",href:"#collection-push","aria-hidden":"true",$$slots:{default:[Mn]},$$scope:{ctx:u}}}),Cs=new A({props:{code:"collection.push"}}),$s=new h({props:{lang:"typescript",ext:"ts",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">interface</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionStore</span><span style="color: #D4D4D4">&lt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionItem</span></span>
<span class="line"><span style="color: #D4D4D4">&gt; </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">[]&gt; {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">push</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">item</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">): </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span>
<span class="line"></span></code></pre>`}}),fs=new A({props:{code:"collection.push"}}),ds=new h({props:{lang:"typescript",ext:"ts",linesCount:15,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">generate_uuid</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">collection_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">collection</span><span style="color: #D4D4D4">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">created_item</span><span style="color: #D4D4D4"> = {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">uuid:</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">generate_uuid</span><span style="color: #D4D4D4">(),</span></span>
<span class="line"><span style="color: #D4D4D4">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">pushed_item</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">push</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">created_item</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">created_item</span><span style="color: #D4D4D4"> === </span><span style="color: #9CDCFE">pushed_item</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`true\`</span></span>
<span class="line"></span></code></pre>`}}),K=new P({props:{class:"header-anchor",href:"#collection-remove","aria-hidden":"true",$$slots:{default:[zn]},$$scope:{ctx:u}}}),ms=new A({props:{code:"collection.remove"}}),Es=new h({props:{lang:"typescript",ext:"ts",linesCount:8,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">interface</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionStore</span><span style="color: #D4D4D4">&lt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionItem</span></span>
<span class="line"><span style="color: #D4D4D4">&gt; </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">[]&gt; {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">remove</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicateFunction</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;): </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">remove</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicatePath</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4">): </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">remove</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicate</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;, </span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4">): </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span>
<span class="line"></span></code></pre>`}}),Fs=new A({props:{code:"collection.remove"}}),Bs=new h({props:{lang:"typescript",ext:"ts",linesCount:16,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">generate_uuid</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">collection_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">collection</span><span style="color: #D4D4D4">();</span></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">uuid</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">generate_uuid</span><span style="color: #D4D4D4">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">push</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">uuid</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">item</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">remove</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;uuid&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">uuid</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">item</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`{uuid: &quot;878a1fd8-6538-4926-a739-71ecbad5dd32&quot;}\`</span></span>
<span class="line"></span></code></pre>`}}),N=new P({props:{class:"header-anchor",href:"#collection-update","aria-hidden":"true",$$slots:{default:[Jn]},$$scope:{ctx:u}}}),As=new A({props:{code:"collection.update"}}),hs=new h({props:{lang:"typescript",ext:"ts",linesCount:19,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">interface</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionStore</span><span style="color: #D4D4D4">&lt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionItem</span></span>
<span class="line"><span style="color: #D4D4D4">&gt; </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">[]&gt; {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">update</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicateFunction</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">partial</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">Partial</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    ): </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">update</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicatePath</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">partial</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">Partial</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    ): </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">update</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicate</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">any</span><span style="color: #D4D4D4"> | </span><span style="color: #4EC9B0">Partial</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">partial</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">Partial</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    ): </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span>
<span class="line"></span></code></pre>`}}),qs=new A({props:{code:"collection.update"}}),ws=new h({props:{lang:"typescript",ext:"ts",linesCount:23,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">get</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;svelte/store&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">generate_uuid</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">collection_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">collection</span><span style="color: #D4D4D4">();</span></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">uuid</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">generate_uuid</span><span style="color: #D4D4D4">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">push</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">text:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Hello World!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">uuid</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">$collection_store</span><span style="color: #D4D4D4">)); </span><span style="color: #6A9955">// \`[{text: &quot;Hello World!&quot;, uuid: &quot;878a1fd8-6538-4926-a739-71ecbad5dd32&quot;}]\`</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">item</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">update</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;uuid&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">uuid</span><span style="color: #D4D4D4">, {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">text:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Goodbye friend!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #DCDCAA">get</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">$collection_store</span><span style="color: #D4D4D4">)); </span><span style="color: #6A9955">// \`[{text: &quot;Goodbye friend!&quot;, uuid: &quot;878a1fd8-6538-4926-a739-71ecbad5dd32&quot;}]\`</span></span>
<span class="line"></span></code></pre>`}}),Q=new P({props:{class:"header-anchor",href:"#collection-watch","aria-hidden":"true",$$slots:{default:[Kn]},$$scope:{ctx:u}}}),xs=new A({props:{code:"collection.watch"}}),vs=new h({props:{lang:"typescript",ext:"ts",linesCount:16,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">interface</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionStore</span><span style="color: #D4D4D4">&lt;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ICollectionItem</span></span>
<span class="line"><span style="color: #D4D4D4">&gt; </span><span style="color: #569CD6">extends</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">[]&gt; {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">watch</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicateFunction</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">    ): </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> | </span><span style="color: #4EC9B0">null</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">watch</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicatePath</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">any</span></span>
<span class="line"><span style="color: #D4D4D4">    ): </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> | </span><span style="color: #4EC9B0">null</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">watch</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">predicate</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IPredicate</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4">&gt;,</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">any</span></span>
<span class="line"><span style="color: #D4D4D4">    ): </span><span style="color: #4EC9B0">Readable</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">T</span><span style="color: #D4D4D4"> | </span><span style="color: #4EC9B0">null</span><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span>
<span class="line"></span></code></pre>`}}),bs=new A({props:{code:"collection.watch"}}),Is=new A({props:{code:"Readable"}}),Ts=new h({props:{lang:"typescript",ext:"ts",linesCount:21,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">generate_uuid</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">collection_store</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">collection</span><span style="color: #D4D4D4">();</span></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">uuid</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">generate_uuid</span><span style="color: #D4D4D4">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">push</span><span style="color: #D4D4D4">({</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">text:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Hello World!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">uuid</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">item_store</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">watch</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;uuid&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">uuid</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C8C8C8">$</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">$item_store</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// \`{text: &quot;Hello World!&quot;, uuid: &quot;878a1fd8-6538-4926-a739-71ecbad5dd32&quot;}\`</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">item</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">collection</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">update</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;uuid&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">uuid</span><span style="color: #D4D4D4">, {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">text:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Goodbye friend!&quot;</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">}); </span><span style="color: #6A9955">// \`{text: &quot;Goodbye friend!&quot;, uuid: &quot;878a1fd8-6538-4926-a739-71ecbad5dd32&quot;}\`</span></span>
<span class="line"></span></code></pre>`}}),{c(){p=g("h1"),i=C(a),Ss=f(),k=g("p"),e(Y.$$.fragment),Dn=C(" is a "),e(G.$$.fragment),cn=C(" that helps with managing a reactive array of objects without you directly dealing with mutations."),Ls=f(),H=g("h2"),e(j.$$.fragment),rn=C(" Imports"),Ms=f(),e(Z.$$.fragment),S=g("h2"),e(U.$$.fragment),yn=C(" Definitions"),zs=f(),e(ss.$$.fragment),R=g("h2"),e(L.$$.fragment),Cn=C(" Usage"),Js=f(),e(ns.$$.fragment),q=g("h2"),e(M.$$.fragment),$n=f(),e(as.$$.fragment),Ks=f(),e(ls.$$.fragment),W=g("p"),e(ps.$$.fragment),un=C(" returns an item, if found in the collection that matches the predicate. Otherwise, "),e(os.$$.fragment),fn=C(" is returned."),Ns=f(),e(es.$$.fragment),w=g("h2"),e(z.$$.fragment),dn=f(),e(ts.$$.fragment),Qs=f(),e(Ds.$$.fragment),_=g("p"),e(cs.$$.fragment),mn=C(" returns "),e(rs.$$.fragment),En=C(", if an item was found in the collection that matches the predicate. Otherwise, "),e(ys.$$.fragment),gn=C(" is returned."),Vs=f(),e(is.$$.fragment),x=g("h2"),e(J.$$.fragment),Fn=f(),e(Cs.$$.fragment),Xs=f(),e($s.$$.fragment),us=g("p"),e(fs.$$.fragment),Bn=C(" pushes a new item into the collection, returning the pushed item."),Ys=f(),e(ds.$$.fragment),v=g("h2"),e(K.$$.fragment),An=f(),e(ms.$$.fragment),Zs=f(),e(Es.$$.fragment),gs=g("p"),e(Fs.$$.fragment),hn=C(" removes an item from the collection, if one is found that matches the predicate. Otherwise, throws an exception."),sn=f(),e(Bs.$$.fragment),b=g("h2"),e(N.$$.fragment),_n=f(),e(As.$$.fragment),nn=f(),e(hs.$$.fragment),_s=g("p"),e(qs.$$.fragment),qn=C(" partial updates an item within the collection, if one is found that matches the predicate."),an=f(),e(ws.$$.fragment),I=g("h2"),e(Q.$$.fragment),wn=f(),e(xs.$$.fragment),ln=f(),e(vs.$$.fragment),O=g("p"),e(bs.$$.fragment),xn=C(" returns a "),e(Is.$$.fragment),vn=C(" Store, that reactively returns the value of the item that matches the predicate."),pn=f(),e(Ts.$$.fragment),this.h()},l(s){p=F(s,"H1",{});var n=B(p);i=$(n,a),n.forEach(l),Ss=d(s),k=F(s,"P",{});var V=B(k);t(Y.$$.fragment,V),Dn=$(V," is a "),t(G.$$.fragment,V),cn=$(V," that helps with managing a reactive array of objects without you directly dealing with mutations."),V.forEach(l),Ls=d(s),H=F(s,"H2",{id:!0,tabindex:!0});var Rs=B(H);t(j.$$.fragment,Rs),rn=$(Rs," Imports"),Rs.forEach(l),Ms=d(s),t(Z.$$.fragment,s),S=F(s,"H2",{id:!0,tabindex:!0});var Ws=B(S);t(U.$$.fragment,Ws),yn=$(Ws," Definitions"),Ws.forEach(l),zs=d(s),t(ss.$$.fragment,s),R=F(s,"H2",{id:!0,tabindex:!0});var Os=B(R);t(L.$$.fragment,Os),Cn=$(Os," Usage"),Os.forEach(l),Js=d(s),t(ns.$$.fragment,s),q=F(s,"H2",{id:!0,tabindex:!0});var Ps=B(q);t(M.$$.fragment,Ps),$n=d(Ps),t(as.$$.fragment,Ps),Ps.forEach(l),Ks=d(s),t(ls.$$.fragment,s),W=F(s,"P",{});var X=B(W);t(ps.$$.fragment,X),un=$(X," returns an item, if found in the collection that matches the predicate. Otherwise, "),t(os.$$.fragment,X),fn=$(X," is returned."),X.forEach(l),Ns=d(s),t(es.$$.fragment,s),w=F(s,"H2",{id:!0,tabindex:!0});var ks=B(w);t(z.$$.fragment,ks),dn=d(ks),t(ts.$$.fragment,ks),ks.forEach(l),Qs=d(s),t(Ds.$$.fragment,s),_=F(s,"P",{});var T=B(_);t(cs.$$.fragment,T),mn=$(T," returns "),t(rs.$$.fragment,T),En=$(T,", if an item was found in the collection that matches the predicate. Otherwise, "),t(ys.$$.fragment,T),gn=$(T," is returned."),T.forEach(l),Vs=d(s),t(is.$$.fragment,s),x=F(s,"H2",{id:!0,tabindex:!0});var Hs=B(x);t(J.$$.fragment,Hs),Fn=d(Hs),t(Cs.$$.fragment,Hs),Hs.forEach(l),Xs=d(s),t($s.$$.fragment,s),us=F(s,"P",{});var Gs=B(us);t(fs.$$.fragment,Gs),Bn=$(Gs," pushes a new item into the collection, returning the pushed item."),Gs.forEach(l),Ys=d(s),t(ds.$$.fragment,s),v=F(s,"H2",{id:!0,tabindex:!0});var on=B(v);t(K.$$.fragment,on),An=d(on),t(ms.$$.fragment,on),on.forEach(l),Zs=d(s),t(Es.$$.fragment,s),gs=F(s,"P",{});var bn=B(gs);t(Fs.$$.fragment,bn),hn=$(bn," removes an item from the collection, if one is found that matches the predicate. Otherwise, throws an exception."),bn.forEach(l),sn=d(s),t(Bs.$$.fragment,s),b=F(s,"H2",{id:!0,tabindex:!0});var en=B(b);t(N.$$.fragment,en),_n=d(en),t(As.$$.fragment,en),en.forEach(l),nn=d(s),t(hs.$$.fragment,s),_s=F(s,"P",{});var In=B(_s);t(qs.$$.fragment,In),qn=$(In," partial updates an item within the collection, if one is found that matches the predicate."),In.forEach(l),an=d(s),t(ws.$$.fragment,s),I=F(s,"H2",{id:!0,tabindex:!0});var tn=B(I);t(Q.$$.fragment,tn),wn=d(tn),t(xs.$$.fragment,tn),tn.forEach(l),ln=d(s),t(vs.$$.fragment,s),O=F(s,"P",{});var Us=B(O);t(bs.$$.fragment,Us),xn=$(Us," returns a "),t(Is.$$.fragment,Us),vn=$(Us," Store, that reactively returns the value of the item that matches the predicate."),Us.forEach(l),pn=d(s),t(Ts.$$.fragment,s),this.h()},h(){E(H,"id","imports"),E(H,"tabindex","-1"),E(S,"id","definitions"),E(S,"tabindex","-1"),E(R,"id","usage"),E(R,"tabindex","-1"),E(q,"id","collection-find"),E(q,"tabindex","-1"),E(w,"id","collection-has"),E(w,"tabindex","-1"),E(x,"id","collection-push"),E(x,"tabindex","-1"),E(v,"id","collection-remove"),E(v,"tabindex","-1"),E(b,"id","collection-update"),E(b,"tabindex","-1"),E(I,"id","collection-watch"),E(I,"tabindex","-1")},m(s,n){o(s,p,n),m(p,i),o(s,Ss,n),o(s,k,n),D(Y,k,null),m(k,Dn),D(G,k,null),m(k,cn),o(s,Ls,n),o(s,H,n),D(j,H,null),m(H,rn),o(s,Ms,n),D(Z,s,n),o(s,S,n),D(U,S,null),m(S,yn),o(s,zs,n),D(ss,s,n),o(s,R,n),D(L,R,null),m(R,Cn),o(s,Js,n),D(ns,s,n),o(s,q,n),D(M,q,null),m(q,$n),D(as,q,null),o(s,Ks,n),D(ls,s,n),o(s,W,n),D(ps,W,null),m(W,un),D(os,W,null),m(W,fn),o(s,Ns,n),D(es,s,n),o(s,w,n),D(z,w,null),m(w,dn),D(ts,w,null),o(s,Qs,n),D(Ds,s,n),o(s,_,n),D(cs,_,null),m(_,mn),D(rs,_,null),m(_,En),D(ys,_,null),m(_,gn),o(s,Vs,n),D(is,s,n),o(s,x,n),D(J,x,null),m(x,Fn),D(Cs,x,null),o(s,Xs,n),D($s,s,n),o(s,us,n),D(fs,us,null),m(us,Bn),o(s,Ys,n),D(ds,s,n),o(s,v,n),D(K,v,null),m(v,An),D(ms,v,null),o(s,Zs,n),D(Es,s,n),o(s,gs,n),D(Fs,gs,null),m(gs,hn),o(s,sn,n),D(Bs,s,n),o(s,b,n),D(N,b,null),m(b,_n),D(As,b,null),o(s,nn,n),D(hs,s,n),o(s,_s,n),D(qs,_s,null),m(_s,qn),o(s,an,n),D(ws,s,n),o(s,I,n),D(Q,I,null),m(I,wn),D(xs,I,null),o(s,ln,n),D(vs,s,n),o(s,O,n),D(bs,O,null),m(O,xn),D(Is,O,null),m(O,vn),o(s,pn,n),D(Ts,s,n),js=!0},p(s,[n]){(!js||n&1)&&a!==(a=s[0].title+"")&&Hn(i,a);const V={};n&2&&(V.$$scope={dirty:n,ctx:s}),G.$set(V);const Rs={};n&2&&(Rs.$$scope={dirty:n,ctx:s}),j.$set(Rs);const Ws={};n&2&&(Ws.$$scope={dirty:n,ctx:s}),U.$set(Ws);const Os={};n&2&&(Os.$$scope={dirty:n,ctx:s}),L.$set(Os);const Ps={};n&2&&(Ps.$$scope={dirty:n,ctx:s}),M.$set(Ps);const X={};n&2&&(X.$$scope={dirty:n,ctx:s}),z.$set(X);const ks={};n&2&&(ks.$$scope={dirty:n,ctx:s}),J.$set(ks);const T={};n&2&&(T.$$scope={dirty:n,ctx:s}),K.$set(T);const Hs={};n&2&&(Hs.$$scope={dirty:n,ctx:s}),N.$set(Hs);const Gs={};n&2&&(Gs.$$scope={dirty:n,ctx:s}),Q.$set(Gs)},i(s){js||(c(Y.$$.fragment,s),c(G.$$.fragment,s),c(j.$$.fragment,s),c(Z.$$.fragment,s),c(U.$$.fragment,s),c(ss.$$.fragment,s),c(L.$$.fragment,s),c(ns.$$.fragment,s),c(M.$$.fragment,s),c(as.$$.fragment,s),c(ls.$$.fragment,s),c(ps.$$.fragment,s),c(os.$$.fragment,s),c(es.$$.fragment,s),c(z.$$.fragment,s),c(ts.$$.fragment,s),c(Ds.$$.fragment,s),c(cs.$$.fragment,s),c(rs.$$.fragment,s),c(ys.$$.fragment,s),c(is.$$.fragment,s),c(J.$$.fragment,s),c(Cs.$$.fragment,s),c($s.$$.fragment,s),c(fs.$$.fragment,s),c(ds.$$.fragment,s),c(K.$$.fragment,s),c(ms.$$.fragment,s),c(Es.$$.fragment,s),c(Fs.$$.fragment,s),c(Bs.$$.fragment,s),c(N.$$.fragment,s),c(As.$$.fragment,s),c(hs.$$.fragment,s),c(qs.$$.fragment,s),c(ws.$$.fragment,s),c(Q.$$.fragment,s),c(xs.$$.fragment,s),c(vs.$$.fragment,s),c(bs.$$.fragment,s),c(Is.$$.fragment,s),c(Ts.$$.fragment,s),js=!0)},o(s){r(Y.$$.fragment,s),r(G.$$.fragment,s),r(j.$$.fragment,s),r(Z.$$.fragment,s),r(U.$$.fragment,s),r(ss.$$.fragment,s),r(L.$$.fragment,s),r(ns.$$.fragment,s),r(M.$$.fragment,s),r(as.$$.fragment,s),r(ls.$$.fragment,s),r(ps.$$.fragment,s),r(os.$$.fragment,s),r(es.$$.fragment,s),r(z.$$.fragment,s),r(ts.$$.fragment,s),r(Ds.$$.fragment,s),r(cs.$$.fragment,s),r(rs.$$.fragment,s),r(ys.$$.fragment,s),r(is.$$.fragment,s),r(J.$$.fragment,s),r(Cs.$$.fragment,s),r($s.$$.fragment,s),r(fs.$$.fragment,s),r(ds.$$.fragment,s),r(K.$$.fragment,s),r(ms.$$.fragment,s),r(Es.$$.fragment,s),r(Fs.$$.fragment,s),r(Bs.$$.fragment,s),r(N.$$.fragment,s),r(As.$$.fragment,s),r(hs.$$.fragment,s),r(qs.$$.fragment,s),r(ws.$$.fragment,s),r(Q.$$.fragment,s),r(xs.$$.fragment,s),r(vs.$$.fragment,s),r(bs.$$.fragment,s),r(Is.$$.fragment,s),r(Ts.$$.fragment,s),js=!1},d(s){s&&l(p),s&&l(Ss),s&&l(k),y(Y),y(G),s&&l(Ls),s&&l(H),y(j),s&&l(Ms),y(Z,s),s&&l(S),y(U),s&&l(zs),y(ss,s),s&&l(R),y(L),s&&l(Js),y(ns,s),s&&l(q),y(M),y(as),s&&l(Ks),y(ls,s),s&&l(W),y(ps),y(os),s&&l(Ns),y(es,s),s&&l(w),y(z),y(ts),s&&l(Qs),y(Ds,s),s&&l(_),y(cs),y(rs),y(ys),s&&l(Vs),y(is,s),s&&l(x),y(J),y(Cs),s&&l(Xs),y($s,s),s&&l(us),y(fs),s&&l(Ys),y(ds,s),s&&l(v),y(K),y(ms),s&&l(Zs),y(Es,s),s&&l(gs),y(Fs),s&&l(sn),y(Bs,s),s&&l(b),y(N),y(As),s&&l(nn),y(hs,s),s&&l(_s),y(qs),s&&l(an),y(ws,s),s&&l(I),y(Q),y(xs),s&&l(ln),y(vs,s),s&&l(O),y(bs),y(Is),s&&l(pn),y(Ts,s)}}}function Qn(u,p,a){let i;return Sn(u,Rn,Ss=>a(0,i=Ss)),[i]}class la extends Tn{constructor(p){super(),Pn(this,p,Qn,Nn,kn,{})}}export{la as default};
