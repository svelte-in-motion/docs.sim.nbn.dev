import{S as Rs,i as xs,s as ks,e as I,t as f,k as C,w as o,c as h,a as S,h as m,d as a,m as d,x as r,b as N,g as p,M as y,y as i,j as As,q as c,o as D,B as $,_ as Bs}from"../../../chunks/index-fdc571c5.js";import{f as Os}from"../../../chunks/scroll-fc938a7a.js";import{C as Z}from"../../../chunks/CodeFence-bf275b3f.js";import{C as as}from"../../../chunks/CodeInline-03f5d050.js";import{L as ps}from"../../../chunks/Link-d2aa795f.js";import"../../../chunks/singletons-01f6dffe.js";import"../../../chunks/contexts-ecb88871.js";function Ns(u){let t;return{c(){t=f("#")},l(n){t=m(n,"#")},m(n,l){p(n,t,l)},d(n){n&&a(t)}}}function Ts(u){let t;return{c(){t=f("#")},l(n){t=m(n,"#")},m(n,l){p(n,t,l)},d(n){n&&a(t)}}}function Ws(u){let t;return{c(){t=f("#")},l(n){t=m(n,"#")},m(n,l){p(n,t,l)},d(n){n&&a(t)}}}function Us(u){let t;return{c(){t=f("Node.js")},l(n){t=m(n,"Node.js")},m(n,l){p(n,t,l)},d(n){n&&a(t)}}}function js(u){let t;return{c(){t=f("#")},l(n){t=m(n,"#")},m(n,l){p(n,t,l)},d(n){n&&a(t)}}}function Hs(u){let t;return{c(){t=f("Tauri")},l(n){t=m(n,"Tauri")},m(n,l){p(n,t,l)},d(n){n&&a(t)}}}function Ps(u){let t,n=u[0].title+"",l,ss,ns,Cs,rs,v,q,ds,is,T,_,R,_s,W,cs,U,x,gs,j,Es,Ds,H,g,k,bs,P,$s,L,E,Fs,M,vs,A,ws,fs,z,b,B,Is,G,ms,J,F,hs,K,Ss,O,qs,us,Q,ls;return q=new ps({props:{class:"header-anchor",href:"#imports","aria-hidden":"true",$$slots:{default:[Ns]},$$scope:{ctx:u}}}),T=new Z({props:{lang:"typescript",ext:"ts",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">IS_BROWSER</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">IS_NODE</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">IS_TAURI</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),R=new ps({props:{class:"header-anchor",href:"#is-browser","aria-hidden":"true",$$slots:{default:[Ts]},$$scope:{ctx:u}}}),W=new as({props:{code:"IS_BROWSER"}}),U=new Z({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">IS_BROWSER</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),j=new as({props:{code:"true"}}),H=new Z({props:{lang:"typescript",ext:"ts",linesCount:8,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">IS_BROWSER</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #CE9178">\`Am I running in a Browser?: </span><span style="color: #569CD6">\${</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #4FC1FF">IS_BROWSER</span><span style="color: #D4D4D4"> ? </span><span style="color: #CE9178">&quot;yes&quot;</span><span style="color: #D4D4D4"> : </span><span style="color: #CE9178">&quot;no&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">}</span><span style="color: #CE9178">\`</span></span>
<span class="line"><span style="color: #D4D4D4">);</span></span>
<span class="line"></span></code></pre>`}}),k=new ps({props:{class:"header-anchor",href:"#is-node","aria-hidden":"true",$$slots:{default:[Ws]},$$scope:{ctx:u}}}),P=new as({props:{code:"IS_NODE"}}),L=new Z({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">IS_NODE</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),M=new as({props:{code:"true"}}),A=new ps({props:{href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Us]},$$scope:{ctx:u}}}),z=new Z({props:{lang:"typescript",ext:"ts",linesCount:8,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">IS_NODE</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #CE9178">\`Am I running in Node.js?: </span><span style="color: #569CD6">\${</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #4FC1FF">IS_NODE</span><span style="color: #D4D4D4"> ? </span><span style="color: #CE9178">&quot;yes&quot;</span><span style="color: #D4D4D4"> : </span><span style="color: #CE9178">&quot;no&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">}</span><span style="color: #CE9178">\`</span></span>
<span class="line"><span style="color: #D4D4D4">);</span></span>
<span class="line"></span></code></pre>`}}),B=new ps({props:{class:"header-anchor",href:"#is-tauri","aria-hidden":"true",$$slots:{default:[js]},$$scope:{ctx:u}}}),G=new as({props:{code:"IS_TAURI"}}),J=new Z({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">IS_TAURI</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),K=new as({props:{code:"true"}}),O=new ps({props:{href:"https://tauri.studio/",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Hs]},$$scope:{ctx:u}}}),Q=new Z({props:{lang:"typescript",ext:"ts",linesCount:8,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">IS_TAURI</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/utilities&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #CE9178">\`Am I running in a Tauri build of Svelte-In-Motion?: </span><span style="color: #569CD6">\${</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #4FC1FF">IS_TAURI</span><span style="color: #D4D4D4"> ? </span><span style="color: #CE9178">&quot;yes&quot;</span><span style="color: #D4D4D4"> : </span><span style="color: #CE9178">&quot;no&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #569CD6">}</span><span style="color: #CE9178">\`</span></span>
<span class="line"><span style="color: #D4D4D4">);</span></span>
<span class="line"></span></code></pre>`}}),{c(){t=I("h1"),l=f(n),ss=C(),ns=I("p"),Cs=f("Environment details such as what runtime is the current code being ran in, is provided."),rs=C(),v=I("h2"),o(q.$$.fragment),ds=f(" Imports"),is=C(),o(T.$$.fragment),_=I("h2"),o(R.$$.fragment),_s=C(),o(W.$$.fragment),cs=C(),o(U.$$.fragment),x=I("p"),gs=f("Returns "),o(j.$$.fragment),Es=f(" if the code is currently running in a Web Browser compatible environment."),Ds=C(),o(H.$$.fragment),g=I("h2"),o(k.$$.fragment),bs=C(),o(P.$$.fragment),$s=C(),o(L.$$.fragment),E=I("p"),Fs=f("Returns "),o(M.$$.fragment),vs=f(" if the code is currently running in a "),o(A.$$.fragment),ws=f(" compatible environment."),fs=C(),o(z.$$.fragment),b=I("h2"),o(B.$$.fragment),Is=C(),o(G.$$.fragment),ms=C(),o(J.$$.fragment),F=I("p"),hs=f("Returns "),o(K.$$.fragment),Ss=f(" if the code is currently running in a "),o(O.$$.fragment),qs=f(" compatible environment."),us=C(),o(Q.$$.fragment),this.h()},l(s){t=h(s,"H1",{});var e=S(t);l=m(e,n),e.forEach(a),ss=d(s),ns=h(s,"P",{});var os=S(ns);Cs=m(os,"Environment details such as what runtime is the current code being ran in, is provided."),os.forEach(a),rs=d(s),v=h(s,"H2",{id:!0,tabindex:!0});var es=S(v);r(q.$$.fragment,es),ds=m(es," Imports"),es.forEach(a),is=d(s),r(T.$$.fragment,s),_=h(s,"H2",{id:!0,tabindex:!0});var V=S(_);r(R.$$.fragment,V),_s=d(V),r(W.$$.fragment,V),V.forEach(a),cs=d(s),r(U.$$.fragment,s),x=h(s,"P",{});var X=S(x);gs=m(X,"Returns "),r(j.$$.fragment,X),Es=m(X," if the code is currently running in a Web Browser compatible environment."),X.forEach(a),Ds=d(s),r(H.$$.fragment,s),g=h(s,"H2",{id:!0,tabindex:!0});var Y=S(g);r(k.$$.fragment,Y),bs=d(Y),r(P.$$.fragment,Y),Y.forEach(a),$s=d(s),r(L.$$.fragment,s),E=h(s,"P",{});var w=S(E);Fs=m(w,"Returns "),r(M.$$.fragment,w),vs=m(w," if the code is currently running in a "),r(A.$$.fragment,w),ws=m(w," compatible environment."),w.forEach(a),fs=d(s),r(z.$$.fragment,s),b=h(s,"H2",{id:!0,tabindex:!0});var ys=S(b);r(B.$$.fragment,ys),Is=d(ys),r(G.$$.fragment,ys),ys.forEach(a),ms=d(s),r(J.$$.fragment,s),F=h(s,"P",{});var ts=S(F);hs=m(ts,"Returns "),r(K.$$.fragment,ts),Ss=m(ts," if the code is currently running in a "),r(O.$$.fragment,ts),qs=m(ts," compatible environment."),ts.forEach(a),us=d(s),r(Q.$$.fragment,s),this.h()},h(){N(v,"id","imports"),N(v,"tabindex","-1"),N(_,"id","is-browser"),N(_,"tabindex","-1"),N(g,"id","is-node"),N(g,"tabindex","-1"),N(b,"id","is-tauri"),N(b,"tabindex","-1")},m(s,e){p(s,t,e),y(t,l),p(s,ss,e),p(s,ns,e),y(ns,Cs),p(s,rs,e),p(s,v,e),i(q,v,null),y(v,ds),p(s,is,e),i(T,s,e),p(s,_,e),i(R,_,null),y(_,_s),i(W,_,null),p(s,cs,e),i(U,s,e),p(s,x,e),y(x,gs),i(j,x,null),y(x,Es),p(s,Ds,e),i(H,s,e),p(s,g,e),i(k,g,null),y(g,bs),i(P,g,null),p(s,$s,e),i(L,s,e),p(s,E,e),y(E,Fs),i(M,E,null),y(E,vs),i(A,E,null),y(E,ws),p(s,fs,e),i(z,s,e),p(s,b,e),i(B,b,null),y(b,Is),i(G,b,null),p(s,ms,e),i(J,s,e),p(s,F,e),y(F,hs),i(K,F,null),y(F,Ss),i(O,F,null),y(F,qs),p(s,us,e),i(Q,s,e),ls=!0},p(s,[e]){(!ls||e&1)&&n!==(n=s[0].title+"")&&As(l,n);const os={};e&2&&(os.$$scope={dirty:e,ctx:s}),q.$set(os);const es={};e&2&&(es.$$scope={dirty:e,ctx:s}),R.$set(es);const V={};e&2&&(V.$$scope={dirty:e,ctx:s}),k.$set(V);const X={};e&2&&(X.$$scope={dirty:e,ctx:s}),A.$set(X);const Y={};e&2&&(Y.$$scope={dirty:e,ctx:s}),B.$set(Y);const w={};e&2&&(w.$$scope={dirty:e,ctx:s}),O.$set(w)},i(s){ls||(c(q.$$.fragment,s),c(T.$$.fragment,s),c(R.$$.fragment,s),c(W.$$.fragment,s),c(U.$$.fragment,s),c(j.$$.fragment,s),c(H.$$.fragment,s),c(k.$$.fragment,s),c(P.$$.fragment,s),c(L.$$.fragment,s),c(M.$$.fragment,s),c(A.$$.fragment,s),c(z.$$.fragment,s),c(B.$$.fragment,s),c(G.$$.fragment,s),c(J.$$.fragment,s),c(K.$$.fragment,s),c(O.$$.fragment,s),c(Q.$$.fragment,s),ls=!0)},o(s){D(q.$$.fragment,s),D(T.$$.fragment,s),D(R.$$.fragment,s),D(W.$$.fragment,s),D(U.$$.fragment,s),D(j.$$.fragment,s),D(H.$$.fragment,s),D(k.$$.fragment,s),D(P.$$.fragment,s),D(L.$$.fragment,s),D(M.$$.fragment,s),D(A.$$.fragment,s),D(z.$$.fragment,s),D(B.$$.fragment,s),D(G.$$.fragment,s),D(J.$$.fragment,s),D(K.$$.fragment,s),D(O.$$.fragment,s),D(Q.$$.fragment,s),ls=!1},d(s){s&&a(t),s&&a(ss),s&&a(ns),s&&a(rs),s&&a(v),$(q),s&&a(is),$(T,s),s&&a(_),$(R),$(W),s&&a(cs),$(U,s),s&&a(x),$(j),s&&a(Ds),$(H,s),s&&a(g),$(k),$(P),s&&a($s),$(L,s),s&&a(E),$(M),$(A),s&&a(fs),$(z,s),s&&a(b),$(B),$(G),s&&a(ms),$(J,s),s&&a(F),$(K),$(O),s&&a(us),$(Q,s)}}}function Ls(u,t,n){let l;return Bs(u,Os,ss=>n(0,l=ss)),[l]}class Xs extends Rs{constructor(t){super(),xs(this,t,Ls,Ps,ks,{})}}export{Xs as default};
