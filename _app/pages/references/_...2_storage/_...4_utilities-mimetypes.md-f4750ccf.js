import{S as Ds,i as is,s as cs,e as I,t as E,k as u,w as o,c as P,a as L,h as A,d as a,m as _,x as r,b as K,g as p,M as S,y as D,j as ms,q as i,o as c,B as m,_ as $s}from"../../../chunks/index-fdc571c5.js";import{f as fs}from"../../../chunks/scroll-fc938a7a.js";import{C as O}from"../../../chunks/CodeFence-bf275b3f.js";import{C as ps}from"../../../chunks/CodeInline-03f5d050.js";import{L as ls}from"../../../chunks/Link-d2aa795f.js";import"../../../chunks/singletons-01f6dffe.js";import"../../../chunks/contexts-ecb88871.js";function ys($){let t;return{c(){t=E("#")},l(n){t=A(n,"#")},m(n,l){p(n,t,l)},d(n){n&&a(t)}}}function Cs($){let t;return{c(){t=E("#")},l(n){t=A(n,"#")},m(n,l){p(n,t,l)},d(n){n&&a(t)}}}function us($){let t;return{c(){t=E("#")},l(n){t=A(n,"#")},m(n,l){p(n,t,l)},d(n){n&&a(t)}}}function _s($){let t,n=$[0].title+"",l,M,v,w,Z,Q,C,g,ss,R,q,f,d,es,h,T,b,U,ns,V,F,y,x,ts,k,W,B,z,as,X,j,N;return w=new ps({props:{code:"get_mimetype"}}),g=new ls({props:{class:"header-anchor",href:"#imports","aria-hidden":"true",$$slots:{default:[ys]},$$scope:{ctx:$}}}),q=new O({props:{lang:"typescript",ext:"ts",linesCount:5,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">get_mimetype</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">is_plaintext</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/storage&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),d=new ls({props:{class:"header-anchor",href:"#get-mimetype","aria-hidden":"true",$$slots:{default:[Cs]},$$scope:{ctx:$}}}),h=new ps({props:{code:"get_mimetype"}}),b=new O({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">get_mimetype</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">path</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),F=new O({props:{lang:"typescript",ext:"ts",linesCount:4,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">get_mimetype</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/storage&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #DCDCAA">get_mimetype</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;hello-world.js&quot;</span><span style="color: #D4D4D4">)); </span><span style="color: #6A9955">// \`text/javascript\`</span></span>
<span class="line"></span></code></pre>`}}),x=new ls({props:{class:"header-anchor",href:"#is-plaintext","aria-hidden":"true",$$slots:{default:[us]},$$scope:{ctx:$}}}),k=new ps({props:{code:"is_plaintext"}}),B=new O({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">is_plaintext</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">path</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),j=new O({props:{lang:"typescript",ext:"ts",linesCount:5,code:'<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">is_plaintext</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/storage&quot;</span><span style="color: #D4D4D4">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #DCDCAA">is_plaintext</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;hello-world.js&quot;</span><span style="color: #D4D4D4">)); </span><span style="color: #6A9955">// `true`</span></span>\n<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #DCDCAA">is_plaintext</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;my-animation.webm&quot;</span><span style="color: #D4D4D4">)); </span><span style="color: #6A9955">// `false`</span></span>\n<span class="line"></span></code></pre>'}}),{c(){t=I("h1"),l=E(n),M=u(),v=I("p"),o(w.$$.fragment),Z=E(" provides mapping extensions to a small list of mimetypes."),Q=u(),C=I("h2"),o(g.$$.fragment),ss=E(" Imports"),R=u(),o(q.$$.fragment),f=I("h2"),o(d.$$.fragment),es=u(),o(h.$$.fragment),T=u(),o(b.$$.fragment),U=I("p"),ns=E("..."),V=u(),o(F.$$.fragment),y=I("h2"),o(x.$$.fragment),ts=u(),o(k.$$.fragment),W=u(),o(B.$$.fragment),z=I("p"),as=E("..."),X=u(),o(j.$$.fragment),this.h()},l(s){t=P(s,"H1",{});var e=L(t);l=A(e,n),e.forEach(a),M=_(s),v=P(s,"P",{});var G=L(v);r(w.$$.fragment,G),Z=A(G," provides mapping extensions to a small list of mimetypes."),G.forEach(a),Q=_(s),C=P(s,"H2",{id:!0,tabindex:!0});var J=L(C);r(g.$$.fragment,J),ss=A(J," Imports"),J.forEach(a),R=_(s),r(q.$$.fragment,s),f=P(s,"H2",{id:!0,tabindex:!0});var H=L(f);r(d.$$.fragment,H),es=_(H),r(h.$$.fragment,H),H.forEach(a),T=_(s),r(b.$$.fragment,s),U=P(s,"P",{});var os=L(U);ns=A(os,"..."),os.forEach(a),V=_(s),r(F.$$.fragment,s),y=P(s,"H2",{id:!0,tabindex:!0});var Y=L(y);r(x.$$.fragment,Y),ts=_(Y),r(k.$$.fragment,Y),Y.forEach(a),W=_(s),r(B.$$.fragment,s),z=P(s,"P",{});var rs=L(z);as=A(rs,"..."),rs.forEach(a),X=_(s),r(j.$$.fragment,s),this.h()},h(){K(C,"id","imports"),K(C,"tabindex","-1"),K(f,"id","get-mimetype"),K(f,"tabindex","-1"),K(y,"id","is-plaintext"),K(y,"tabindex","-1")},m(s,e){p(s,t,e),S(t,l),p(s,M,e),p(s,v,e),D(w,v,null),S(v,Z),p(s,Q,e),p(s,C,e),D(g,C,null),S(C,ss),p(s,R,e),D(q,s,e),p(s,f,e),D(d,f,null),S(f,es),D(h,f,null),p(s,T,e),D(b,s,e),p(s,U,e),S(U,ns),p(s,V,e),D(F,s,e),p(s,y,e),D(x,y,null),S(y,ts),D(k,y,null),p(s,W,e),D(B,s,e),p(s,z,e),S(z,as),p(s,X,e),D(j,s,e),N=!0},p(s,[e]){(!N||e&1)&&n!==(n=s[0].title+"")&&ms(l,n);const G={};e&2&&(G.$$scope={dirty:e,ctx:s}),g.$set(G);const J={};e&2&&(J.$$scope={dirty:e,ctx:s}),d.$set(J);const H={};e&2&&(H.$$scope={dirty:e,ctx:s}),x.$set(H)},i(s){N||(i(w.$$.fragment,s),i(g.$$.fragment,s),i(q.$$.fragment,s),i(d.$$.fragment,s),i(h.$$.fragment,s),i(b.$$.fragment,s),i(F.$$.fragment,s),i(x.$$.fragment,s),i(k.$$.fragment,s),i(B.$$.fragment,s),i(j.$$.fragment,s),N=!0)},o(s){c(w.$$.fragment,s),c(g.$$.fragment,s),c(q.$$.fragment,s),c(d.$$.fragment,s),c(h.$$.fragment,s),c(b.$$.fragment,s),c(F.$$.fragment,s),c(x.$$.fragment,s),c(k.$$.fragment,s),c(B.$$.fragment,s),c(j.$$.fragment,s),N=!1},d(s){s&&a(t),s&&a(M),s&&a(v),m(w),s&&a(Q),s&&a(C),m(g),s&&a(R),m(q,s),s&&a(f),m(d),m(h),s&&a(T),m(b,s),s&&a(U),s&&a(V),m(F,s),s&&a(y),m(x),m(k),s&&a(W),m(B,s),s&&a(z),s&&a(X),m(j,s)}}}function gs($,t,n){let l;return $s($,fs,M=>n(0,l=M)),[l]}class hs extends Ds{constructor(t){super(),is(this,t,gs,_s,cs,{})}}export{hs as default};
