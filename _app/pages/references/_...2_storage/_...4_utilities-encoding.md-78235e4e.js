import{S as ye,i as de,s as Ce,e as j,t as y,k as b,w as l,c as M,a as G,h as d,d as o,m as w,x as r,b as O,g as p,M as x,y as c,j as _e,q as $,o as D,B as f,_ as ge,E as ue}from"../../../chunks/index-fdc571c5.js";import{f as xe}from"../../../chunks/scroll-fc938a7a.js";import{C as X}from"../../../chunks/CodeFence-bf275b3f.js";import{C as Q}from"../../../chunks/CodeInline-03f5d050.js";import{L as Y}from"../../../chunks/Link-d2aa795f.js";import"../../../chunks/singletons-01f6dffe.js";import"../../../chunks/contexts-ecb88871.js";function Ee(i){let s,n;return s=new Q({props:{code:"TextDecoder"}}),{c(){l(s.$$.fragment)},l(a){r(s.$$.fragment,a)},m(a,C){c(s,a,C),n=!0},p:ue,i(a){n||($(s.$$.fragment,a),n=!0)},o(a){D(s.$$.fragment,a),n=!1},d(a){f(s,a)}}}function be(i){let s,n;return s=new Q({props:{code:"TextEncoder"}}),{c(){l(s.$$.fragment)},l(a){r(s.$$.fragment,a)},m(a,C){c(s,a,C),n=!0},p:ue,i(a){n||($(s.$$.fragment,a),n=!0)},o(a){D(s.$$.fragment,a),n=!1},d(a){f(s,a)}}}function we(i){let s;return{c(){s=y("#")},l(n){s=d(n,"#")},m(n,a){p(n,s,a)},d(n){n&&o(s)}}}function he(i){let s;return{c(){s=y("#")},l(n){s=d(n,"#")},m(n,a){p(n,s,a)},d(n){n&&o(s)}}}function ve(i){let s;return{c(){s=y("#")},l(n){s=d(n,"#")},m(n,a){p(n,s,a)},d(n){n&&o(s)}}}function Ae(i){let s,n=i[0].title+"",a,C,m,q,oe,B,pe,h,le,v,re,Z,E,A,ce,ee,I,_,F,$e,P,se,U,J,De,ne,H,g,k,fe,S,te,T,K,ie,ae,z,R;return q=new Q({props:{code:"decode_text"}}),B=new Q({props:{code:"encode_text"}}),h=new Y({props:{href:"https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Ee]},$$scope:{ctx:i}}}),v=new Y({props:{href:"https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[be]},$$scope:{ctx:i}}}),A=new Y({props:{class:"header-anchor",href:"#imports","aria-hidden":"true",$$slots:{default:[we]},$$scope:{ctx:i}}}),I=new X({props:{lang:"typescript",ext:"ts",linesCount:5,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">decode_text</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">encode_text</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/storage&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),F=new Y({props:{class:"header-anchor",href:"#decode-text","aria-hidden":"true",$$slots:{default:[he]},$$scope:{ctx:i}}}),P=new Q({props:{code:"decode_text"}}),U=new X({props:{lang:"typescript",ext:"ts",linesCount:4,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">decode_text</span><span style="color: #D4D4D4">: (</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">buffer</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">Uint8Array</span></span>
<span class="line"><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),H=new X({props:{lang:"typescript",ext:"ts",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">decode_text</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/storage&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">buffer</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">get_uint8array_from_somewhere</span><span style="color: #D4D4D4">(...);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #DCDCAA">decode_text</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">buffer</span><span style="color: #D4D4D4">));</span></span>
<span class="line"></span></code></pre>`}}),k=new Y({props:{class:"header-anchor",href:"#encode-text","aria-hidden":"true",$$slots:{default:[ve]},$$scope:{ctx:i}}}),S=new Q({props:{code:"encode_text"}}),T=new X({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">encode_text</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Uint8Array</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),z=new X({props:{lang:"typescript",ext:"ts",linesCount:4,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">encode_text</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/storage&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">buffer</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">encode_text</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;hello world!&quot;</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span></code></pre>`}}),{c(){s=j("h1"),a=y(n),C=b(),m=j("p"),l(q.$$.fragment),oe=y(" / "),l(B.$$.fragment),pe=y(" provides text binary encoding using "),l(h.$$.fragment),le=y(" / "),l(v.$$.fragment),re=y("."),Z=b(),E=j("h2"),l(A.$$.fragment),ce=y(" Imports"),ee=b(),l(I.$$.fragment),_=j("h2"),l(F.$$.fragment),$e=b(),l(P.$$.fragment),se=b(),l(U.$$.fragment),J=j("p"),De=y("..."),ne=b(),l(H.$$.fragment),g=j("h2"),l(k.$$.fragment),fe=b(),l(S.$$.fragment),te=b(),l(T.$$.fragment),K=j("p"),ie=y("..."),ae=b(),l(z.$$.fragment),this.h()},l(e){s=M(e,"H1",{});var t=G(s);a=d(t,n),t.forEach(o),C=w(e),m=M(e,"P",{});var u=G(m);r(q.$$.fragment,u),oe=d(u," / "),r(B.$$.fragment,u),pe=d(u," provides text binary encoding using "),r(h.$$.fragment,u),le=d(u," / "),r(v.$$.fragment,u),re=d(u,"."),u.forEach(o),Z=w(e),E=M(e,"H2",{id:!0,tabindex:!0});var N=G(E);r(A.$$.fragment,N),ce=d(N," Imports"),N.forEach(o),ee=w(e),r(I.$$.fragment,e),_=M(e,"H2",{id:!0,tabindex:!0});var L=G(_);r(F.$$.fragment,L),$e=w(L),r(P.$$.fragment,L),L.forEach(o),se=w(e),r(U.$$.fragment,e),J=M(e,"P",{});var V=G(J);De=d(V,"..."),V.forEach(o),ne=w(e),r(H.$$.fragment,e),g=M(e,"H2",{id:!0,tabindex:!0});var W=G(g);r(k.$$.fragment,W),fe=w(W),r(S.$$.fragment,W),W.forEach(o),te=w(e),r(T.$$.fragment,e),K=M(e,"P",{});var me=G(K);ie=d(me,"..."),me.forEach(o),ae=w(e),r(z.$$.fragment,e),this.h()},h(){O(E,"id","imports"),O(E,"tabindex","-1"),O(_,"id","decode-text"),O(_,"tabindex","-1"),O(g,"id","encode-text"),O(g,"tabindex","-1")},m(e,t){p(e,s,t),x(s,a),p(e,C,t),p(e,m,t),c(q,m,null),x(m,oe),c(B,m,null),x(m,pe),c(h,m,null),x(m,le),c(v,m,null),x(m,re),p(e,Z,t),p(e,E,t),c(A,E,null),x(E,ce),p(e,ee,t),c(I,e,t),p(e,_,t),c(F,_,null),x(_,$e),c(P,_,null),p(e,se,t),c(U,e,t),p(e,J,t),x(J,De),p(e,ne,t),c(H,e,t),p(e,g,t),c(k,g,null),x(g,fe),c(S,g,null),p(e,te,t),c(T,e,t),p(e,K,t),x(K,ie),p(e,ae,t),c(z,e,t),R=!0},p(e,[t]){(!R||t&1)&&n!==(n=e[0].title+"")&&_e(a,n);const u={};t&2&&(u.$$scope={dirty:t,ctx:e}),h.$set(u);const N={};t&2&&(N.$$scope={dirty:t,ctx:e}),v.$set(N);const L={};t&2&&(L.$$scope={dirty:t,ctx:e}),A.$set(L);const V={};t&2&&(V.$$scope={dirty:t,ctx:e}),F.$set(V);const W={};t&2&&(W.$$scope={dirty:t,ctx:e}),k.$set(W)},i(e){R||($(q.$$.fragment,e),$(B.$$.fragment,e),$(h.$$.fragment,e),$(v.$$.fragment,e),$(A.$$.fragment,e),$(I.$$.fragment,e),$(F.$$.fragment,e),$(P.$$.fragment,e),$(U.$$.fragment,e),$(H.$$.fragment,e),$(k.$$.fragment,e),$(S.$$.fragment,e),$(T.$$.fragment,e),$(z.$$.fragment,e),R=!0)},o(e){D(q.$$.fragment,e),D(B.$$.fragment,e),D(h.$$.fragment,e),D(v.$$.fragment,e),D(A.$$.fragment,e),D(I.$$.fragment,e),D(F.$$.fragment,e),D(P.$$.fragment,e),D(U.$$.fragment,e),D(H.$$.fragment,e),D(k.$$.fragment,e),D(S.$$.fragment,e),D(T.$$.fragment,e),D(z.$$.fragment,e),R=!1},d(e){e&&o(s),e&&o(C),e&&o(m),f(q),f(B),f(h),f(v),e&&o(Z),e&&o(E),f(A),e&&o(ee),f(I,e),e&&o(_),f(F),f(P),e&&o(se),f(U,e),e&&o(J),e&&o(ne),f(H,e),e&&o(g),f(k),f(S),e&&o(te),f(T,e),e&&o(K),e&&o(ae),f(z,e)}}}function Fe(i,s,n){let a;return ge(i,xe,C=>n(0,a=C)),[a]}class Se extends ye{constructor(s){super(),de(this,s,Fe,Ae,Ce,{})}}export{Se as default};
