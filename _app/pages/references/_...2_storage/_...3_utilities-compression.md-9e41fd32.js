import{S as $s,i as ms,s as ys,e as L,t as y,k as E,w as l,c as S,a as M,h as C,d as p,m as F,x as r,b as O,g as t,M as x,y as c,j as Cs,q as D,o as i,B as f,_ as us}from"../../../chunks/index-fdc571c5.js";import{f as ds}from"../../../chunks/scroll-fc938a7a.js";import{C as T}from"../../../chunks/CodeFence-bf275b3f.js";import{C as es}from"../../../chunks/CodeInline-03f5d050.js";import{L as as}from"../../../chunks/Link-d2aa795f.js";import"../../../chunks/singletons-01f6dffe.js";import"../../../chunks/contexts-ecb88871.js";function _s($){let a;return{c(){a=y("lzutf8.js")},l(e){a=C(e,"lzutf8.js")},m(e,o){t(e,a,o)},d(e){e&&p(a)}}}function gs($){let a;return{c(){a=y("#")},l(e){a=C(e,"#")},m(e,o){t(e,a,o)},d(e){e&&p(a)}}}function Es($){let a;return{c(){a=y("#")},l(e){a=C(e,"#")},m(e,o){t(e,a,o)},d(e){e&&p(a)}}}function Fs($){let a;return{c(){a=y("#")},l(e){a=C(e,"#")},m(e,o){t(e,a,o)},d(e){e&&p(a)}}}function xs($){let a,e=$[0].title+"",o,G,m,v,ps,k,ts,A,os,V,g,b,ls,W,q,u,w,rs,B,X,U,J,cs,Y,j,d,h,Ds,H,Z,z,K,is,ss,I,Q;return v=new es({props:{code:"compress"}}),k=new es({props:{code:"decompress"}}),A=new as({props:{href:"https://github.com/rotemdan/lzutf8.js",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[_s]},$$scope:{ctx:$}}}),b=new as({props:{class:"header-anchor",href:"#imports","aria-hidden":"true",$$slots:{default:[gs]},$$scope:{ctx:$}}}),q=new T({props:{lang:"typescript",ext:"ts",linesCount:5,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">compress</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">decompress</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/storage&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),w=new as({props:{class:"header-anchor",href:"#compress","aria-hidden":"true",$$slots:{default:[Es]},$$scope:{ctx:$}}}),B=new es({props:{code:"compress"}}),U=new T({props:{lang:"typescript",ext:"ts",linesCount:4,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">compress</span><span style="color: #D4D4D4">: (</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">buffer</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">Uint8Array</span></span>
<span class="line"><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Uint8Array</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),j=new T({props:{lang:"typescript",ext:"ts",linesCount:9,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">compress</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">encode_text</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/storage&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">encoded_text</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">encode_text</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;hello world!&quot;</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">compressed_buffer</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">compress</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">encode_text</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span></code></pre>`}}),h=new as({props:{class:"header-anchor",href:"#decompress","aria-hidden":"true",$$slots:{default:[Fs]},$$scope:{ctx:$}}}),H=new es({props:{code:"decompress"}}),z=new T({props:{lang:"typescript",ext:"ts",linesCount:4,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">decompress</span><span style="color: #D4D4D4">: (</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">buffer</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">Uint8Array</span></span>
<span class="line"><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Uint8Array</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),I=new T({props:{lang:"typescript",ext:"ts",linesCount:11,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">decompress</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">decode_text</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/storage&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">compressed_buffer</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">get_uint8array_from_somewhere</span><span style="color: #D4D4D4">(...);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">encoded_text</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">decompress</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">compressed_buffer</span><span style="color: #D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #9CDCFE">console</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">log</span><span style="color: #D4D4D4">(</span><span style="color: #DCDCAA">decode_text</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">encoded_text</span><span style="color: #D4D4D4">));</span></span>
<span class="line"></span></code></pre>`}}),{c(){a=L("h1"),o=y(e),G=E(),m=L("p"),l(v.$$.fragment),ps=y(" / "),l(k.$$.fragment),ts=y(" provides fast compression based on "),l(A.$$.fragment),os=y("."),V=E(),g=L("h2"),l(b.$$.fragment),ls=y(" Imports"),W=E(),l(q.$$.fragment),u=L("h2"),l(w.$$.fragment),rs=E(),l(B.$$.fragment),X=E(),l(U.$$.fragment),J=L("p"),cs=y("..."),Y=E(),l(j.$$.fragment),d=L("h2"),l(h.$$.fragment),Ds=E(),l(H.$$.fragment),Z=E(),l(z.$$.fragment),K=L("p"),is=y("..."),ss=E(),l(I.$$.fragment),this.h()},l(s){a=S(s,"H1",{});var n=M(a);o=C(n,e),n.forEach(p),G=F(s),m=S(s,"P",{});var _=M(m);r(v.$$.fragment,_),ps=C(_," / "),r(k.$$.fragment,_),ts=C(_," provides fast compression based on "),r(A.$$.fragment,_),os=C(_,"."),_.forEach(p),V=F(s),g=S(s,"H2",{id:!0,tabindex:!0});var N=M(g);r(b.$$.fragment,N),ls=C(N," Imports"),N.forEach(p),W=F(s),r(q.$$.fragment,s),u=S(s,"H2",{id:!0,tabindex:!0});var P=M(u);r(w.$$.fragment,P),rs=F(P),r(B.$$.fragment,P),P.forEach(p),X=F(s),r(U.$$.fragment,s),J=S(s,"P",{});var R=M(J);cs=C(R,"..."),R.forEach(p),Y=F(s),r(j.$$.fragment,s),d=S(s,"H2",{id:!0,tabindex:!0});var ns=M(d);r(h.$$.fragment,ns),Ds=F(ns),r(H.$$.fragment,ns),ns.forEach(p),Z=F(s),r(z.$$.fragment,s),K=S(s,"P",{});var fs=M(K);is=C(fs,"..."),fs.forEach(p),ss=F(s),r(I.$$.fragment,s),this.h()},h(){O(g,"id","imports"),O(g,"tabindex","-1"),O(u,"id","compress"),O(u,"tabindex","-1"),O(d,"id","decompress"),O(d,"tabindex","-1")},m(s,n){t(s,a,n),x(a,o),t(s,G,n),t(s,m,n),c(v,m,null),x(m,ps),c(k,m,null),x(m,ts),c(A,m,null),x(m,os),t(s,V,n),t(s,g,n),c(b,g,null),x(g,ls),t(s,W,n),c(q,s,n),t(s,u,n),c(w,u,null),x(u,rs),c(B,u,null),t(s,X,n),c(U,s,n),t(s,J,n),x(J,cs),t(s,Y,n),c(j,s,n),t(s,d,n),c(h,d,null),x(d,Ds),c(H,d,null),t(s,Z,n),c(z,s,n),t(s,K,n),x(K,is),t(s,ss,n),c(I,s,n),Q=!0},p(s,[n]){(!Q||n&1)&&e!==(e=s[0].title+"")&&Cs(o,e);const _={};n&2&&(_.$$scope={dirty:n,ctx:s}),A.$set(_);const N={};n&2&&(N.$$scope={dirty:n,ctx:s}),b.$set(N);const P={};n&2&&(P.$$scope={dirty:n,ctx:s}),w.$set(P);const R={};n&2&&(R.$$scope={dirty:n,ctx:s}),h.$set(R)},i(s){Q||(D(v.$$.fragment,s),D(k.$$.fragment,s),D(A.$$.fragment,s),D(b.$$.fragment,s),D(q.$$.fragment,s),D(w.$$.fragment,s),D(B.$$.fragment,s),D(U.$$.fragment,s),D(j.$$.fragment,s),D(h.$$.fragment,s),D(H.$$.fragment,s),D(z.$$.fragment,s),D(I.$$.fragment,s),Q=!0)},o(s){i(v.$$.fragment,s),i(k.$$.fragment,s),i(A.$$.fragment,s),i(b.$$.fragment,s),i(q.$$.fragment,s),i(w.$$.fragment,s),i(B.$$.fragment,s),i(U.$$.fragment,s),i(j.$$.fragment,s),i(h.$$.fragment,s),i(H.$$.fragment,s),i(z.$$.fragment,s),i(I.$$.fragment,s),Q=!1},d(s){s&&p(a),s&&p(G),s&&p(m),f(v),f(k),f(A),s&&p(V),s&&p(g),f(b),s&&p(W),f(q,s),s&&p(u),f(w),f(B),s&&p(X),f(U,s),s&&p(J),s&&p(Y),f(j,s),s&&p(d),f(h),f(H),s&&p(Z),f(z,s),s&&p(K),s&&p(ss),f(I,s)}}}function As($,a,e){let o;return us($,ds,G=>e(0,o=G)),[o]}class Us extends $s{constructor(a){super(),ms(this,a,As,xs,ys,{})}}export{Us as default};
