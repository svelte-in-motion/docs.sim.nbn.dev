import{S as R,i as T,s as V,e as L,t as F,k as P,w as _,c as S,a as j,h as B,d as t,m as M,x as g,b as U,g as o,M as I,y as h,j as W,q as E,o as b,B as v,_ as X,E as Y}from"../../../chunks/index-fdc571c5.js";import{f as Z}from"../../../chunks/scroll-fc938a7a.js";import{C as O}from"../../../chunks/CodeFence-bf275b3f.js";import{C as Q}from"../../../chunks/CodeInline-03f5d050.js";import{L as N}from"../../../chunks/Link-d2aa795f.js";import"../../../chunks/singletons-01f6dffe.js";import"../../../chunks/contexts-ecb88871.js";function ss(p){let n,e;return n=new Q({props:{code:"IDriver"}}),{c(){_(n.$$.fragment)},l(a){g(n.$$.fragment,a)},m(a,D){h(n,a,D),e=!0},p:Y,i(a){e||(E(n.$$.fragment,a),e=!0)},o(a){b(n.$$.fragment,a),e=!1},d(a){v(n,a)}}}function ns(p){let n;return{c(){n=F("#")},l(e){n=B(e,"#")},m(e,a){o(e,n,a)},d(e){e&&t(n)}}}function es(p){let n;return{c(){n=F("#")},l(e){n=B(e,"#")},m(e,a){o(e,n,a)},d(e){e&&t(n)}}}function as(p){let n,e=p[0].title+"",a,D,r,u,z,f,G,q,i,$,J,H,d,c,m,K,A,C,x;return u=new Q({props:{code:"bundle"}}),f=new N({props:{href:"/references/storage/drivers-idriver",$$slots:{default:[ss]},$$scope:{ctx:p}}}),$=new N({props:{class:"header-anchor",href:"#imports","aria-hidden":"true",$$slots:{default:[ns]},$$scope:{ctx:p}}}),d=new O({props:{lang:"typescript",ext:"ts",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> {</span><span style="color: #9CDCFE">bundle</span><span style="color: #D4D4D4">} </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;@svelte-in-motion/bundling&quot;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span></code></pre>`}}),m=new N({props:{class:"header-anchor",href:"#definitions","aria-hidden":"true",$$slots:{default:[es]},$$scope:{ctx:p}}}),C=new O({props:{lang:"typescript",ext:"ts",linesCount:21,code:`<pre><code><span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">bundle</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">: {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">file</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">storage</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">IDriver</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">worker</span><span style="color: #D4D4D4">?: </span><span style="color: #4EC9B0">boolean</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">}) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;</span></span>
<span class="line"><span style="color: #D4D4D4">    | {</span></span>
<span class="line"><span style="color: #D4D4D4">          </span><span style="color: #9CDCFE">errors</span><span style="color: #D4D4D4">: {</span></span>
<span class="line"><span style="color: #D4D4D4">              </span><span style="color: #9CDCFE">message</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">              </span><span style="color: #9CDCFE">name</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">          }[];</span></span>
<span class="line"><span style="color: #D4D4D4">      }</span></span>
<span class="line"><span style="color: #D4D4D4">    | {</span></span>
<span class="line"><span style="color: #D4D4D4">          </span><span style="color: #9CDCFE">dependencies</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">[];</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">          </span><span style="color: #9CDCFE">script</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">      }</span></span>
<span class="line"><span style="color: #D4D4D4">&gt;;</span></span>
<span class="line"></span></code></pre>`}}),{c(){n=L("h1"),a=F(e),D=P(),r=L("p"),_(u.$$.fragment),z=F(" finds the specified file in the provided "),_(f.$$.fragment),G=F(" and searches for dependencies, returning single-file script that's evaluable."),q=P(),i=L("h2"),_($.$$.fragment),J=F(" Imports"),H=P(),_(d.$$.fragment),c=L("h2"),_(m.$$.fragment),K=F(" Definitions"),A=P(),_(C.$$.fragment),this.h()},l(s){n=S(s,"H1",{});var l=j(n);a=B(l,e),l.forEach(t),D=M(s),r=S(s,"P",{});var y=j(r);g(u.$$.fragment,y),z=B(y," finds the specified file in the provided "),g(f.$$.fragment,y),G=B(y," and searches for dependencies, returning single-file script that's evaluable."),y.forEach(t),q=M(s),i=S(s,"H2",{id:!0,tabindex:!0});var k=j(i);g($.$$.fragment,k),J=B(k," Imports"),k.forEach(t),H=M(s),g(d.$$.fragment,s),c=S(s,"H2",{id:!0,tabindex:!0});var w=j(c);g(m.$$.fragment,w),K=B(w," Definitions"),w.forEach(t),A=M(s),g(C.$$.fragment,s),this.h()},h(){U(i,"id","imports"),U(i,"tabindex","-1"),U(c,"id","definitions"),U(c,"tabindex","-1")},m(s,l){o(s,n,l),I(n,a),o(s,D,l),o(s,r,l),h(u,r,null),I(r,z),h(f,r,null),I(r,G),o(s,q,l),o(s,i,l),h($,i,null),I(i,J),o(s,H,l),h(d,s,l),o(s,c,l),h(m,c,null),I(c,K),o(s,A,l),h(C,s,l),x=!0},p(s,[l]){(!x||l&1)&&e!==(e=s[0].title+"")&&W(a,e);const y={};l&2&&(y.$$scope={dirty:l,ctx:s}),f.$set(y);const k={};l&2&&(k.$$scope={dirty:l,ctx:s}),$.$set(k);const w={};l&2&&(w.$$scope={dirty:l,ctx:s}),m.$set(w)},i(s){x||(E(u.$$.fragment,s),E(f.$$.fragment,s),E($.$$.fragment,s),E(d.$$.fragment,s),E(m.$$.fragment,s),E(C.$$.fragment,s),x=!0)},o(s){b(u.$$.fragment,s),b(f.$$.fragment,s),b($.$$.fragment,s),b(d.$$.fragment,s),b(m.$$.fragment,s),b(C.$$.fragment,s),x=!1},d(s){s&&t(n),s&&t(D),s&&t(r),v(u),v(f),s&&t(q),s&&t(i),v($),s&&t(H),v(d,s),s&&t(c),v(m),s&&t(A),v(C,s)}}}function ls(p,n,e){let a;return X(p,Z,D=>e(0,a=D)),[a]}class fs extends R{constructor(n){super(),T(this,n,ls,as,V,{})}}export{fs as default};
